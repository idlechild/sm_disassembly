
org $908000


AnimateSamus:
    PHP                                                                  ;908000;
    REP #$30                                                             ;908001;
    JSL.L Get_Samus_BottomTop_Boundary                                   ;908003;
    LDA.W $196E                                                          ;908007;
    AND.W #$000F                                                         ;90800A;
    TAX                                                                  ;90800D;
    JSR.W (.pointers,X)                                                  ;90800E;
    LDA.W $0A1C                                                          ;908011;
    CMP.W #$004D                                                         ;908014;
    BEQ .neutralJump                                                     ;908017;
    CMP.W #$004E                                                         ;908019;
    BEQ .neutralJump                                                     ;90801C;
    LDA.W $0A94                                                          ;90801E;
    DEC A                                                                ;908021;
    STA.W $0A94                                                          ;908022;
    BEQ +                                                                ;908025;
    BPL .return                                                          ;908027;

  + LDA.W $0A96                                                          ;908029;
    INC A                                                                ;90802C;
    STA.W $0A96                                                          ;90802D;
    BRA .handleDelay                                                     ;908030;


.neutralJump:
    LDA.W $0B36                                                          ;908032;
    CMP.W #$0002                                                         ;908035;
    BEQ +                                                                ;908038;
    LDA.W $0A96                                                          ;90803A;
    CMP.W #$0001                                                         ;90803D;
    BNE +                                                                ;908040;
    LDA.W $0A94                                                          ;908042;
    CMP.W #$0001                                                         ;908045;
    BNE +                                                                ;908048;
    LDA.W #$0004                                                         ;90804A;
    STA.W $0A94                                                          ;90804D;

  + LDA.W $0A94                                                          ;908050;
    DEC A                                                                ;908053;
    STA.W $0A94                                                          ;908054;
    BEQ .incAnimFrame                                                    ;908057;
    BPL .return                                                          ;908059;

.incAnimFrame:
    LDA.W $0A96                                                          ;90805B;
    INC A                                                                ;90805E;
    STA.W $0A96                                                          ;90805F;

.handleDelay:
    JSR.W Handle_Samus_AnimationDelay                                    ;908062;

.return:
    PLP                                                                  ;908065;
    RTS                                                                  ;908066;


.pointers:
    dw AnimateSamus_FX_None                                              ;908067;
    dw AnimateSamus_FX_Lava                                              ;908069;
    dw AnimateSamus_FX_Acid                                              ;90806B;
    dw AnimateSamus_FX_Water                                             ;90806D;
    dw RTS_908077                                                        ;90806F;
    dw RTS_908077                                                        ;908071;
    dw RTS_908077                                                        ;908073;
    dw RTS_908077                                                        ;908075;

RTS_908077:
    RTS                                                                  ;908077;


AnimateSamus_FX_None:
    LDA.W $0A66                                                          ;908078;
    STA.W $0A9C                                                          ;90807B;
    LDA.W $0AD2                                                          ;90807E;
    BEQ .return                                                          ;908081;
    BIT.W #$0001                                                         ;908083;
    BNE +                                                                ;908086;
    STZ.W $0AD2                                                          ;908088;
    RTS                                                                  ;90808B;


  + STZ.W $0AD2                                                          ;90808C;
    LDA.W #$000E                                                         ;90808F;
    JSL.L QueueSound_Lib2_Max6                                           ;908092;
    LDA.W $0A74                                                          ;908096;
    BIT.W #$0004                                                         ;908099;
    BNE .goto_Spawn_WaterSplash_AirBubbles                               ;90809C;
    LDA.W $0A1F                                                          ;90809E;
    AND.W #$00FF                                                         ;9080A1;
    CMP.W #$0003                                                         ;9080A4;
    BEQ +                                                                ;9080A7;
    CMP.W #$0014                                                         ;9080A9;
    BNE .goto_Spawn_WaterSplash_AirBubbles                               ;9080AC;

  + LDA.W #$0030                                                         ;9080AE;
    JSL.L QueueSound_Lib1_Max6                                           ;9080B1;

.goto_Spawn_WaterSplash_AirBubbles:
    BRA Spawn_WaterSplash_AirBubbles                                     ;9080B5;


.return:
    RTS                                                                  ;9080B7;


AnimateSamus_FX_Water:
    LDA.W $195E                                                          ;9080B8;
    BMI AnimateSamus_FX_None                                             ;9080BB;
    CMP.B $12                                                            ;9080BD;
    BMI +                                                                ;9080BF;
    BRA AnimateSamus_FX_None                                             ;9080C1;


  + LDA.W $197E                                                          ;9080C3;
    BIT.W #$0004                                                         ;9080C6;
    BNE AnimateSamus_FX_None                                             ;9080C9;
    LDA.W SamusPhysicsConstants_AnimationDelayInWater                    ;9080CB;
    STA.W $0A9C                                                          ;9080CE;
    LDA.W $0AD2                                                          ;9080D1;
    CMP.W #$0001                                                         ;9080D4;
    BEQ Spawn_AirBubbles                                                 ;9080D7;
    LDA.W #$0001                                                         ;9080D9;
    STA.W $0AD2                                                          ;9080DC;
    LDA.W #$000D                                                         ;9080DF;
    JSL.L QueueSound_Lib2_Max6                                           ;9080E2;

Spawn_WaterSplash_AirBubbles:
    LDA.W $0A1F                                                          ;9080E6;
    AND.W #$00FF                                                         ;9080E9;
    TAX                                                                  ;9080EC;
    LDA.W WaterSplash_TypeTable,X                                        ;9080ED;
    AND.W #$00FF                                                         ;9080F0;
    BNE .grounded                                                        ;9080F3;
    LDA.W #$0300                                                         ;9080F5;
    STA.W $0AEC                                                          ;9080F8;
    LDA.W #$0002                                                         ;9080FB;
    STA.W $0AD4                                                          ;9080FE;
    LDA.W $0AF6                                                          ;908101;
    STA.W $0ADC                                                          ;908104;
    LDA.W $195E                                                          ;908107;
    STA.W $0AE4                                                          ;90810A;
    BRA Spawn_AirBubbles                                                 ;90810D;


.grounded:
    LDA.W #$0100                                                         ;90810F;
    STA.W $0AEC                                                          ;908112;
    STA.W $0AEE                                                          ;908115;
    LDA.W #$0003                                                         ;908118;
    STA.W $0AD4                                                          ;90811B;
    STA.W $0AD6                                                          ;90811E;
    LDA.W $0AF6                                                          ;908121;
    CLC                                                                  ;908124;
    ADC.W #$0004                                                         ;908125;
    STA.W $0ADC                                                          ;908128;
    SEC                                                                  ;90812B;
    SBC.W #$0007                                                         ;90812C;
    STA.W $0ADE                                                          ;90812F;
    LDA.B $12                                                            ;908132;
    SEC                                                                  ;908134;
    SBC.W #$0004                                                         ;908135;
    STA.W $0AE4                                                          ;908138;
    STA.W $0AE6                                                          ;90813B;

Spawn_AirBubbles:
    LDA.B $14                                                            ;90813E;
    SEC                                                                  ;908140;
    SBC.W #$0018                                                         ;908141;
    CMP.W $195E                                                          ;908144;
    BMI .noBubbles                                                       ;908147;
    LDA.W $05B6                                                          ;908149;
    BIT.W #$007F                                                         ;90814C;
    BNE .noBubbles                                                       ;90814F;
    LDA.W $0AF0                                                          ;908151;
    BNE .noBubbles                                                       ;908154;
    LDA.W #$0500                                                         ;908156;
    STA.W $0AF0                                                          ;908159;
    LDA.W #$0003                                                         ;90815C;
    STA.W $0AD8                                                          ;90815F;
    LDA.W $0AF6                                                          ;908162;
    STA.W $0AE0                                                          ;908165;
    LDA.W $0AFA                                                          ;908168;
    SEC                                                                  ;90816B;
    SBC.W $0B00                                                          ;90816C;
    CLC                                                                  ;90816F;
    ADC.W #$0006                                                         ;908170;
    STA.W $0AE8                                                          ;908173;
    JSL.L GenerateRandomNumber                                           ;908176;
    BIT.W #$0001                                                         ;90817A;
    BEQ .bubblesSFX                                                      ;90817D;
    LDA.W #$000F                                                         ;90817F;
    BRA .queueSFX                                                        ;908182;


.bubblesSFX:
    LDA.W #$0011                                                         ;908184;

.queueSFX:
    JSL.L QueueSound_Lib2_Max6                                           ;908187;

.noBubbles:
    LDA.W $0A1C                                                          ;90818B;
    CMP.W #$0000                                                         ;90818E;
    BEQ .zeroFrameBuffer                                                 ;908191;
    CMP.W #$009B                                                         ;908193;
    BEQ .zeroFrameBuffer                                                 ;908196;
    LDA.W $09A2                                                          ;908198;
    BIT.W #$0020                                                         ;90819B;
    BEQ .return                                                          ;90819E;

.zeroFrameBuffer:
    STZ.W $0A9C                                                          ;9081A0;

.return:
    RTS                                                                  ;9081A3;


WaterSplash_TypeTable:                                                   ;9081A4;
; 0: diving splash, else footstep splashes
    db $01 ;* 0: Standing
    db $00 ; 1: Running
    db $00 ; 2: Normal jumping
    db $00 ; 3: Spin jumping
    db $01 ;* 4: Morph ball - on ground
    db $01 ;* 5: Crouching
    db $00 ; 6: Falling
    db $00 ; 7: Unused
    db $00 ; 8: Morph ball - falling
    db $00 ; 9: Unused
    db $00 ; Ah: Knockback / crystal flash ending
    db $00 ; Bh: Unused
    db $00 ; Ch: Unused
    db $00 ; Dh: Unused
    db $01 ;* Eh: Turning around - on ground
    db $01 ;* Fh: Crouching/standing/morphing/unmorphing transition
    db $01 ;* 10h: Moonwalking
    db $01 ;* 11h: Spring ball - on ground
    db $00 ; 12h: Spring ball - in air
    db $00 ; 13h: Spring ball - falling
    db $00 ; 14h: Wall jumping
    db $01 ;* 15h: Ran into a wall
    db $00 ; 16h: Grappling
    db $00 ; 17h: Turning around - jumping
    db $00 ; 18h: Turning around - falling
    db $00 ; 19h: Damage boost
    db $00 ; 1Ah: Grabbed by Draygon
    db $00 ; 1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

AnimateSamus_FX_Lava:
    LDA.W $1962                                                          ;9081C0;
    BMI .goto_AnimateSamus_FX_None                                       ;9081C3;
    CMP.B $12                                                            ;9081C5;
    BPL .goto_AnimateSamus_FX_None                                       ;9081C7;
    LDA.W $0B3E                                                          ;9081C9;
    BEQ .zeroSpeedTimer                                                  ;9081CC;
    JSL.L Cancel_SpeedBoosting                                           ;9081CE;
    STZ.W $0B42                                                          ;9081D2;
    STZ.W $0B44                                                          ;9081D5;

.zeroSpeedTimer:
    LDA.W $09A2                                                          ;9081D8;
    BIT.W #$0020                                                         ;9081DB;
    BNE .gravityEquipped                                                 ;9081DE;
    LDA.W $09DA                                                          ;9081E0;
    BIT.W #$0007                                                         ;9081E3;
    BNE .periodicDamage                                                  ;9081E6;
    LDA.W $09C2                                                          ;9081E8;
    CMP.W #$0047                                                         ;9081EB;
    BMI .periodicDamage                                                  ;9081EE;
    LDA.W #$002D                                                         ;9081F0;
    JSL.L QueueSound_Lib3_Max3                                           ;9081F3;

.periodicDamage:
    LDA.W $0A4E                                                          ;9081F7;
    CLC                                                                  ;9081FA;
    ADC.W SamusPhysicsConstants_LavaSubDamagePerFrame                    ;9081FB;
    STA.W $0A4E                                                          ;9081FE;
    LDA.W $0A50                                                          ;908201;
    ADC.W SamusPhysicsConstants_LavaDamagePerFrame                       ;908204;
    STA.W $0A50                                                          ;908207;
    BRA AnimateSamus_SubmergedInLavaAcid                                 ;90820A;


  .goto_AnimateSamus_FX_None:
    JMP.W AnimateSamus_FX_None                                           ;90820C;


  .gravityEquipped:
    STZ.W $0A9C                                                          ;90820F;
    LDA.W #$0002                                                         ;908212;
    STA.W $0AD2                                                          ;908215;
    RTS                                                                  ;908218;


AnimateSamus_FX_Acid:
    LDA.W $1962                                                          ;908219;
    BMI AnimateSamus_FX_Lava_goto_AnimateSamus_FX_None                   ;90821C;
    CMP.B $12                                                            ;90821E;
    BPL AnimateSamus_FX_Lava_goto_AnimateSamus_FX_None                   ;908220;
    LDA.W $09DA                                                          ;908222;
    BIT.W #$0007                                                         ;908225;
    BNE +                                                                ;908228;
    LDA.W $09C2                                                          ;90822A;
    CMP.W #$0047                                                         ;90822D;
    BMI +                                                                ;908230;
    LDA.W #$002D                                                         ;908232;
    JSL.L QueueSound_Lib3_Max3                                           ;908235;

  + LDA.W $0A4E                                                          ;908239;
    CLC                                                                  ;90823C;
    ADC.W SamusPhysicsConstants_AcidSubDamagePerFrame                    ;90823D;
    STA.W $0A4E                                                          ;908240;
    LDA.W $0A50                                                          ;908243;
    ADC.W SamusPhysicsConstants_AcidDamagePerFrame                       ;908246;
    STA.W $0A50                                                          ;908249;

AnimateSamus_SubmergedInLavaAcid:
    LDA.W SamusPhysicsConstants_AnimationDelayInLavaAcid                 ;90824C;
    STA.W $0A9C                                                          ;90824F;
    LDA.W #$0002                                                         ;908252;
    STA.W $0AD2                                                          ;908255;
    LDA.B $14                                                            ;908258;
    CMP.W $1962                                                          ;90825A;
    BPL .fullySubmerged                                                  ;90825D;
    LDA.W $0AEC                                                          ;90825F;
    BIT.W #$0400                                                         ;908262;
    BNE .fullySubmerged                                                  ;908265;
    LDA.W #$0400                                                         ;908267;
    STA.W $0AEC                                                          ;90826A;
    STA.W $0AEE                                                          ;90826D;
    STA.W $0AF0                                                          ;908270;
    STA.W $0AF2                                                          ;908273;
    LDA.W #$0003                                                         ;908276;
    STA.W $0AD4                                                          ;908279;
    STA.W $0ADA                                                          ;90827C;
    LDA.W #$8002                                                         ;90827F;
    STA.W $0AD6                                                          ;908282;
    STA.W $0AD8                                                          ;908285;
    LDA.W $1962                                                          ;908288;
    STA.W $0AE4                                                          ;90828B;
    STA.W $0AE6                                                          ;90828E;
    STA.W $0AE8                                                          ;908291;
    STA.W $0AEA                                                          ;908294;
    LDA.W $0AF6                                                          ;908297;
    CLC                                                                  ;90829A;
    ADC.W #$0006                                                         ;90829B;
    STA.W $0ADC                                                          ;90829E;
    SEC                                                                  ;9082A1;
    SBC.W #$0006                                                         ;9082A2;
    STA.W $0ADE                                                          ;9082A5;
    SBC.W #$0000                                                         ;9082A8;
    STA.W $0AE0                                                          ;9082AB;
    SBC.W #$0006                                                         ;9082AE;
    STA.W $0AE2                                                          ;9082B1;
    LDA.W $09DA                                                          ;9082B4;
    BIT.W #$0001                                                         ;9082B7;
    BNE .fullySubmerged                                                  ;9082BA;
    LDA.W #$0010                                                         ;9082BC;
    JSL.L QueueSound_Lib2_Max6                                           ;9082BF;

.fullySubmerged:
    LDA.W $0A1C                                                          ;9082C3;
    CMP.W #$0000                                                         ;9082C6;
    BEQ .zeroBuffer                                                      ;9082C9;
    CMP.W #$009B                                                         ;9082CB;
    BEQ .zeroBuffer                                                      ;9082CE;
    LDA.W $09A2                                                          ;9082D0;
    BIT.W #$0020                                                         ;9082D3;
    BEQ .return                                                          ;9082D6;

.zeroBuffer:
    STZ.W $0A9C                                                          ;9082D8;

.return:
    RTS                                                                  ;9082DB;


Handle_Samus_AnimationDelay:
    PHP                                                                  ;9082DC;
    SEP #$20                                                             ;9082DD;
    PHB                                                                  ;9082DF;
    LDA.B #$91                                                           ;9082E0;
    STA.B $02                                                            ;9082E2;
    PHA                                                                  ;9082E4;
    PLB                                                                  ;9082E5;
    REP #$30                                                             ;9082E6;
    LDY.W $0A96                                                          ;9082E8;
    LDA.W $0A1C                                                          ;9082EB;
    ASL A                                                                ;9082EE;
    TAX                                                                  ;9082EF;
    LDA.L AnimationDelayTable,X                                          ;9082F0;
    STA.B $00                                                            ;9082F4;
    LDA.B [$00],Y                                                        ;9082F6;
    AND.W #$00FF                                                         ;9082F8;
    BIT.W #$0080                                                         ;9082FB;
    BNE +                                                                ;9082FE;
    JSR.W Handle_NormalAnimationDelay                                    ;908300;
    BRA .return                                                          ;908303;


  + JSR.W Handle_SpeedBooster_AnimationDelay                             ;908305;
    TAX                                                                  ;908308;
    BEQ .return                                                          ;908309;
    AND.W #$000F                                                         ;90830B;
    ASL A                                                                ;90830E;
    TAX                                                                  ;90830F;
    JSR.W (.pointers,X)                                                  ;908310;
    BCC .return                                                          ;908313;
    LDA.B [$00],Y                                                        ;908315;
    AND.W #$00FF                                                         ;908317;
    CLC                                                                  ;90831A;
    ADC.W $0A9C                                                          ;90831B;
    STA.W $0A94                                                          ;90831E;

.return:
    PLB                                                                  ;908321;
    PLP                                                                  ;908322;
    RTS                                                                  ;908323;


.pointers:
    dw CLCRTS_908344                                                     ;908324;
    dw CLCRTS_908344                                                     ;908326;
    dw CLCRTS_908344                                                     ;908328;
    dw CLCRTS_908344                                                     ;90832A;
    dw CLCRTS_908344                                                     ;90832C;
    dw CLCRTS_908344                                                     ;90832E;
    dw AnimDelay_6_GotoBeginningIfSamusNotLowEnergy                      ;908330;
    dw AnimDelay_7_SetDrainedSamusMovementHandler                        ;908332;
    dw AnimDelay_8_EnableAutoJumpHack_TransitionToPoseIfNotJumping       ;908334;
    dw AnimDelay_9_TransitionToPoseDependingOnItemEquippedAndYSpeed      ;908336;
    dw UNUSED_AnimDelay_A_TransitionToPoseDependingOnYSpeed_9083F6       ;908338;
    dw AnimDelay_B_SelectAnimDelaySequenceForWallJump                    ;90833A;
    dw UNUSED_AnimDelay_C_TransToPoseDependingOnItemEquipped_90848B      ;90833C;
    dw AnimDelay_D_TransitionToPose                                      ;90833E;
    dw AnimDelay_E_GotoY                                                 ;908340;
    dw AnimDelay_F_GotoBeginning                                         ;908342;

CLCRTS_908344:
    CLC                                                                  ;908344;
    RTS                                                                  ;908345;


AnimDelay_6_GotoBeginningIfSamusNotLowEnergy:
    LDA.W $09C2                                                          ;908346;
    CMP.W #$001E                                                         ;908349;
    BMI .lowEnergy                                                       ;90834C;
    LDY.W #$0000                                                         ;90834E;
    STY.W $0A96                                                          ;908351;
    SEC                                                                  ;908354;
    RTS                                                                  ;908355;


.lowEnergy:
    LDA.W $0A96                                                          ;908356;
    INC A                                                                ;908359;
    STA.W $0A96                                                          ;90835A;
    TAY                                                                  ;90835D;
    SEC                                                                  ;90835E;
    RTS                                                                  ;90835F;


AnimDelay_7_SetDrainedSamusMovementHandler:
    LDA.W #SamusMovementHandler_SamusDrained_Falling                     ;908360;
    STA.W $0A58                                                          ;908363;
    LDA.W $0A96                                                          ;908366;
    INC A                                                                ;908369;
    STA.W $0A96                                                          ;90836A;
    TAY                                                                  ;90836D;
    SEC                                                                  ;90836E;
    RTS                                                                  ;90836F;


AnimDelay_8_EnableAutoJumpHack_TransitionToPoseIfNotJumping:
    LDA.W $0A60                                                          ;908370;
    CMP.W #SamusPoseInputHandler_Demo                                    ;908373;
    BEQ .goto_TransitionToPose                                           ;908376;
    LDA.W $0A28                                                          ;908378;
    CMP.W #$004B                                                         ;90837B;
    BEQ .return                                                          ;90837E;
    CMP.W #$004C                                                         ;908380;
    BEQ .return                                                          ;908383;
    CMP.W #$0019                                                         ;908385;
    BEQ .return                                                          ;908388;
    CMP.W #$001A                                                         ;90838A;
    BEQ .return                                                          ;90838D;
    LDA.W #SamusPoseInputHandler_AutoJumpHack                            ;90838F;
    STA.W $0A60                                                          ;908392;

.goto_TransitionToPose:
    JMP.W AnimDelay_D_TransitionToPose                                   ;908395;


.return:
    CLC                                                                  ;908398;
    RTS                                                                  ;908399;


AnimDelay_9_TransitionToPoseDependingOnItemEquippedAndYSpeed:
    INY                                                                  ;90839A;
    LDA.B [$00],Y                                                        ;90839B;
    STA.B $12                                                            ;90839D;
    LDA.W $09A2                                                          ;90839F;
    BIT.B $12                                                            ;9083A2;
    BNE .equippedItems                                                   ;9083A4;
    LDA.W $0B2E                                                          ;9083A6;
    BNE +                                                                ;9083A9;
    LDA.W $0B2C                                                          ;9083AB;
    BNE +                                                                ;9083AE;
    INY                                                                  ;9083B0;
    INY                                                                  ;9083B1;
    LDA.B [$00],Y                                                        ;9083B2;
    AND.W #$00FF                                                         ;9083B4;
    STA.W $0A2C                                                          ;9083B7;
    BRA .return                                                          ;9083BA;


  + INY                                                                  ;9083BC;
    INY                                                                  ;9083BD;
    INY                                                                  ;9083BE;
    LDA.B [$00],Y                                                        ;9083BF;
    AND.W #$00FF                                                         ;9083C1;
    STA.W $0A2C                                                          ;9083C4;
    BRA .return                                                          ;9083C7;


.equippedItems:
    LDA.W $0B2E                                                          ;9083C9;
    BNE +                                                                ;9083CC;
    LDA.W $0B2C                                                          ;9083CE;
    BNE +                                                                ;9083D1;
    INY                                                                  ;9083D3;
    INY                                                                  ;9083D4;
    INY                                                                  ;9083D5;
    INY                                                                  ;9083D6;
    LDA.B [$00],Y                                                        ;9083D7;
    AND.W #$00FF                                                         ;9083D9;
    STA.W $0A2C                                                          ;9083DC;
    BRA .return                                                          ;9083DF;


  + INY                                                                  ;9083E1;
    INY                                                                  ;9083E2;
    INY                                                                  ;9083E3;
    INY                                                                  ;9083E4;
    INY                                                                  ;9083E5;
    LDA.B [$00],Y                                                        ;9083E6;
    AND.W #$00FF                                                         ;9083E8;
    STA.W $0A2C                                                          ;9083EB;

.return:
    LDA.W #$0003                                                         ;9083EE;
    STA.W $0A32                                                          ;9083F1;
    CLC                                                                  ;9083F4;
    RTS                                                                  ;9083F5;


UNUSED_AnimDelay_A_TransitionToPoseDependingOnYSpeed_9083F6:
    LDA.W $0B2E                                                          ;9083F6;
    BNE .nonZeroYSpeed                                                   ;9083F9;
    LDA.W $0B2C                                                          ;9083FB;
    BNE .nonZeroYSpeed                                                   ;9083FE;
    INY                                                                  ;908400;
    LDA.B [$00],Y                                                        ;908401;
    AND.W #$00FF                                                         ;908403;
    STA.W $0A2C                                                          ;908406;
    BRA +                                                                ;908409;


.nonZeroYSpeed:
    INY                                                                  ;90840B;
    INY                                                                  ;90840C;
    LDA.B [$00],Y                                                        ;90840D;
    AND.W #$00FF                                                         ;90840F;
    STA.W $0A2C                                                          ;908412;

  + LDA.W #$0003                                                         ;908415;
    STA.W $0A32                                                          ;908418;
    CLC                                                                  ;90841B;
    RTS                                                                  ;90841C;


AnimDelay_B_SelectAnimDelaySequenceForWallJump:
    LDA.W $09A2                                                          ;90841D;
    BIT.W #$0020                                                         ;908420;
    BNE .notSubmerged                                                    ;908423;
    JSL.L Get_Samus_BottomTop_Boundary                                   ;908425;
    LDA.W $195E                                                          ;908429;
    BMI .lessThanZero                                                    ;90842C;
    CMP.B $14                                                            ;90842E;
    BPL .notSubmerged                                                    ;908430;
    LDA.W $197E                                                          ;908432;
    BIT.W #$0004                                                         ;908435;
    BNE .notSubmerged                                                    ;908438;
    BRA .submerged                                                       ;90843A;


.lessThanZero:
    LDA.W $1962                                                          ;90843C;
    BMI .notSubmerged                                                    ;90843F;
    CMP.B $14                                                            ;908441;
    BMI .submerged                                                       ;908443;

.notSubmerged:
    LDA.W $09A2                                                          ;908445;
    BIT.W #$0008                                                         ;908448;
    BNE .screwAttack                                                     ;90844B;
    BIT.W #$0200                                                         ;90844D;
    BNE .spaceJump                                                       ;908450;

.submerged:
    LDA.W #$0031                                                         ;908452;
    JSL.L QueueSound_Lib1_Max6                                           ;908455;
    LDA.W $0A96                                                          ;908459;
    INC A                                                                ;90845C;
    STA.W $0A96                                                          ;90845D;
    TAY                                                                  ;908460;
    SEC                                                                  ;908461;
    RTS                                                                  ;908462;


.spaceJump:
    LDA.W #$003E                                                         ;908463;
    JSL.L QueueSound_Lib1_Max6                                           ;908466;
    LDA.W $0A96                                                          ;90846A;
    CLC                                                                  ;90846D;
    ADC.W #$000B                                                         ;90846E;
    STA.W $0A96                                                          ;908471;
    TAY                                                                  ;908474;
    SEC                                                                  ;908475;
    RTS                                                                  ;908476;


.screwAttack:
    LDA.W #$0033                                                         ;908477;
    JSL.L QueueSound_Lib1_Max6                                           ;90847A;
    LDA.W $0A96                                                          ;90847E;
    CLC                                                                  ;908481;
    ADC.W #$0015                                                         ;908482;
    STA.W $0A96                                                          ;908485;
    TAY                                                                  ;908488;
    SEC                                                                  ;908489;
    RTS                                                                  ;90848A;


UNUSED_AnimDelay_C_TransToPoseDependingOnItemEquipped_90848B:
    INY                                                                  ;90848B;
    LDA.B [$00],Y                                                        ;90848C;
    STA.B $12                                                            ;90848E;
    LDA.W $09A2                                                          ;908490;
    BIT.B $12                                                            ;908493;
    BNE .equippedItems                                                   ;908495;
    INY                                                                  ;908497;
    INY                                                                  ;908498;
    LDA.B [$00],Y                                                        ;908499;
    AND.W #$00FF                                                         ;90849B;
    STA.W $0A2C                                                          ;90849E;
    BRA .return                                                          ;9084A1;


.equippedItems:
    INY                                                                  ;9084A3;
    INY                                                                  ;9084A4;
    INY                                                                  ;9084A5;
    LDA.B [$00],Y                                                        ;9084A6;
    AND.W #$00FF                                                         ;9084A8;
    STA.W $0A2C                                                          ;9084AB;

.return:
    LDA.W #$0003                                                         ;9084AE;
    STA.W $0A32                                                          ;9084B1;
    CLC                                                                  ;9084B4;
    RTS                                                                  ;9084B5;


AnimDelay_D_TransitionToPose:
    INY                                                                  ;9084B6;
    LDA.B [$00],Y                                                        ;9084B7;
    AND.W #$00FF                                                         ;9084B9;
    STA.W $0A2C                                                          ;9084BC;
    LDA.W #$0003                                                         ;9084BF;
    STA.W $0A32                                                          ;9084C2;
    CLC                                                                  ;9084C5;
    RTS                                                                  ;9084C6;


AnimDelay_E_GotoY:
    INY                                                                  ;9084C7;
    LDA.B [$00],Y                                                        ;9084C8;
    AND.W #$00FF                                                         ;9084CA;
    STA.B $12                                                            ;9084CD;
    LDA.W $0A96                                                          ;9084CF;
    SEC                                                                  ;9084D2;
    SBC.B $12                                                            ;9084D3;
    STA.W $0A96                                                          ;9084D5;
    TAY                                                                  ;9084D8;
    SEC                                                                  ;9084D9;
    RTS                                                                  ;9084DA;


AnimDelay_F_GotoBeginning:
    LDY.W #$0000                                                         ;9084DB;
    STY.W $0A96                                                          ;9084DE;
    SEC                                                                  ;9084E1;
    RTS                                                                  ;9084E2;


Handle_NormalAnimationDelay:
    PHP                                                                  ;9084E3;
    SEP #$20                                                             ;9084E4;
    PHB                                                                  ;9084E6;
    LDA.B #$91                                                           ;9084E7;
    STA.B $02                                                            ;9084E9;
    PHA                                                                  ;9084EB;
    PLB                                                                  ;9084EC;
    REP #$30                                                             ;9084ED;
    LDA.W $0B3C                                                          ;9084EF;
    BEQ .return                                                          ;9084F2;
    LDA.W $0A1F                                                          ;9084F4;
    AND.W #$00FF                                                         ;9084F7;
    CMP.W #$0001                                                         ;9084FA;
    BNE .return                                                          ;9084FD;
    LDA.W $09A2                                                          ;9084FF;
    BIT.W #$2000                                                         ;908502;
    BEQ .noSpeedBooster                                                  ;908505;
    LDA.W $0B3F                                                          ;908507;
    AND.W #$00FF                                                         ;90850A;
    ASL A                                                                ;90850D;
    TAX                                                                  ;90850E;
    LDA.L AnimationDelayTable_Running_SpeedBooster_pointers,X            ;90850F;
    STA.B $00                                                            ;908513;
    BRA .return                                                          ;908515;


.noSpeedBooster:
    LDA.L AnimationDelayTable_Running_NoSpeedBooster_pointer             ;908517;
    STA.B $00                                                            ;90851B;

.return:
    LDA.B [$00],Y                                                        ;90851D;
    AND.W #$00FF                                                         ;90851F;
    CLC                                                                  ;908522;
    ADC.W $0A9C                                                          ;908523;
    STA.W $0A94                                                          ;908526;
    PLB                                                                  ;908529;
    PLP                                                                  ;90852A;
    RTS                                                                  ;90852B;


Handle_SpeedBooster_AnimationDelay:
    PHP                                                                  ;90852C;
    SEP #$20                                                             ;90852D;
    PHB                                                                  ;90852F;
    LDA.B #$91                                                           ;908530;
    STA.B $02                                                            ;908532;
    PHA                                                                  ;908534;
    PLB                                                                  ;908535;
    REP #$30                                                             ;908536;
    LDA.W $0B3C                                                          ;908538;
    BNE .checkPressingRun                                                ;90853B;
    JMP.W .finish                                                        ;90853D;


.checkPressingRun:
    LDA.B $8B                                                            ;908540;
    BIT.W $09B6                                                          ;908542;
    BNE .checkMovementType                                               ;908545;
    JMP.W .finish                                                        ;908547;


.checkMovementType:
    LDA.W $0A1F                                                          ;90854A;
    AND.W #$00FF                                                         ;90854D;
    CMP.W #$0001                                                         ;908550;
    BEQ .speedBoosterEquipped                                            ;908553;
    JMP.W .finish                                                        ;908555;


.speedBoosterEquipped:
    LDA.W $09A2                                                          ;908558;
    BIT.W #$2000                                                         ;90855B;
    BNE .speedBoostTimer                                                 ;90855E;
    LDY.W #$0000                                                         ;908560;
    STY.W $0A96                                                          ;908563;
    LDA.L AnimationDelayTable_Running_NoSpeedBooster_pointer             ;908566;
    STA.B $00                                                            ;90856A;
    LDA.B [$00],Y                                                        ;90856C;
    AND.W #$00FF                                                         ;90856E;
    CLC                                                                  ;908571;
    ADC.W $0A9C                                                          ;908572;
    STA.W $0A94                                                          ;908575;
    LDA.W #$0000                                                         ;908578;
    BRA .return                                                          ;90857B;


.speedBoostTimer:
    LDA.W $0B3E                                                          ;90857D;
    DEC A                                                                ;908580;
    STA.W $0B3E                                                          ;908581;
    BIT.W #$00FF                                                         ;908584;
    BNE .finish                                                          ;908587;
    LDA.W $0B3E                                                          ;908589;
    BIT.W #$0400                                                         ;90858C;
    BNE +                                                                ;90858F;
    CLC                                                                  ;908591;
    ADC.W #$0100                                                         ;908592;
    STA.W $0B3E                                                          ;908595;
    BIT.W #$0400                                                         ;908598;
    BEQ +                                                                ;90859B;
    LDA.W #$0001                                                         ;90859D;
    STA.W $0B40                                                          ;9085A0;
    LDA.W #$0003                                                         ;9085A3;
    JSL.L QueueSound_Lib3_Max6                                           ;9085A6;

  + XBA                                                                  ;9085AA;
    AND.W #$00FF                                                         ;9085AB;
    ASL A                                                                ;9085AE;
    TAX                                                                  ;9085AF;
    LDA.W $0B3E                                                          ;9085B0;
    AND.W #$FF00                                                         ;9085B3;
    ORA.L SpeedBoostTimerResetValues,X                                   ;9085B6;
    STA.W $0B3E                                                          ;9085BA;
    LDY.W #$0000                                                         ;9085BD;
    STY.W $0A96                                                          ;9085C0;
    LDA.L AnimationDelayTable_Running_SpeedBooster_pointers,X            ;9085C3;
    STA.B $00                                                            ;9085C7;
    LDA.B [$00],Y                                                        ;9085C9;
    AND.W #$00FF                                                         ;9085CB;
    CLC                                                                  ;9085CE;
    ADC.W $0A9C                                                          ;9085CF;
    STA.W $0A94                                                          ;9085D2;
    LDA.W #$0000                                                         ;9085D5;
    BRA .return                                                          ;9085D8;


.finish:
    LDA.B [$00],Y                                                        ;9085DA;
    AND.W #$00FF                                                         ;9085DC;

.return:
    PLB                                                                  ;9085DF;
    PLP                                                                  ;9085E0;
    RTS                                                                  ;9085E1;


Draw_Samus:
    PHP                                                                  ;9085E2;
    PHB                                                                  ;9085E3;
    SEP #$20                                                             ;9085E4;
    LDA.B #$92                                                           ;9085E6;
    PHA                                                                  ;9085E8;
    PLB                                                                  ;9085E9;
    REP #$30                                                             ;9085EA;
    LDA.W $18AA                                                          ;9085EC;
    BNE +                                                                ;9085EF;
    LDA.W $18A8                                                          ;9085F1;
    BEQ +                                                                ;9085F4;
    LDA.W $0A68                                                          ;9085F6;
    BNE +                                                                ;9085F9;
    LDA.W $05B6                                                          ;9085FB;
    BIT.W #$0001                                                         ;9085FE;
    BEQ +                                                                ;908601;
    JMP.W .invisible                                                     ;908603;


  + LDA.W $0A1C                                                          ;908606;
    ASL A                                                                ;908609;
    TAX                                                                  ;90860A;
    PHX                                                                  ;90860B;
    LDA.L SamusSpritemapTableIndices_TopHalf,X                           ;90860C;
    CLC                                                                  ;908610;
    ADC.W $0A96                                                          ;908611;
    STA.W $0AC8                                                          ;908614;
    PHA                                                                  ;908617;
    JSR.W Calculate_SamusSpritemapPosition                               ;908618;
    PLA                                                                  ;90861B;
    JSL.L AddSamusSpritemapToOAM                                         ;90861C;
    PLX                                                                  ;908620;
    STX.B $24                                                            ;908621;
    LDA.W $0A1F                                                          ;908623;
    AND.W #$00FF                                                         ;908626;
    ASL A                                                                ;908629;
    TAX                                                                  ;90862A;
    JSR.W (Draw_Samus_pointers,X)                                        ;90862B;
    BCC .invisible                                                       ;90862E;
    LDX.B $24                                                            ;908630;
    LDA.L SamusSpritemapTableIndices_BottomHalf,X                        ;908632;
    CLC                                                                  ;908636;
    ADC.W $0A96                                                          ;908637;
    STA.W $0ACA                                                          ;90863A;
    LDX.W $0B04                                                          ;90863D;
    LDY.W $0B06                                                          ;908640;
    JSL.L AddSamusSpritemapToOAM                                         ;908643;

.invisible:
    JSL.L Set_SamusTilesDefinitions_ForCurrentAnimation                  ;908647;
    PLB                                                                  ;90864B;
    PLP                                                                  ;90864C;
    RTS                                                                  ;90864D;


Draw_Samus_pointers:
    dw DetermineIf_SamusBottomHalf_IsDrawn_Standing                      ;90864E; 0: Standing
    dw Flag_SamusBottomHalfIsDrawn                                       ;908650; 1: Running
    dw Flag_SamusBottomHalfIsDrawn                                       ;908652; 2: Normal jumping
    dw DetermineIf_SamusBottomHalf_IsDrawn_SpinJumping                   ;908654; 3: Spin jumping
    dw Flag_SamusBottomHalfIsNotDrawn                                    ;908656; 4: Morph ball - on ground
    dw Flag_SamusBottomHalfIsDrawn                                       ;908658; 5: Crouching
    dw Flag_SamusBottomHalfIsDrawn                                       ;90865A; 6: Falling
    dw Flag_SamusBottomHalfIsNotDrawn                                    ;90865C; 7: Unused
    dw Flag_SamusBottomHalfIsNotDrawn                                    ;90865E; 8: Morph ball - falling
    dw Flag_SamusBottomHalfIsNotDrawn                                    ;908660; 9: Unused
    dw DetermineIf_SamusBottomHalf_IsDrawn_Knockback_CFEnding            ;908662; Ah: Knockback
    dw Flag_SamusBottomHalfIsDrawn                                       ;908664; Bh: Unused
    dw Flag_SamusBottomHalfIsDrawn                                       ;908666; Ch: Unused
    dw DetermineIf_SamusBottomHalf_IsDrawn_UnusedMovementTypeD           ;908668; Dh: Unused
    dw Flag_SamusBottomHalfIsDrawn                                       ;90866A; Eh: Turning around - on ground
    dw DetermineIf_SamusBottomHalf_IsDrawn_TransitionPoses               ;90866C; Fh: Crouching/standing/morphing/unmorphing transition
    dw Flag_SamusBottomHalfIsDrawn                                       ;90866E; 10h: Moonwalking
    dw Flag_SamusBottomHalfIsNotDrawn                                    ;908670; 11h: Spring ball - on ground
    dw Flag_SamusBottomHalfIsNotDrawn                                    ;908672; 12h: Spring ball - in air
    dw Flag_SamusBottomHalfIsNotDrawn                                    ;908674; 13h: Spring ball - falling
    dw DetermineIf_SamusBottomHalf_IsDrawn_WallJumping                   ;908676; 14h: Wall jumping
    dw Flag_SamusBottomHalfIsDrawn                                       ;908678; 15h: Ran into a wall
    dw Flag_SamusBottomHalfIsDrawn                                       ;90867A; 16h: Grappling
    dw Flag_SamusBottomHalfIsDrawn                                       ;90867C; 17h: Turning around - jumping
    dw Flag_SamusBottomHalfIsDrawn                                       ;90867E; 18h: Turning around - falling
    dw DetermineIf_SamusBottomHalf_IsDrawn_DamageBoost                   ;908680; 19h: Damage boost
    dw Flag_SamusBottomHalfIsDrawn                                       ;908682; 1Ah: Grabbed by Draygon
    dw DetermineIf_SamusBottomHalf_IsDrawn_Shinespark_CF_Drained         ;908684; 1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

Flag_SamusBottomHalfIsDrawn:
    SEC                                                                  ;908686;
    RTS                                                                  ;908687;


Flag_SamusBottomHalfIsNotDrawn:
    STZ.W $0ACA                                                          ;908688;
    CLC                                                                  ;90868B;
    RTS                                                                  ;90868C;


DetermineIf_SamusBottomHalf_IsDrawn_Standing:
    LDA.W $0A1C                                                          ;90868D;
    CMP.W #$0000                                                         ;908690;
    BEQ .facingForward                                                   ;908693;

.return:
    SEC                                                                  ;908695;
    RTS                                                                  ;908696;


.facingForward:
    LDX.W $0590                                                          ;908697;
    LDA.W $0AF6                                                          ;90869A;
    SEC                                                                  ;90869D;
    SBC.W #$0007                                                         ;90869E;
    SEC                                                                  ;9086A1;
    SBC.W $0911                                                          ;9086A2;
    STA.W $0370,X                                                        ;9086A5;
    LDA.W $0AFA                                                          ;9086A8;
    SEC                                                                  ;9086AB;
    SBC.W #$0011                                                         ;9086AC;
    SEC                                                                  ;9086AF;
    SBC.W $0915                                                          ;9086B0;
    STA.W $0371,X                                                        ;9086B3;
    LDA.W #$3821                                                         ;9086B6;
    STA.W $0372,X                                                        ;9086B9;
    TXA                                                                  ;9086BC;
    CLC                                                                  ;9086BD;
    ADC.W #$0004                                                         ;9086BE;
    STA.W $0590                                                          ;9086C1;
    BRA .return                                                          ;9086C4;


DetermineIf_SamusBottomHalf_IsDrawn_SpinJumping:
    LDA.W $0A1C                                                          ;9086C6;
    CMP.W #$0081                                                         ;9086C9;
    BEQ .returnCarrySet                                                  ;9086CC;
    CMP.W #$0082                                                         ;9086CE;
    BEQ .returnCarrySet                                                  ;9086D1;
    CMP.W #$001B                                                         ;9086D3;
    BEQ .returnCarrySet                                                  ;9086D6;
    CMP.W #$001C                                                         ;9086D8;
    BEQ .returnCarrySet                                                  ;9086DB;
    LDA.W $0A96                                                          ;9086DD;
    BNE .spinning                                                        ;9086E0;

.returnCarrySet:
    SEC                                                                  ;9086E2;
    RTS                                                                  ;9086E3;


.spinning:
    CMP.W #$000B                                                         ;9086E4;
    BPL .returnCarrySet                                                  ;9086E7;
    STZ.W $0ACA                                                          ;9086E9;
    CLC                                                                  ;9086EC;
    RTS                                                                  ;9086ED;


DetermineIf_SamusBottomHalf_IsDrawn_Knockback_CFEnding:
    LDA.W $0A1C                                                          ;9086EE;
    CMP.W #$00D7                                                         ;9086F1;
    BEQ .crystalFlashEnding                                              ;9086F4;
    CMP.W #$00D8                                                         ;9086F6;
    BEQ .crystalFlashEnding                                              ;9086F9;
    BRA .returnCarrySet                                                  ;9086FB;


.crystalFlashEnding:
    LDA.W $0A96                                                          ;9086FD;
    CMP.W #$0003                                                         ;908700;
    BMI .noBottom                                                        ;908703;

.returnCarrySet:
    SEC                                                                  ;908705;
    RTS                                                                  ;908706;


.noBottom:
    STZ.W $0ACA                                                          ;908707;
    CLC                                                                  ;90870A;
    RTS                                                                  ;90870B;


DetermineIf_SamusBottomHalf_IsDrawn_TransitionPoses:
    LDA.W $0A1C                                                          ;90870C;
    CMP.W #$00F1                                                         ;90870F;
    BPL .returnCarrySet                                                  ;908712;
    CMP.W #$00DB                                                         ;908714;
    BPL .unused                                                          ;908717;
    CMP.W #$0035                                                         ;908719;
    BEQ .returnCarrySet                                                  ;90871C;
    CMP.W #$0036                                                         ;90871E;
    BEQ .returnCarrySet                                                  ;908721;
    CMP.W #$003B                                                         ;908723;
    BEQ .returnCarrySet                                                  ;908726;
    CMP.W #$003C                                                         ;908728;
    BEQ .returnCarrySet                                                  ;90872B;
    BRA .noBottom                                                        ;90872D;


.returnCarrySet:
    SEC                                                                  ;90872F;
    RTS                                                                  ;908730;


.noBottom:
    STZ.W $0ACA                                                          ;908731;
    CLC                                                                  ;908734;
    RTS                                                                  ;908735;


.unused:
    CMP.W #$00DD                                                         ;908736;
    BPL .greaterThanDD                                                   ;908739;
    LDA.W $0A96                                                          ;90873B;
    BEQ .returnCarrySet                                                  ;90873E;
    BRA .noBottom                                                        ;908740;


.greaterThanDD:
    LDA.W $0A96                                                          ;908742;
    CMP.W #$0002                                                         ;908745;
    BEQ .returnCarrySet                                                  ;908748;
    BRA .noBottom                                                        ;90874A;


DetermineIf_SamusBottomHalf_IsDrawn_UnusedMovementTypeD:
    LDA.W $0A1C                                                          ;90874C;
    CMP.W #$0065                                                         ;90874F;
    BEQ +                                                                ;908752;
    CMP.W #$0066                                                         ;908754;
    BNE .returnCarrySet                                                  ;908757;

  + LDA.W $0A96                                                          ;908759;
    CMP.W #$0001                                                         ;90875C;
    BPL .noBottom                                                        ;90875F;

.returnCarrySet:
    SEC                                                                  ;908761;
    RTS                                                                  ;908762;


.noBottom:
    STZ.W $0ACA                                                          ;908763;
    CLC                                                                  ;908766;
    RTS                                                                  ;908767;


DetermineIf_SamusBottomHalf_IsDrawn_WallJumping:
    LDA.W $0A96                                                          ;908768;
    CMP.W #$0003                                                         ;90876B;
    BPL .spinning                                                        ;90876E;

.returnCarrySet:
    SEC                                                                  ;908770;
    RTS                                                                  ;908771;


.spinning:
    CMP.W #$000D                                                         ;908772;
    BPL .returnCarrySet                                                  ;908775;
    STZ.W $0ACA                                                          ;908777;
    CLC                                                                  ;90877A;
    RTS                                                                  ;90877B;


DetermineIf_SamusBottomHalf_IsDrawn_DamageBoost:
    LDA.W $0A96                                                          ;90877C;
    CMP.W #$0002                                                         ;90877F;
    BPL .spinning                                                        ;908782;

.returnCarrySet:
    SEC                                                                  ;908784;
    RTS                                                                  ;908785;


.spinning:
    CMP.W #$0009                                                         ;908786;
    BPL .returnCarrySet                                                  ;908789;
    STZ.W $0ACA                                                          ;90878B;
    CLC                                                                  ;90878E;
    RTS                                                                  ;90878F;


DetermineIf_SamusBottomHalf_IsDrawn_Shinespark_CF_Drained:
    LDA.W $0A1C                                                          ;908790;
    CMP.W #$00CF                                                         ;908793;
    BPL .notShinespark                                                   ;908796;
    CMP.W #$00CB                                                         ;908798;
    BEQ .noBottom                                                        ;90879B;
    CMP.W #$00CC                                                         ;90879D;
    BEQ .noBottom                                                        ;9087A0;
    BRA .returnCarrySet                                                  ;9087A2;


.notShinespark:
    CMP.W #$00E8                                                         ;9087A4;
    BEQ +                                                                ;9087A7;
    CMP.W #$00E9                                                         ;9087A9;
    BNE .returnCarrySet                                                  ;9087AC;

  + LDA.W $0A96                                                          ;9087AE;
    CMP.W #$0002                                                         ;9087B1;
    BMI .noBottom                                                        ;9087B4;

.returnCarrySet:
    SEC                                                                  ;9087B6;
    RTS                                                                  ;9087B7;


.noBottom:
    STZ.W $0ACA                                                          ;9087B8;
    CLC                                                                  ;9087BB;
    RTS                                                                  ;9087BC;


DrawSamusEchoes:
    PHP                                                                  ;9087BD;
    REP #$30                                                             ;9087BE;
    LDA.W $0AAE                                                          ;9087C0;
    BMI .mergingEchoes                                                   ;9087C3;
    LDA.W $0B3E                                                          ;9087C5;
    AND.W #$FF00                                                         ;9087C8;
    CMP.W #$0400                                                         ;9087CB;
    BEQ +                                                                ;9087CE;
    PLP                                                                  ;9087D0;
    RTS                                                                  ;9087D1;


  + LDA.W $0AB2                                                          ;9087D2;
    BEQ +                                                                ;9087D5;
    LDY.W #$0002                                                         ;9087D7;
    JSR.W DrawSamusEcho                                                  ;9087DA;

  + LDA.W $0AB0                                                          ;9087DD;
    BEQ .returnUpper                                                     ;9087E0;
    LDY.W #$0000                                                         ;9087E2;
    JSR.W DrawSamusEcho                                                  ;9087E5;

.returnUpper:
    PLP                                                                  ;9087E8;
    RTS                                                                  ;9087E9;


.mergingEchoes:
    LDY.W #$0002                                                         ;9087EA;

.loop:
    LDA.W $0AB0,Y                                                        ;9087ED;
    BEQ .next                                                            ;9087F0;
    LDA.W $0AB8,Y                                                        ;9087F2;
    CMP.W $0AFA                                                          ;9087F5;
    BEQ .noYAdjustment                                                   ;9087F8;
    BMI +                                                                ;9087FA;
    SEC                                                                  ;9087FC;
    SBC.W #$0002                                                         ;9087FD;
    STA.W $0AB8,Y                                                        ;908800;
    BRA .noYAdjustment                                                   ;908803;


  + CLC                                                                  ;908805;
    ADC.W #$0002                                                         ;908806;
    STA.W $0AB8,Y                                                        ;908809;

.noYAdjustment:
    LDA.W $0AC0,Y                                                        ;90880C;
    BMI .positive                                                        ;90880F;
    LDA.W $0AB0,Y                                                        ;908811;
    CLC                                                                  ;908814;
    ADC.W $0AC0,Y                                                        ;908815;
    STA.W $0AB0,Y                                                        ;908818;
    CMP.W $0AF6                                                          ;90881B;
    BMI .drawEcho                                                        ;90881E;
    LDA.W #$0000                                                         ;908820;
    STA.W $0AB0,Y                                                        ;908823;
    BRA .next                                                            ;908826;


.positive:
    LDA.W $0AB0,Y                                                        ;908828;
    CLC                                                                  ;90882B;
    ADC.W $0AC0,Y                                                        ;90882C;
    STA.W $0AB0,Y                                                        ;90882F;
    CMP.W $0AF6                                                          ;908832;
    BPL .drawEcho                                                        ;908835;
    LDA.W #$0000                                                         ;908837;
    STA.W $0AB0,Y                                                        ;90883A;
    BRA .next                                                            ;90883D;


.drawEcho:
    JSR.W DrawSamusEcho                                                  ;90883F;

.next:
    DEY                                                                  ;908842;
    DEY                                                                  ;908843;
    BPL .loop                                                            ;908844;
    LDA.W $0AB2                                                          ;908846;
    BNE .returnLower                                                     ;908849;
    LDA.W $0AB0                                                          ;90884B;
    BNE .returnLower                                                     ;90884E;
    STZ.W $0AAE                                                          ;908850;

.returnLower:
    PLP                                                                  ;908853;
    RTS                                                                  ;908854;


DrawSamusEcho:
    PHY                                                                  ;908855;
    LDA.W $0A1C                                                          ;908856;
    ASL A                                                                ;908859;
    ASL A                                                                ;90885A;
    ASL A                                                                ;90885B;
    TAX                                                                  ;90885C;
    LDA.L PoseDefinitions_YOffset,X                                      ;90885D;
    AND.W #$00FF                                                         ;908861;
    STA.B $12                                                            ;908864;
    LDA.W $0AB0,Y                                                        ;908866;
    SEC                                                                  ;908869;
    SBC.W $0911                                                          ;90886A;
    TAX                                                                  ;90886D;
    LDA.W $0AB8,Y                                                        ;90886E;
    SEC                                                                  ;908871;
    SBC.B $12                                                            ;908872;
    SBC.W $0915                                                          ;908874;
    BMI +                                                                ;908877;
    CMP.W #$00F8                                                         ;908879;
    BMI .addSpritemap                                                    ;90887C;

  + PLY                                                                  ;90887E;
    RTS                                                                  ;90887F;


.addSpritemap:
    TAY                                                                  ;908880;
    LDA.W $0AC8                                                          ;908881;
    JSL.L AddSamusSpritemapToOAM                                         ;908884;
    PLY                                                                  ;908888;
    LDA.W $0ACA                                                          ;908889;
    BEQ .return                                                          ;90888C;
    LDA.W $0A1C                                                          ;90888E;
    ASL A                                                                ;908891;
    ASL A                                                                ;908892;
    ASL A                                                                ;908893;
    TAX                                                                  ;908894;
    LDA.L PoseDefinitions_YOffset,X                                      ;908895;
    AND.W #$00FF                                                         ;908899;
    STA.B $12                                                            ;90889C;
    PHY                                                                  ;90889E;
    LDA.W $0AB0,Y                                                        ;90889F;
    SEC                                                                  ;9088A2;
    SBC.W $0911                                                          ;9088A3;
    TAX                                                                  ;9088A6;
    LDA.W $0AB8,Y                                                        ;9088A7;
    SEC                                                                  ;9088AA;
    SBC.B $12                                                            ;9088AB;
    SBC.W $0915                                                          ;9088AD;
    TAY                                                                  ;9088B0;
    LDA.W $0ACA                                                          ;9088B1;
    JSL.L AddSamusSpritemapToOAM                                         ;9088B4;
    PLY                                                                  ;9088B8;

.return:
    RTS                                                                  ;9088B9;


DrawShinesparkCrashEchoCircle:
    PHP                                                                  ;9088BA;
    PHB                                                                  ;9088BB;
    SEP #$20                                                             ;9088BC;
    LDA.B #$92                                                           ;9088BE;
    PHA                                                                  ;9088C0;
    PLB                                                                  ;9088C1;
    REP #$30                                                             ;9088C2;
    TXY                                                                  ;9088C4;
    LDA.W $05B6                                                          ;9088C5;
    BIT.W #$0001                                                         ;9088C8;
    BNE +                                                                ;9088CB;
    JMP.W .return                                                        ;9088CD;


  + LDA.W $0A1C                                                          ;9088D0;
    ASL A                                                                ;9088D3;
    TAX                                                                  ;9088D4;
    PHX                                                                  ;9088D5;
    PHY                                                                  ;9088D6;
    LDA.L SamusSpritemapTableIndices_TopHalf,X                           ;9088D7;
    CLC                                                                  ;9088DB;
    ADC.W $0A96                                                          ;9088DC;
    PHA                                                                  ;9088DF;
    TXA                                                                  ;9088E0;
    ASL A                                                                ;9088E1;
    ASL A                                                                ;9088E2;
    TAX                                                                  ;9088E3;
    LDA.L PoseDefinitions_YOffset,X                                      ;9088E4;
    AND.W #$00FF                                                         ;9088E8;
    STA.B $12                                                            ;9088EB;
    LDA.W $0AB0,Y                                                        ;9088ED;
    SEC                                                                  ;9088F0;
    SBC.W $0911                                                          ;9088F1;
    TAX                                                                  ;9088F4;
    LDA.W $0AB8,Y                                                        ;9088F5;
    SEC                                                                  ;9088F8;
    SBC.B $12                                                            ;9088F9;
    SBC.W $0915                                                          ;9088FB;
    BMI .pullReturn                                                      ;9088FE;
    CMP.W #$00F8                                                         ;908900;
    BMI +                                                                ;908903;

.pullReturn:
    PLA                                                                  ;908905;
    PLY                                                                  ;908906;
    PLX                                                                  ;908907;
    BRA .return                                                          ;908908;


  + TAY                                                                  ;90890A;
    PLA                                                                  ;90890B;
    JSL.L AddSamusSpritemapToOAM                                         ;90890C;
    PLY                                                                  ;908910;
    PLX                                                                  ;908911;
    STX.B $24                                                            ;908912;
    LDA.W $0A1F                                                          ;908914;
    AND.W #$00FF                                                         ;908917;
    ASL A                                                                ;90891A;
    TAX                                                                  ;90891B;
    JSR.W (Draw_Samus_pointers,X)                                        ;90891C;
    BCC .return                                                          ;90891F;
    LDX.B $24                                                            ;908921;
    LDA.L SamusSpritemapTableIndices_BottomHalf,X                        ;908923;
    CLC                                                                  ;908927;
    ADC.W $0A96                                                          ;908928;
    PHA                                                                  ;90892B;
    TXA                                                                  ;90892C;
    ASL A                                                                ;90892D;
    ASL A                                                                ;90892E;
    TAX                                                                  ;90892F;
    LDA.L PoseDefinitions_YOffset,X                                      ;908930;
    AND.W #$00FF                                                         ;908934;
    STA.B $12                                                            ;908937;
    LDA.W $0AB0,Y                                                        ;908939;
    SEC                                                                  ;90893C;
    SBC.W $0911                                                          ;90893D;
    TAX                                                                  ;908940;
    LDA.W $0AB8,Y                                                        ;908941;
    SEC                                                                  ;908944;
    SBC.B $12                                                            ;908945;
    SBC.W $0915                                                          ;908947;
    TAY                                                                  ;90894A;
    PLA                                                                  ;90894B;
    JSL.L AddSamusSpritemapToOAM                                         ;90894C;

.return:
    PLB                                                                  ;908950;
    PLP                                                                  ;908951;
    RTS                                                                  ;908952;


DrawShinesparkCrashEchoProjectiles:
    PHP                                                                  ;908953;
    REP #$30                                                             ;908954;
    LDA.W $05B6                                                          ;908956;
    BIT.W #$0001                                                         ;908959;
    BEQ .return                                                          ;90895C;
    LDA.W $0AC6                                                          ;90895E;
    BEQ +                                                                ;908961;
    LDY.W #$0006                                                         ;908963;
    JSR.W DrawSamusEcho                                                  ;908966;

  + LDA.W $0AC4                                                          ;908969;
    BEQ .return                                                          ;90896C;
    LDY.W #$0004                                                         ;90896E;
    JSR.W DrawSamusEcho                                                  ;908971;

.return:
    PLP                                                                  ;908974;
    RTL                                                                  ;908975;


Draw_Samus_Starting_Death_Animation:
    PHP                                                                  ;908976;
    PHB                                                                  ;908977;
    PHK                                                                  ;908978;
    PLB                                                                  ;908979;
    REP #$30                                                             ;90897A;
    LDA.W $0A94                                                          ;90897C;
    DEC A                                                                ;90897F;
    STA.W $0A94                                                          ;908980;
    BEQ +                                                                ;908983;
    BPL .drawDeath                                                       ;908985;

  + LDA.W $0A96                                                          ;908987;
    INC A                                                                ;90898A;
    STA.W $0A96                                                          ;90898B;
    JSR.W Handle_Samus_AnimationDelay                                    ;90898E;

.drawDeath:
    JSL.L Draw_Samus_During_Death_Animation                              ;908991;
    PLB                                                                  ;908995;
    PLP                                                                  ;908996;
    RTL                                                                  ;908997;


Draw_Samus_During_Death_Animation:
    PHP                                                                  ;908998;
    PHB                                                                  ;908999;
    SEP #$20                                                             ;90899A;
    LDA.B #$92                                                           ;90899C;
    PHA                                                                  ;90899E;
    PLB                                                                  ;90899F;
    REP #$30                                                             ;9089A0;
    LDA.W $0A1C                                                          ;9089A2;
    ASL A                                                                ;9089A5;
    TAX                                                                  ;9089A6;
    PHX                                                                  ;9089A7;
    LDA.L SamusSpritemapTableIndices_TopHalf,X                           ;9089A8;
    CLC                                                                  ;9089AC;
    ADC.W $0A96                                                          ;9089AD;
    PHA                                                                  ;9089B0;
    JSR.W Calculate_SamusSpritemapPosition                               ;9089B1;
    LDA.W $0B04                                                          ;9089B4;
    CLC                                                                  ;9089B7;
    ADC.W $0911                                                          ;9089B8;
    TAX                                                                  ;9089BB;
    LDA.W $0B06                                                          ;9089BC;
    CLC                                                                  ;9089BF;
    ADC.W $0915                                                          ;9089C0;
    TAY                                                                  ;9089C3;
    PLA                                                                  ;9089C4;
    JSL.L AddSamusSpritemapToOAM                                         ;9089C5;
    PLX                                                                  ;9089C9;
    STX.B $24                                                            ;9089CA;
    LDA.W $0A1F                                                          ;9089CC;
    AND.W #$00FF                                                         ;9089CF;
    ASL A                                                                ;9089D2;
    TAX                                                                  ;9089D3;
    JSR.W (Draw_Samus_pointers,X)                                        ;9089D4;
    BCC .setDefinitions                                                  ;9089D7;
    LDX.B $24                                                            ;9089D9;
    LDA.L SamusSpritemapTableIndices_BottomHalf,X                        ;9089DB;
    CLC                                                                  ;9089DF;
    ADC.W $0A96                                                          ;9089E0;
    PHA                                                                  ;9089E3;
    LDA.W $0B04                                                          ;9089E4;
    CLC                                                                  ;9089E7;
    ADC.W $0911                                                          ;9089E8;
    TAX                                                                  ;9089EB;
    LDA.W $0B06                                                          ;9089EC;
    CLC                                                                  ;9089EF;
    ADC.W $0915                                                          ;9089F0;
    TAY                                                                  ;9089F3;
    PLA                                                                  ;9089F4;
    JSL.L AddSamusSpritemapToOAM                                         ;9089F5;

.setDefinitions:
    JSL.L Set_SamusTilesDefinitions_ForCurrentAnimation                  ;9089F9;
    PLB                                                                  ;9089FD;
    PLP                                                                  ;9089FE;
    RTL                                                                  ;9089FF;


Draw_Inanimate_Samus:
    PHP                                                                  ;908A00;
    PHB                                                                  ;908A01;
    SEP #$20                                                             ;908A02;
    LDA.B #$92                                                           ;908A04;
    PHA                                                                  ;908A06;
    PLB                                                                  ;908A07;
    REP #$30                                                             ;908A08;
    LDA.W $0A1C                                                          ;908A0A;
    ASL A                                                                ;908A0D;
    TAX                                                                  ;908A0E;
    PHX                                                                  ;908A0F;
    LDA.L SamusSpritemapTableIndices_TopHalf,X                           ;908A10;
    CLC                                                                  ;908A14;
    ADC.W $0A96                                                          ;908A15;
    PHA                                                                  ;908A18;
    JSR.W Calculate_SamusSpritemapPosition                               ;908A19;
    PLA                                                                  ;908A1C;
    JSL.L AddSamusSpritemapToOAM                                         ;908A1D;
    PLX                                                                  ;908A21;
    STX.B $24                                                            ;908A22;
    LDA.W $0A1F                                                          ;908A24;
    AND.W #$00FF                                                         ;908A27;
    ASL A                                                                ;908A2A;
    TAX                                                                  ;908A2B;
    JSR.W (Draw_Samus_pointers,X)                                        ;908A2C;
    BCC .setDefinitions                                                  ;908A2F;
    LDX.B $24                                                            ;908A31;
    LDA.L SamusSpritemapTableIndices_BottomHalf,X                        ;908A33;
    CLC                                                                  ;908A37;
    ADC.W $0A96                                                          ;908A38;
    LDX.W $0B04                                                          ;908A3B;
    LDY.W $0B06                                                          ;908A3E;
    JSL.L AddSamusSpritemapToOAM                                         ;908A41;

.setDefinitions:
    JSL.L Set_SamusTilesDefinitions_ForCurrentAnimation                  ;908A45;
    PLB                                                                  ;908A49;
    PLP                                                                  ;908A4A;
    RTL                                                                  ;908A4B;


Handle_AtmosphericEffects:
    PHP                                                                  ;908A4C;
    REP #$30                                                             ;908A4D;
    LDY.W #$0006                                                         ;908A4F;

.loop:
    LDA.W $0AEC,Y                                                        ;908A52;
    BEQ .next                                                            ;908A55;
    PHA                                                                  ;908A57;
    AND.W #$00FF                                                         ;908A58;
    ASL A                                                                ;908A5B;
    STA.B $12                                                            ;908A5C;
    PLA                                                                  ;908A5E;
    XBA                                                                  ;908A5F;
    AND.W #$00FF                                                         ;908A60;
    ASL A                                                                ;908A63;
    TAX                                                                  ;908A64;
    LDA.W $0AD4,Y                                                        ;908A65;
    DEC A                                                                ;908A68;
    STA.W $0AD4,Y                                                        ;908A69;
    BEQ +                                                                ;908A6C;
    BPL .execute                                                         ;908A6E;
    CMP.W #$8000                                                         ;908A70;
    BNE .next                                                            ;908A73;
    PHX                                                                  ;908A75;
    LDA.W AtmosphericGraphics_AnimationTimers,X                          ;908A76;
    CLC                                                                  ;908A79;
    ADC.B $12                                                            ;908A7A;
    TAX                                                                  ;908A7C;
    LDA.W $0000,X                                                        ;908A7D;
    STA.W $0AD4,Y                                                        ;908A80;
    PLX                                                                  ;908A83;
    BRA .execute                                                         ;908A84;


  + PHX                                                                  ;908A86;
    LDA.W AtmosphericGraphics_AnimationTimers,X                          ;908A87;
    CLC                                                                  ;908A8A;
    ADC.B $12                                                            ;908A8B;
    TAX                                                                  ;908A8D;
    LDA.W $0000,X                                                        ;908A8E;
    STA.W $0AD4,Y                                                        ;908A91;
    PLX                                                                  ;908A94;
    LDA.W $0AEC,Y                                                        ;908A95;
    INC A                                                                ;908A98;
    STA.W $0AEC,Y                                                        ;908A99;
    AND.W #$00FF                                                         ;908A9C;
    CMP.W AtmosphericGraphics_NumberOfAnimationFrames,X                  ;908A9F;
    BMI .execute                                                         ;908AA2;
    LDA.W #$0000                                                         ;908AA4;
    STA.W $0AEC,Y                                                        ;908AA7;
    BRA .next                                                            ;908AAA;


.execute:
    JSR.W (.pointers,X)                                                  ;908AAC;

.next:
    DEY                                                                  ;908AAF;
    DEY                                                                  ;908AB0;
    BPL .loop                                                            ;908AB1;
    PLP                                                                  ;908AB3;
    RTS                                                                  ;908AB4;


.pointers:
    dw $0000                                                             ;908AB5;
    dw AtmosphericEffects_1_2_FootstepSplashes                           ;908AB7;
    dw AtmosphericEffects_1_2_FootstepSplashes                           ;908AB9;
    dw AtmosphericEffects_3_DivingSplash                                 ;908ABB;
    dw AtmosphericEffects_4_LavaSurfaceDamage                            ;908ABD;
    dw AtmosphericEffects_5_Bubbles                                      ;908ABF;
    dw AtmosphericEffects_6_7_Dust                                       ;908AC1;
    dw AtmosphericEffects_6_7_Dust                                       ;908AC3;

AtmosphericEffects_1_2_FootstepSplashes:
    PHY                                                                  ;908AC5;
    LDA.W $0AEC,Y                                                        ;908AC6;
    AND.W #$00FF                                                         ;908AC9;
    ASL A                                                                ;908ACC;
    STA.B $12                                                            ;908ACD;
    PHX                                                                  ;908ACF;
    LDX.W $0590                                                          ;908AD0;
    LDA.W $0ADC,Y                                                        ;908AD3;
    SEC                                                                  ;908AD6;
    SBC.W $0911                                                          ;908AD7;
    SBC.W #$0004                                                         ;908ADA;
    BMI .return                                                          ;908ADD;
    CMP.W #$0100                                                         ;908ADF;
    BPL .return                                                          ;908AE2;
    STA.W $0370,X                                                        ;908AE4;
    LDA.W $0AE4,Y                                                        ;908AE7;
    SEC                                                                  ;908AEA;
    SBC.W $0915                                                          ;908AEB;
    SBC.W #$0004                                                         ;908AEE;
    BMI .return                                                          ;908AF1;
    CMP.W #$0100                                                         ;908AF3;
    BPL .return                                                          ;908AF6;
    STA.W $0371,X                                                        ;908AF8;
    PLY                                                                  ;908AFB;
    LDA.W AtmosphericGraphics_SpriteTileNumberAttributes,Y               ;908AFC;
    CLC                                                                  ;908AFF;
    ADC.B $12                                                            ;908B00;
    TAY                                                                  ;908B02;
    LDA.W $0000,Y                                                        ;908B03;
    STA.W $0372,X                                                        ;908B06;
    TXA                                                                  ;908B09;
    CLC                                                                  ;908B0A;
    ADC.W #$0004                                                         ;908B0B;
    STA.W $0590                                                          ;908B0E;
    PLY                                                                  ;908B11;
    RTS                                                                  ;908B12;


.return:
    PLY                                                                  ;908B13;
    PLY                                                                  ;908B14;
    RTS                                                                  ;908B15;


AtmosphericEffects_3_DivingSplash:
    PHY                                                                  ;908B16;
    LDA.W $0AEC,Y                                                        ;908B17;
    AND.W #$00FF                                                         ;908B1A;
    STA.B $12                                                            ;908B1D;
    LDA.W $195E                                                          ;908B1F;
    STA.W $0AE4,Y                                                        ;908B22;
    LDA.W #$018F                                                         ;908B25;
    CLC                                                                  ;908B28;
    ADC.B $12                                                            ;908B29;
    PHA                                                                  ;908B2B;
    BRA AddAtmosphericSpritemapToOAM                                     ;908B2C;


AtmosphericEffects_4_LavaSurfaceDamage:
    TYA                                                                  ;908B2E;
    BIT.W #$0004                                                         ;908B2F;
    BNE .greaterThanEqualTo4                                             ;908B32;
    LDA.W $0ADC,Y                                                        ;908B34;
    CLC                                                                  ;908B37;
    ADC.W #$0001                                                         ;908B38;
    STA.W $0ADC,Y                                                        ;908B3B;
    BRA +                                                                ;908B3E;


.greaterThanEqualTo4:
    LDA.W $0ADC,Y                                                        ;908B40;
    SEC                                                                  ;908B43;
    SBC.W #$0001                                                         ;908B44;
    STA.W $0ADC,Y                                                        ;908B47;

  + LDA.W $0AE4,Y                                                        ;908B4A;
    SEC                                                                  ;908B4D;
    SBC.W #$0001                                                         ;908B4E;
    STA.W $0AE4,Y                                                        ;908B51;
    JMP.W AtmosphericEffects_1_2_FootstepSplashes                        ;908B54;


AtmosphericEffects_6_7_Dust:
    LDA.W $0AE4,Y                                                        ;908B57;
    SEC                                                                  ;908B5A;
    SBC.W #$0001                                                         ;908B5B;
    STA.W $0AE4,Y                                                        ;908B5E;
    JMP.W AtmosphericEffects_1_2_FootstepSplashes                        ;908B61;


AtmosphericEffects_5_Bubbles:
    PHY                                                                  ;908B64;
    LDA.W $0AEC,Y                                                        ;908B65;
    AND.W #$00FF                                                         ;908B68;
    STA.B $12                                                            ;908B6B;
    LDA.W #$0186                                                         ;908B6D;
    CLC                                                                  ;908B70;
    ADC.B $12                                                            ;908B71;
    PHA                                                                  ;908B73;

AddAtmosphericSpritemapToOAM:
    LDA.W $0ADC,Y                                                        ;908B74;
    SEC                                                                  ;908B77;
    SBC.W $0911                                                          ;908B78;
    TAX                                                                  ;908B7B;
    LDA.W $0AE4,Y                                                        ;908B7C;
    SEC                                                                  ;908B7F;
    SBC.W $0915                                                          ;908B80;
    BIT.W #$FF00                                                         ;908B83;
    BNE .return                                                          ;908B86;
    TAY                                                                  ;908B88;
    PLA                                                                  ;908B89;
    JSL.L AddSamusSpritemapToOAM                                         ;908B8A;
    PLY                                                                  ;908B8E;
    RTS                                                                  ;908B8F;


.return:
    PLA                                                                  ;908B90;
    PLY                                                                  ;908B91;
    RTS                                                                  ;908B92;


AtmosphericGraphics_AnimationTimers:
; Indexed by [atmospheric graphics type] * 2
    dw $0000                                                             ;908B93;
    dw AtmosphericGraphics_1_FootstepSplashes                            ;908B95;
    dw AtmosphericGraphics_2_FootstepSplashes                            ;908B97;
    dw AtmosphericGraphics_3_DivingSplash                                ;908B99;
    dw AtmosphericGraphics_4_LavaSurfaceDamage                           ;908B9B;
    dw AtmosphericGraphics_5_Bubbles                                     ;908B9D;
    dw AtmosphericGraphics_6_Dust                                        ;908B9F;
    dw AtmosphericGraphics_7_Dust                                        ;908BA1;
    dw $0000                                                             ;908BA3;

; Indexed by [atmospheric graphics animation frame] * 2
AtmosphericGraphics_1_FootstepSplashes:
    dw $0003,$0003,$0003,$0003                                           ;908BA5;

AtmosphericGraphics_2_FootstepSplashes:
    dw $0003,$0003,$0003,$0003                                           ;908BAD;

AtmosphericGraphics_3_DivingSplash:
    dw $0002,$0002,$0003,$0003,$0003,$0005,$0005,$0006                   ;908BB5;
    dw $0007                                                             ;908BC5;

AtmosphericGraphics_4_LavaSurfaceDamage:
    dw $0002,$0002,$0002,$0002                                           ;908BC7;

AtmosphericGraphics_5_Bubbles:
    dw $0005,$0005,$0005,$0005,$0005,$0005,$0005,$0005                   ;908BCF;

AtmosphericGraphics_6_Dust:
    dw $0003,$0004,$0005,$0006                                           ;908BDF;

AtmosphericGraphics_7_Dust:
    dw $0003,$0004,$0005,$0006                                           ;908BE7;

AtmosphericGraphics_NumberOfAnimationFrames:
; Indexed by [atmospheric graphics type] * 2
    dw $0000,$0004,$0004,$0009,$0004,$0008,$0004,$0004                   ;908BEF;

AtmosphericGraphics_SpriteTileNumberAttributes:
; Indexed by [atmospheric graphics type] * 2
    dw $0000                                                             ;908BFF;
    dw AtmosphericGraphics_SpriteTileNumberAttributes_1_Footstep         ;908C01;
    dw $0000                                                             ;908C03;
    dw $0000                                                             ;908C05;
    dw AtmosphericGraphics_SpriteTileNumberAttribute_4_6_7_LavaDust      ;908C07;
    dw $0000                                                             ;908C09;
    dw AtmosphericGraphics_SpriteTileNumberAttribute_4_6_7_LavaDust      ;908C0B;
    dw AtmosphericGraphics_SpriteTileNumberAttribute_4_6_7_LavaDust      ;908C0D;

AtmosphericGraphics_SpriteTileNumberAttributes_1_Footstep:
; Indexed by [atmospheric graphics animation frame] * 2
    dw $2A2C,$2A2D,$2A2E,$2A2F                                           ;908C0F;

AtmosphericGraphics_SpriteTileNumberAttribute_4_6_7_LavaDust:
    dw $2A48,$2A49,$2A4A,$2A4B                                           ;908C17;

Calculate_SamusSpritemapPosition:
    LDA.W $093F                                                          ;908C1F;
    BPL .notCeres                                                        ;908C22;
    LDA.W $0AF6                                                          ;908C24;
    STA.W $0D82                                                          ;908C27;
    LDA.W $0AFA                                                          ;908C2A;
    STA.W $0D84                                                          ;908C2D;
    PHX                                                                  ;908C30;
    JSL.L Calculate_SamusPosition_InRotatingElevatorRoom                 ;908C31;
    PLX                                                                  ;908C35;
    TXY                                                                  ;908C36;
    LDA.W $0A1F                                                          ;908C37;
    AND.W #$00FF                                                         ;908C3A;
    ASL A                                                                ;908C3D;
    TAX                                                                  ;908C3E;
    JSR.W (.pointers,X)                                                  ;908C3F;
    LDA.W $0D84                                                          ;908C42;
    STA.W $0AFA                                                          ;908C45;
    LDA.W $0D82                                                          ;908C48;
    STA.W $0AF6                                                          ;908C4B;
    RTS                                                                  ;908C4E;


.notCeres:
    TXY                                                                  ;908C4F;
    LDA.W $0A1F                                                          ;908C50;
    AND.W #$00FF                                                         ;908C53;
    ASL A                                                                ;908C56;
    TAX                                                                  ;908C57;
    JSR.W (.pointers,X)                                                  ;908C58;
    RTS                                                                  ;908C5B;


.pointers:
    dw CalculateSamusSpritemapPosition_Standing                          ;908C5C; *0: Standing
    dw CalculateUsualSamusSpritemapPosition                              ;908C5E;  1: Running
    dw CalculateUsualSamusSpritemapPosition                              ;908C60;  2: Normal jumping
    dw CalculateUsualSamusSpritemapPosition                              ;908C62;  3: Spin jumping
    dw CalculateUsualSamusSpritemapPosition                              ;908C64;  4: Morph ball - on ground
    dw CalculateUsualSamusSpritemapPosition                              ;908C66;  5: Crouching
    dw CalculateUsualSamusSpritemapPosition                              ;908C68;  6: Falling
    dw CalculateUsualSamusSpritemapPosition                              ;908C6A;  7: Unused
    dw CalculateUsualSamusSpritemapPosition                              ;908C6C;  8: Morph ball - falling
    dw CalculateUsualSamusSpritemapPosition                              ;908C6E;  9: Unused
    dw CalculateUsualSamusSpritemapPosition                              ;908C70;  Ah: Knockback
    dw CalculateUsualSamusSpritemapPosition                              ;908C72;  Bh: Unused
    dw CalculateUsualSamusSpritemapPosition                              ;908C74;  Ch: Unused
    dw CalculateUsualSamusSpritemapPosition                              ;908C76;  Dh: Unused
    dw CalculateUsualSamusSpritemapPosition                              ;908C78;  Eh: Turning around - on ground
    dw CalculateSamusSpritemapPosition_TransitionPoses                   ;908C7A; *Fh: Crouching/standing/morphing/unmorphing transition
    dw CalculateUsualSamusSpritemapPosition                              ;908C7C;  10h: Moonwalking
    dw CalculateUsualSamusSpritemapPosition                              ;908C7E;  11h: Spring ball - on ground
    dw CalculateUsualSamusSpritemapPosition                              ;908C80;  12h: Spring ball - in air
    dw CalculateUsualSamusSpritemapPosition                              ;908C82;  13h: Spring ball - falling
    dw CalculateUsualSamusSpritemapPosition                              ;908C84;  14h: Wall jumping
    dw CalculateUsualSamusSpritemapPosition                              ;908C86;  15h: Ran into a wall
    dw CalculateUsualSamusSpritemapPosition                              ;908C88;  16h: Grappling
    dw CalculateUsualSamusSpritemapPosition                              ;908C8A;  17h: Turning around - jumping
    dw CalculateUsualSamusSpritemapPosition                              ;908C8C;  18h: Turning around - falling
    dw CalculateUsualSamusSpritemapPosition                              ;908C8E;  19h: Damage boost
    dw CalculateUsualSamusSpritemapPosition                              ;908C90;  1Ah: Grabbed by Draygon
    dw CalculateSamusSpritemapPosition_Shinespark_CF_Drained             ;908C92; *1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

CalculateUsualSamusSpritemapPosition:
    TYA                                                                  ;908C94;
    ASL A                                                                ;908C95;
    ASL A                                                                ;908C96;
    TAX                                                                  ;908C97;
    LDA.L PoseDefinitions_YOffset,X                                      ;908C98;
    AND.W #$00FF                                                         ;908C9C;
    BIT.W #$0080                                                         ;908C9F;
    BEQ +                                                                ;908CA2;
    ORA.W #$FF00                                                         ;908CA4;

  + STA.B $12                                                            ;908CA7;
    LDA.W $0AFA                                                          ;908CA9;
    SEC                                                                  ;908CAC;
    SBC.B $12                                                            ;908CAD;
    SEC                                                                  ;908CAF;
    SBC.W $0915                                                          ;908CB0;
    STA.W $0B06                                                          ;908CB3;
    TAY                                                                  ;908CB6;
    LDA.W $0AF6                                                          ;908CB7;
    SEC                                                                  ;908CBA;
    SBC.W $0911                                                          ;908CBB;
    STA.W $0B04                                                          ;908CBE;
    TAX                                                                  ;908CC1;
    RTS                                                                  ;908CC2;


CalculateSamusSpritemapPosition_Standing:
    PHB                                                                  ;908CC3;
    PHK                                                                  ;908CC4;
    PLB                                                                  ;908CC5;
    TYA                                                                  ;908CC6;
    LSR A                                                                ;908CC7;
    CMP.W #$0000                                                         ;908CC8;
    BEQ .facingForward                                                   ;908CCB;
    CMP.W #$009B                                                         ;908CCD;
    BEQ .facingForward                                                   ;908CD0;
    CMP.W #$00A4                                                         ;908CD2;
    BMI Goto_CalculateUsualSamusSpritemapPosition                        ;908CD5;
    CMP.W #$00A8                                                         ;908CD7;
    BPL Goto_CalculateUsualSamusSpritemapPosition                        ;908CDA;
    SEC                                                                  ;908CDC;
    SBC.W #$00A4                                                         ;908CDD;
    ASL A                                                                ;908CE0;
    ASL A                                                                ;908CE1;
    CLC                                                                  ;908CE2;
    ADC.W $0A96                                                          ;908CE3;
    TAX                                                                  ;908CE6;
    LDA.W .data,X                                                        ;908CE7;
    STA.B $12                                                            ;908CEA;
    LDA.W $0AFA                                                          ;908CEC;
    SEC                                                                  ;908CEF;
    SBC.B $12                                                            ;908CF0;
    SEC                                                                  ;908CF2;
    SBC.W $0915                                                          ;908CF3;
    STA.W $0B06                                                          ;908CF6;
    TAY                                                                  ;908CF9;
    LDA.W $0AF6                                                          ;908CFA;
    SEC                                                                  ;908CFD;
    SBC.W $0911                                                          ;908CFE;
    STA.W $0B04                                                          ;908D01;
    TAX                                                                  ;908D04;
    PLB                                                                  ;908D05;
    RTS                                                                  ;908D06;


.facingForward:
    LDA.W $0A96                                                          ;908D07;
    CMP.W #$0002                                                         ;908D0A;
    BMI Goto_CalculateUsualSamusSpritemapPosition                        ;908D0D;
    LDA.W $0AFA                                                          ;908D0F;
    DEC A                                                                ;908D12;
    SEC                                                                  ;908D13;
    SBC.W $0915                                                          ;908D14;
    STA.W $0B06                                                          ;908D17;
    TAY                                                                  ;908D1A;
    LDA.W $0AF6                                                          ;908D1B;
    SEC                                                                  ;908D1E;
    SBC.W $0911                                                          ;908D1F;
    STA.W $0B04                                                          ;908D22;
    TAX                                                                  ;908D25;
    PLB                                                                  ;908D26;
    RTS                                                                  ;908D27;


  .data:                                                                 ;908D28;
    db $03,$06,$00,$00 ; Facing right - landing from normal jump
    db $03,$06,$00,$00 ; Facing left  - landing from normal jump
    db $03,$03,$06,$00 ; Facing right - landing from spin jump
    db $03,$03,$06,$00 ; Facing left  - landing from spin jump

Goto_CalculateUsualSamusSpritemapPosition:
    PLB                                                                  ;908D38;
    JMP.W CalculateUsualSamusSpritemapPosition                           ;908D39;


CalculateSamusSpritemapPosition_TransitionPoses:
    PHB                                                                  ;908D3C;
    PHK                                                                  ;908D3D;
    PLB                                                                  ;908D3E;
    TYA                                                                  ;908D3F;
    LSR A                                                                ;908D40;
    CMP.W #$0035                                                         ;908D41;
    BMI Goto_CalculateUsualSamusSpritemapPosition                        ;908D44;
    CMP.W #$0041                                                         ;908D46;
    BPL Goto_CalculateUsualSamusSpritemapPosition                        ;908D49;
    SEC                                                                  ;908D4B;
    SBC.W #$0035                                                         ;908D4C;
    ASL A                                                                ;908D4F;
    CLC                                                                  ;908D50;
    ADC.W $0A96                                                          ;908D51;
    TAX                                                                  ;908D54;
    LDA.W .data,X                                                        ;908D55;
    AND.W #$00FF                                                         ;908D58;
    BIT.W #$0080                                                         ;908D5B;
    BEQ +                                                                ;908D5E;
    ORA.W #$FF00                                                         ;908D60;

  + STA.B $12                                                            ;908D63;
    LDA.W $0AFA                                                          ;908D65;
    CLC                                                                  ;908D68;
    ADC.B $12                                                            ;908D69;
    SEC                                                                  ;908D6B;
    SBC.W $0915                                                          ;908D6C;
    STA.W $0B06                                                          ;908D6F;
    TAY                                                                  ;908D72;
    LDA.W $0AF6                                                          ;908D73;
    SEC                                                                  ;908D76;
    SBC.W $0911                                                          ;908D77;
    STA.W $0B04                                                          ;908D7A;
    TAX                                                                  ;908D7D;
    PLB                                                                  ;908D7E;
    RTS                                                                  ;908D7F;


  .data:                                                                 ;908D80;
    db $F8,$00 ; Facing right - crouching transition
    db $F8,$00 ; Facing left  - crouching transition
    db $FC,$FE ; Facing right - morphing transition
    db $FC,$FE ; Facing left  - morphing transition
    db $00,$00 ; Unused
    db $00,$00 ; Unused
    db $FC,$00 ; Facing right - standing transition
    db $FC,$00 ; Facing left  - standing transition
    db $05,$04 ; Facing right - unmorphing transition
    db $05,$04 ; Facing left  - unmorphing transition
    db $00,$00 ; Unused
    db $00,$00 ; Unused

CalculateSamusSpritemapPosition_Shinespark_CF_Drained:
    PHB                                                                  ;908D98;
    PHK                                                                  ;908D99;
    PLB                                                                  ;908D9A;
    TYA                                                                  ;908D9B;
    LSR A                                                                ;908D9C;
    CMP.W #$00E8                                                         ;908D9D;
    BEQ .drainedNotStanding                                              ;908DA0;
    CMP.W #$00E9                                                         ;908DA2;
    BEQ .drainedNotStanding                                              ;908DA5;
    CMP.W #$00EA                                                         ;908DA7;
    BEQ +                                                                ;908DAA;
    CMP.W #$00EB                                                         ;908DAC;
    BNE .goto_CalculateUsualSamusSpritemapPosition                       ;908DAF;

  + LDX.W $0A96                                                          ;908DB1;
    CPX.W #$0005                                                         ;908DB4;
    BMI .goto_CalculateUsualSamusSpritemapPosition                       ;908DB7;
    LDA.W #$FFFD                                                         ;908DB9;
    BRA .merge                                                           ;908DBC;


.goto_CalculateUsualSamusSpritemapPosition:
    JMP.W Goto_CalculateUsualSamusSpritemapPosition                      ;908DBE;


.drainedNotStanding:
    LDX.W $0A96                                                          ;908DC1;
    LDA.W .data,X                                                        ;908DC4;
    AND.W #$00FF                                                         ;908DC7;
    BIT.W #$0080                                                         ;908DCA;
    BEQ .merge                                                           ;908DCD;
    ORA.W #$FF00                                                         ;908DCF;

.merge:
    STA.B $12                                                            ;908DD2;
    LDA.W $0AFA                                                          ;908DD4;
    CLC                                                                  ;908DD7;
    ADC.B $12                                                            ;908DD8;
    SEC                                                                  ;908DDA;
    SBC.W $0915                                                          ;908DDB;
    STA.W $0B06                                                          ;908DDE;
    TAY                                                                  ;908DE1;
    LDA.W $0AF6                                                          ;908DE2;
    SEC                                                                  ;908DE5;
    SBC.W $0911                                                          ;908DE6;
    STA.W $0B04                                                          ;908DE9;
    TAX                                                                  ;908DEC;
    PLB                                                                  ;908DED;
    RTS                                                                  ;908DEE;


.data:
; Samus drained - crouching
    db $07,$05,$F8,$F8,$F8,$F8,$F8,$FB,$04,$04,$04,$04,$00,$00,$04,$FD   ;908DEF;
    db $FB,$00,$00,$04,$FD,$FB,$FD,$04,$00,$00,$04,$00,$00,$04,$00,$00   ;908DFF;

SetLiquidPhysicsType:
    PHP                                                                  ;908E0F;
    PHB                                                                  ;908E10;
    PHK                                                                  ;908E11;
    PLB                                                                  ;908E12;
    REP #$30                                                             ;908E13;
    JSL.L Get_Samus_BottomTop_Boundary                                   ;908E15;
    LDA.W $196E                                                          ;908E19;
    AND.W #$000F                                                         ;908E1C;
    TAX                                                                  ;908E1F;
    JSR.W (.pointers,X)                                                  ;908E20;
    PLB                                                                  ;908E23;
    PLP                                                                  ;908E24;
    RTL                                                                  ;908E25;


.pointers:
    dw SetLiquidPhysicsType_Air                                          ;908E26; ; 0: None / 20h: Unused scrolling sky
    dw SetLiquidPhysicsType_LavaAcid                                     ;908E28; ; 2: Lava / 22h: Unused
    dw SetLiquidPhysicsType_LavaAcid                                     ;908E2A; ; 4: Acid / 24h: Fireflea
    dw SetLiquidPhysicsType_Water                                        ;908E2C; ; 6: Water / 26h: Tourian entrance statue
    dw SetLiquidPhysicsType_Air                                          ;908E2E; ; 8: Spores / 28h: Ceres Ridley
    dw SetLiquidPhysicsType_Air                                          ;908E30; ; Ah: Rain / 2Ah: Ceres elevator
    dw SetLiquidPhysicsType_Air                                          ;908E32; ; Ch: Fog / 2Ch: Ceres haze
    dw SetLiquidPhysicsType_Air                                          ;908E34;

SetLiquidPhysicsType_Air:
    STZ.W $0AD2                                                          ;908E36;
    RTS                                                                  ;908E39;


SetLiquidPhysicsType_LavaAcid:
    LDA.W $1962                                                          ;908E3A;
    BMI SetLiquidPhysicsType_Air                                         ;908E3D;
    CMP.B $12                                                            ;908E3F;
    BPL SetLiquidPhysicsType_Air                                         ;908E41;
    LDA.W #$0002                                                         ;908E43;
    STA.W $0AD2                                                          ;908E46;
    RTS                                                                  ;908E49;


SetLiquidPhysicsType_Water:
    LDA.W $195E                                                          ;908E4A;
    BMI SetLiquidPhysicsType_Air                                         ;908E4D;
    CMP.B $12                                                            ;908E4F;
    BMI +                                                                ;908E51;
    BRA SetLiquidPhysicsType_Air                                         ;908E53;


  + LDA.W $197E                                                          ;908E55;
    BIT.W #$0004                                                         ;908E58;
    BNE SetLiquidPhysicsType_Air                                         ;908E5B;
    LDA.W #$0001                                                         ;908E5D;
    STA.W $0AD2                                                          ;908E60;
    RTS                                                                  ;908E63;


Samus_X_Movement:
    PHP                                                                  ;908E64;
    REP #$30                                                             ;908E65;
    JSR.W Handle_Samus_XExtraRunSpeed                                    ;908E67;
    JSR.W Determine_SamusXSpeedTable_EntryPointer                        ;908E6A;
    JSR.W CalculateSamusXBaseSpeed_DecelerationAllowed                   ;908E6D;
    JSR.W MoveSamus_Horizontally                                         ;908E70;
    PLP                                                                  ;908E73;
    RTS                                                                  ;908E74;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_SamusMovement_908E75:
    PHP                                                                  ;908E75;
    REP #$30                                                             ;908E76;
    JSR.W Determine_SamusXSpeedTable_EntryPointer                        ;908E78;
    JSR.W CalculateSamusXBaseSpeed_DecelerationDisallowed                ;908E7B;
    LDA.W $0B4A                                                          ;908E7E;
    BNE .decelerating                                                    ;908E81;
    LDA.B $8B                                                            ;908E83;
    BIT.W #$0100                                                         ;908E85;
    BNE +                                                                ;908E88;
    BIT.W #$0200                                                         ;908E8A;
    BNE +                                                                ;908E8D;
    STZ.B $12                                                            ;908E8F;
    STZ.B $14                                                            ;908E91;
    STZ.W $0B46                                                          ;908E93;
    STZ.W $0B48                                                          ;908E96;
    STZ.W $0DD0                                                          ;908E99;
    BRA .return                                                          ;908E9C;


  + LDA.W #$0002                                                         ;908E9E;
    STA.W $0B4A                                                          ;908EA1;

.decelerating:
    JSR.W MoveSamus_Horizontally                                         ;908EA4;

.return:
    PLP                                                                  ;908EA7;
    RTS                                                                  ;908EA8;
endif ; !FEATURE_KEEP_UNREFERENCED


MoveSamus_Horizontally:
    LDA.W $0B4A                                                          ;908EA9;
    BEQ .notTurning                                                      ;908EAC;
    CMP.W #$0002                                                         ;908EAE;
    BEQ .notTurning                                                      ;908EB1;
    LDA.W $0A1E                                                          ;908EB3;
    AND.W #$00FF                                                         ;908EB6;
    CMP.W #$0008                                                         ;908EB9;
    BEQ .leftwards                                                       ;908EBC;
    BRA .rightwards                                                      ;908EBE;


.notTurning:
    LDA.W $0A1E                                                          ;908EC0;
    AND.W #$00FF                                                         ;908EC3;
    CMP.W #$0004                                                         ;908EC6;
    BEQ .leftwards                                                       ;908EC9;

.rightwards:
    JSR.W CalculateSamusXDisplacement_ForMovingRight                     ;908ECB;
    BRA .merge                                                           ;908ECE;


.leftwards:
    JSR.W CalculateSamusXDisplacement_ForMovingLeft                      ;908ED0;

.merge:
    LDA.B $12                                                            ;908ED3;
    BMI .left                                                            ;908ED5;
    JSR.W MoveSamus_Right                                                ;908ED7;
    RTS                                                                  ;908EDA;


.left:
    JSR.W MoveSamus_Left                                                 ;908EDB;
    RTS                                                                  ;908EDE;


MoveSamus_Horizontally_KnockbackBombJump:
    PHP                                                                  ;908EDF;
    REP #$30                                                             ;908EE0;
    LDA.W $0A52                                                          ;908EE2;
    BEQ +                                                                ;908EE5;
    JSR.W Determine_SamusXSpeedTable_EntryPointer                        ;908EE7;
    JSR.W CalculateSamusXBaseSpeed_DecelerationAllowed                   ;908EEA;
    LDA.W $0A54                                                          ;908EED;
    BNE .rightwards                                                      ;908EF0;
    BRA .leftwards                                                       ;908EF2;


  + LDX.W #SamusPhysicsConstants_XAccelSpeeds_DiagonalBombJump           ;908EF4;
    JSR.W CalculateSamusXBaseSpeed_DecelerationAllowed                   ;908EF7;
    LDA.W $0A56                                                          ;908EFA;
    AND.W #$00FF                                                         ;908EFD;
    CMP.W #$0001                                                         ;908F00;
    BEQ .leftwards                                                       ;908F03;

.rightwards:
    JSR.W CalculateSamusXDisplacement_ForMovingRight                     ;908F05;
    BRA .merge                                                           ;908F08;


.leftwards:
    JSR.W CalculateSamusXDisplacement_ForMovingLeft                      ;908F0A;

.merge:
    LDA.B $12                                                            ;908F0D;
    BMI .left                                                            ;908F0F;
    JSR.W MoveSamus_Right                                                ;908F11;
    BRA .return                                                          ;908F14;


.left:
    JSR.W MoveSamus_Left                                                 ;908F16;

.return:
    PLP                                                                  ;908F19;
    RTS                                                                  ;908F1A;


Handle_EndOfBombJump:
    PHP                                                                  ;908F1B;
    REP #$30                                                             ;908F1C;
    LDA.W $0B36                                                          ;908F1E;
    CMP.W #$0001                                                         ;908F21;
    BNE .return                                                          ;908F24;
    LDA.W $0B2E                                                          ;908F26;
    BMI +                                                                ;908F29;
    CMP.W #$0001                                                         ;908F2B;
    BPL .return                                                          ;908F2E;
    LDA.W $0A60                                                          ;908F30;
    CMP.W #SamusPoseInputHandler_Demo                                    ;908F33;
    BEQ .return                                                          ;908F36;
    LDA.W #SamusPoseInputHandler_Normal                                  ;908F38;
    STA.W $0A60                                                          ;908F3B;
    BRA .return                                                          ;908F3E;


  + STZ.W $0B2C                                                          ;908F40;
    STZ.W $0B2E                                                          ;908F43;
    LDA.W #$0002                                                         ;908F46;
    STA.W $0B36                                                          ;908F49;
    LDA.W $0A56                                                          ;908F4C;
    AND.W #$00FF                                                         ;908F4F;
    CMP.W #$0002                                                         ;908F52;
    BEQ .return                                                          ;908F55;
    LDA.W #$0002                                                         ;908F57;
    STA.W $0B4A                                                          ;908F5A;

.return:
    PLP                                                                  ;908F5D;
    RTS                                                                  ;908F5E;


MoveSamus_Horizontally_PushedByCeresRidley:
    PHP                                                                  ;908F5F;
    REP #$30                                                             ;908F60;
    JSR.W Determine_SamusXSpeedTable_EntryPointer                        ;908F62;
    JSR.W CalculateSamusXBaseSpeed_DecelerationAllowed                   ;908F65;
    LDA.W $0A62                                                          ;908F68;
    CMP.W #$0001                                                         ;908F6B;
    BEQ .left                                                            ;908F6E;
    JSR.W CalculateSamusXDisplacement_ForMovingRight                     ;908F70;
    BRA +                                                                ;908F73;


.left:
    JSR.W CalculateSamusXDisplacement_ForMovingLeft                      ;908F75;

  + LDA.B $12                                                            ;908F78;
    BMI .moveLeft                                                        ;908F7A;
    JSR.W MoveSamus_Right                                                ;908F7C;
    BRA .return                                                          ;908F7F;


.moveLeft:
    JSR.W MoveSamus_Left                                                 ;908F81;

.return:
    PLP                                                                  ;908F84;
    RTS                                                                  ;908F85;


MoveSamus_Vertically_PushedByCeresRidley:
    PHP                                                                  ;908F86;
    REP #$30                                                             ;908F87;
    LDA.W $0B2E                                                          ;908F89;
    CMP.W #$0005                                                         ;908F8C;
    BPL +                                                                ;908F8F;
    LDA.W $0B2C                                                          ;908F91;
    CLC                                                                  ;908F94;
    ADC.W $0B32                                                          ;908F95;
    STA.W $0B2C                                                          ;908F98;
    LDA.W $0B2E                                                          ;908F9B;
    ADC.W $0B34                                                          ;908F9E;
    STA.W $0B2E                                                          ;908FA1;

  + LDA.W $0B2C                                                          ;908FA4;
    STA.B $14                                                            ;908FA7;
    LDA.W $0B2E                                                          ;908FA9;
    STA.B $12                                                            ;908FAC;
    JSR.W MoveSamus_Down                                                 ;908FAE;
    PLP                                                                  ;908FB1;
    RTS                                                                  ;908FB2;


Samus_Jumping_Movement:
    PHP                                                                  ;908FB3;
    REP #$30                                                             ;908FB4;
    JSR.W Handle_Samus_XExtraRunSpeed                                    ;908FB6;
    LDA.W $0A1C                                                          ;908FB9;
    CMP.W #$004B                                                         ;908FBC;
    BEQ +                                                                ;908FBF;
    CMP.W #$004C                                                         ;908FC1;
    BEQ +                                                                ;908FC4;
    CMP.W #$0055                                                         ;908FC6;
    BMI .jumping                                                         ;908FC9;
    CMP.W #$005B                                                         ;908FCB;
    BPL .jumping                                                         ;908FCE;

  + STZ.W $0B4A                                                          ;908FD0;
    JSR.W MoveSamus_HorizontallyWithZeroBaseXSpeed                       ;908FD3;
    JSR.W MoveSamus_ByExtraYDisplacement                                 ;908FD6;
    JMP.W .return                                                        ;908FD9; >.<


.jumping:
    LDA.W $0B36                                                          ;908FDC;
    CMP.W #$0001                                                         ;908FDF;
    BNE .setFallingEnd                                                   ;908FE2;
    LDA.B $8B                                                            ;908FE4;
    AND.W $09B4                                                          ;908FE6;
    BEQ +                                                                ;908FE9;
    LDA.W $0B2E                                                          ;908FEB;
    BPL .setFallingEnd                                                   ;908FEE;

  + STZ.W $0B2C                                                          ;908FF0;
    STZ.W $0B2E                                                          ;908FF3;
    LDA.W #$0002                                                         ;908FF6;
    STA.W $0B36                                                          ;908FF9;

.setFallingEnd:
    JSR.W Determine_SamusXSpeedTable_EntryPointer                        ;908FFC;
    JSR.W CalculateSamusXBaseSpeed_DecelerationDisallowed                ;908FFF;
    LDA.W $0A1F                                                          ;909002;
    AND.W #$00FF                                                         ;909005;
    CMP.W #$0014                                                         ;909008;
    BEQ .wallJumping                                                     ;90900B;
    LDA.W $0B4A                                                          ;90900D;
    BNE .XMovement                                                       ;909010;
    LDA.B $8B                                                            ;909012;
    BIT.W #$0100                                                         ;909014;
    BNE .XMovement                                                       ;909017;
    BIT.W #$0200                                                         ;909019;
    BNE .XMovement                                                       ;90901C;
    STZ.B $12                                                            ;90901E;
    STZ.B $14                                                            ;909020;
    STZ.W $0B46                                                          ;909022;
    STZ.W $0B48                                                          ;909025;
    STZ.W $0DD0                                                          ;909028;
    BRA .noXMovement                                                     ;90902B;


.wallJumping:
    LDA.W $0B4A                                                          ;90902D;
    BNE .XMovement                                                       ;909030;
    LDA.W #$0002                                                         ;909032;
    STA.W $0B4A                                                          ;909035;

.XMovement:
    JSR.W MoveSamus_Horizontally                                         ;909038;

.noXMovement:
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;90903B;

.return:
    PLP                                                                  ;90903E;
    RTS                                                                  ;90903F;


Samus_SpinJumping_Movement:
    PHP                                                                  ;909040;
    REP #$30                                                             ;909041;
    JSR.W Handle_Samus_XExtraRunSpeed                                    ;909043;
    LDA.W $0B36                                                          ;909046;
    CMP.W #$0001                                                         ;909049;
    BNE .setFallingEnd                                                   ;90904C;
    LDA.B $8B                                                            ;90904E;
    AND.W $09B4                                                          ;909050;
    BEQ +                                                                ;909053;
    LDA.W $0B2E                                                          ;909055;
    BPL .setFallingEnd                                                   ;909058;

  + STZ.W $0B2C                                                          ;90905A;
    STZ.W $0B2E                                                          ;90905D;
    LDA.W #$0002                                                         ;909060;
    STA.W $0B36                                                          ;909063;

.setFallingEnd:
    JSR.W Determine_SamusXSpeedTable_EntryPointer                        ;909066;
    JSR.W CalculateSamusXBaseSpeed_DecelerationDisallowed                ;909069;
    BCS .allowXMovement                                                  ;90906C;
    LDA.W $0B4A                                                          ;90906E;
    CMP.W #$0001                                                         ;909071;
    BEQ .allowXMovement                                                  ;909074;
    LDA.W $0A1E                                                          ;909076;
    AND.W #$00FF                                                         ;909079;
    CMP.W #$0004                                                         ;90907C;
    BEQ .leftwards                                                       ;90907F;
    LDA.B $8B                                                            ;909081;
    BIT.W #$0100                                                         ;909083;
    BEQ +                                                                ;909086;
    BRA .allowXMovement                                                  ;909088;


.leftwards:
    LDA.B $8B                                                            ;90908A;
    BIT.W #$0200                                                         ;90908C;
    BEQ +                                                                ;90908F;
    BRA .allowXMovement                                                  ;909091;


  + STZ.B $12                                                            ;909093;
    STZ.B $14                                                            ;909095;
    STZ.W $0B46                                                          ;909097;
    STZ.W $0B48                                                          ;90909A;
    STZ.W $0DD0                                                          ;90909D;
    STZ.W $0B4A                                                          ;9090A0;
    BRA .merge                                                           ;9090A3;


.allowXMovement:
    LDA.W $0B4A                                                          ;9090A5;
    BNE .merge                                                           ;9090A8;
    LDA.W #$0002                                                         ;9090AA;
    STA.W $0B4A                                                          ;9090AD;

.merge:
    JSR.W MoveSamus_Horizontally                                         ;9090B0;
    LDA.W SamusPhysicsConstants_MaximumDistanceFromWallForWallJump       ;9090B3;
    STA.B $12                                                            ;9090B6;
    STZ.B $14                                                            ;9090B8;
    JSR.W WallJump_Check                                                 ;9090BA;
    BCS .return                                                          ;9090BD;
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;9090BF;

.return:
    PLP                                                                  ;9090C2;
    RTS                                                                  ;9090C3;


CheckIfSamusHasStartedFalling:
    PHP                                                                  ;9090C4;
    REP #$30                                                             ;9090C5;
    LDA.W $0B36                                                          ;9090C7;
    CMP.W #$0001                                                         ;9090CA;
    BNE .return                                                          ;9090CD;
    LDA.W $0B2E                                                          ;9090CF;
    BPL .return                                                          ;9090D2;
    STZ.W $0B2C                                                          ;9090D4;
    STZ.W $0B2E                                                          ;9090D7;
    LDA.W #$0002                                                         ;9090DA;
    STA.W $0B36                                                          ;9090DD;

.return:
    PLP                                                                  ;9090E0;
    RTS                                                                  ;9090E1;


Samus_Y_Movement_WithSpeedCalculations:
    PHP                                                                  ;9090E2;
    REP #$30                                                             ;9090E3;
    LDA.W $0B2C                                                          ;9090E5;
    STA.B $14                                                            ;9090E8;
    LDA.W $0B2E                                                          ;9090EA;
    STA.B $12                                                            ;9090ED;
    LDA.W $0B36                                                          ;9090EF;
    CMP.W #$0002                                                         ;9090F2;
    BEQ .down                                                            ;9090F5;
    LDA.W $0B2C                                                          ;9090F7;
    SEC                                                                  ;9090FA;
    SBC.W $0B32                                                          ;9090FB;
    STA.W $0B2C                                                          ;9090FE;
    LDA.W $0B2E                                                          ;909101;
    SBC.W $0B34                                                          ;909104;
    STA.W $0B2E                                                          ;909107;
    BRA +                                                                ;90910A;


.down:
    LDA.W $0B2E                                                          ;90910C;
    CMP.W #$0006                                                         ;90910F;
    BEQ +                                                                ;909112;
    LDA.W $0B2C                                                          ;909114;
    CLC                                                                  ;909117;
    ADC.W $0B32                                                          ;909118;
    STA.W $0B2C                                                          ;90911B;
    LDA.W $0B2E                                                          ;90911E;
    ADC.W $0B34                                                          ;909121;
    STA.W $0B2E                                                          ;909124;

  + LDA.W $0B5C                                                          ;909127;
    BEQ .checkDirection                                                  ;90912A;
    LDA.W $0B5A                                                          ;90912C;
    BEQ .checkDirection                                                  ;90912F;
    NOP                                                                  ;909131;

.checkDirection:
    LDA.W $0B36                                                          ;909132;
    CMP.W #$0002                                                         ;909135;
    BEQ .notDown                                                         ;909138;
    LDA.B $12                                                            ;90913A;
    EOR.W #$FFFF                                                         ;90913C;
    STA.B $12                                                            ;90913F;
    LDA.B $14                                                            ;909141;
    EOR.W #$FFFF                                                         ;909143;
    INC A                                                                ;909146;
    STA.B $14                                                            ;909147;
    BNE .notDown                                                         ;909149;
    INC.B $12                                                            ;90914B;

.notDown:
    LDA.W $0B5A                                                          ;90914D;
    CLC                                                                  ;909150;
    ADC.B $14                                                            ;909151;
    STA.B $14                                                            ;909153;
    LDA.W $0B5C                                                          ;909155;
    ADC.B $12                                                            ;909158;
    STA.B $12                                                            ;90915A;
    BMI .moveUp                                                          ;90915C;
    JSR.W MoveSamus_Down                                                 ;90915E;
    BRA .return                                                          ;909161;


.moveUp:
    JSR.W MoveSamus_Up                                                   ;909163;

.return:
    PLP                                                                  ;909166;
    RTS                                                                  ;909167;


Samus_Falling_Movement:
    PHP                                                                  ;909168;
    REP #$30                                                             ;909169;
    JSR.W Handle_Samus_XExtraRunSpeed                                    ;90916B;
    JSR.W Determine_SamusXSpeedTable_EntryPointer                        ;90916E;
    JSR.W CalculateSamusXBaseSpeed_DecelerationDisallowed                ;909171;
    LDA.W $0B4A                                                          ;909174;
    BNE .pressingLeftRight                                               ;909177;
    LDA.B $8B                                                            ;909179;
    BIT.W #$0100                                                         ;90917B;
    BNE .pressingLeftRight                                               ;90917E;
    BIT.W #$0200                                                         ;909180;
    BNE .pressingLeftRight                                               ;909183;
    STZ.B $12                                                            ;909185;
    STZ.B $14                                                            ;909187;
    STZ.W $0B46                                                          ;909189;
    STZ.W $0B48                                                          ;90918C;
    STZ.W $0DD0                                                          ;90918F;
    BRA +                                                                ;909192;


.pressingLeftRight:
    JSR.W MoveSamus_Horizontally                                         ;909194;

  + JSR.W CheckIfSamusHasStartedFalling                                  ;909197;
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;90919A;
    PLP                                                                  ;90919D;
    RTS                                                                  ;90919E;


Samus_Morphed_Falling_Movement:
    PHP                                                                  ;90919F;
    REP #$30                                                             ;9091A0;
    JSR.W Determine_SamusXSpeedTable_EntryPointer                        ;9091A2;
    JSR.W CalculateSamusXBaseSpeed_DecelerationDisallowed                ;9091A5;
    LDA.W $0B4A                                                          ;9091A8;
    BNE .moveHorizontally                                                ;9091AB;
    LDA.B $8B                                                            ;9091AD;
    BIT.W #$0100                                                         ;9091AF;
    BNE .moveHorizontally                                                ;9091B2;
    BIT.W #$0200                                                         ;9091B4;
    BNE .moveHorizontally                                                ;9091B7;
    STZ.B $12                                                            ;9091B9;
    STZ.B $14                                                            ;9091BB;
    STZ.W $0B46                                                          ;9091BD;
    STZ.W $0B48                                                          ;9091C0;
    STZ.W $0DD0                                                          ;9091C3;

.moveHorizontally:
    JSR.W MoveSamus_Horizontally                                         ;9091C6;
    JSR.W CheckIfSamusHasStartedFalling                                  ;9091C9;
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;9091CC;
    PLP                                                                  ;9091CF;
    RTS                                                                  ;9091D0;


Samus_Morphed_Bouncing_Movement:
    PHP                                                                  ;9091D1;
    REP #$30                                                             ;9091D2;
    JSR.W Determine_SamusXSpeedTable_EntryPointer                        ;9091D4;
    JSR.W CalculateSamusXBaseSpeed_DecelerationDisallowed                ;9091D7;
    LDA.W $0B4A                                                          ;9091DA;
    BNE .pressingLeftRight                                               ;9091DD;
    LDA.B $8B                                                            ;9091DF;
    BIT.W #$0100                                                         ;9091E1;
    BNE .pressingLeftRight                                               ;9091E4;
    BIT.W #$0200                                                         ;9091E6;
    BNE .pressingLeftRight                                               ;9091E9;
    STZ.B $12                                                            ;9091EB;
    STZ.B $14                                                            ;9091ED;
    STZ.W $0B46                                                          ;9091EF;
    STZ.W $0B48                                                          ;9091F2;
    STZ.W $0DD0                                                          ;9091F5;

.pressingLeftRight:
    JSR.W MoveSamus_Horizontally                                         ;9091F8;
    LDA.W $0A52                                                          ;9091FB;
    BNE .return                                                          ;9091FE;
    LDA.W $0B5C                                                          ;909200;
    BNE .extraYDisplacement                                              ;909203;
    LDA.W $0B5A                                                          ;909205;
    BEQ .noExtraDisplacement                                             ;909208;

.extraYDisplacement:
    LDA.W #$0002                                                         ;90920A;
    STA.W $0B36                                                          ;90920D;
    STZ.W $0B2C                                                          ;909210;
    STZ.W $0B2E                                                          ;909213;
    STZ.B $14                                                            ;909216;
    STZ.B $12                                                            ;909218;
    LDA.W $0B5A                                                          ;90921A;
    CLC                                                                  ;90921D;
    ADC.B $14                                                            ;90921E;
    STA.B $14                                                            ;909220;
    LDA.W $0B5C                                                          ;909222;
    ADC.B $12                                                            ;909225;
    STA.B $12                                                            ;909227;
    BMI .moveUp                                                          ;909229;
    INC.B $12                                                            ;90922B;
    JSR.W MoveSamus_Down                                                 ;90922D;
    BRA .return                                                          ;909230;


.moveUp:
    JSR.W MoveSamus_Up                                                   ;909232;
    BRA .return                                                          ;909235;


.noExtraDisplacement:
    JSR.W CheckIfSamusHasStartedFalling                                  ;909237;
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;90923A;

.return:
    PLP                                                                  ;90923D;
    RTS                                                                  ;90923E;


Samus_Y_Movement_NoSpeedCalculations:
    PHP                                                                  ;90923F;
    REP #$30                                                             ;909240;
    LDA.W $0B5C                                                          ;909242;
    BNE .useExtraDisplacement                                            ;909245;
    LDA.W $0B5A                                                          ;909247;
    BNE .useExtraDisplacement                                            ;90924A;
    LDA.W $0DBA                                                          ;90924C;
    BNE .adjustedBySlope                                                 ;90924F;
    LDA.W $0DBE                                                          ;909251;
    STA.B $14                                                            ;909254;
    LDA.W $0DBC                                                          ;909256;
    INC A                                                                ;909259;
    STA.B $12                                                            ;90925A;
    BRA .gotoMoveDown                                                    ;90925C;


.adjustedBySlope:
    STZ.B $14                                                            ;90925E;
    LDA.W #$0001                                                         ;909260;
    STA.B $12                                                            ;909263;

.gotoMoveDown:
    BRA .moveDown                                                        ;909265;


.useExtraDisplacement:
    STZ.B $14                                                            ;909267;
    STZ.B $12                                                            ;909269;
    LDA.W $0B5A                                                          ;90926B;
    CLC                                                                  ;90926E;
    ADC.B $14                                                            ;90926F;
    STA.B $14                                                            ;909271;
    LDA.W $0B5C                                                          ;909273;
    ADC.B $12                                                            ;909276;
    STA.B $12                                                            ;909278;
    BMI .moveUp                                                          ;90927A;
    INC.B $12                                                            ;90927C;

.moveDown:
    JSR.W MoveSamus_Down                                                 ;90927E;
    BRA .return                                                          ;909281;


.moveUp:
    JSR.W MoveSamus_Up                                                   ;909283;

.return:
    PLP                                                                  ;909286;
    RTS                                                                  ;909287;


MoveSamus_ByExtraYDisplacement:
    PHP                                                                  ;909288;
    REP #$30                                                             ;909289;
    LDA.W $0B5C                                                          ;90928B;
    BNE .move                                                            ;90928E;
    LDA.W $0B5A                                                          ;909290;
    BNE .move                                                            ;909293;
    PLP                                                                  ;909295;
    RTS                                                                  ;909296;


.move:
    STZ.B $14                                                            ;909297;
    STZ.B $12                                                            ;909299;
    LDA.W $0B5A                                                          ;90929B;
    CLC                                                                  ;90929E;
    ADC.B $14                                                            ;90929F;
    STA.B $14                                                            ;9092A1;
    LDA.W $0B5C                                                          ;9092A3;
    ADC.B $12                                                            ;9092A6;
    STA.B $12                                                            ;9092A8;
    BMI .moveUp                                                          ;9092AA;
    INC.B $12                                                            ;9092AC;
    JSR.W MoveSamus_Down                                                 ;9092AE;
    BRA .return                                                          ;9092B1;


.moveUp:
    JSR.W MoveSamus_Up                                                   ;9092B3;

.return:
    PLP                                                                  ;9092B6;
    RTS                                                                  ;9092B7;


Simple_Samus_Y_Movement:
    LDA.W $0B36                                                          ;9092B8;
    BNE .movingUpDown                                                    ;9092BB;
    CLC                                                                  ;9092BD;
    RTS                                                                  ;9092BE;


.movingUpDown:
    JSR.W CheckIfSamusHasStartedFalling                                  ;9092BF;
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;9092C2;
    SEC                                                                  ;9092C5;
    RTS                                                                  ;9092C6;


Simple_Samus_Y_Movement_duplicate:
    LDA.W $0B36                                                          ;9092C7;
    BNE .movingUpDown                                                    ;9092CA;
    CLC                                                                  ;9092CC;
    RTS                                                                  ;9092CD;


.movingUpDown:
    JSR.W CheckIfSamusHasStartedFalling                                  ;9092CE;
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;9092D1;
    SEC                                                                  ;9092D4;
    RTS                                                                  ;9092D5;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_MoveSamus_9092D6:
    PHP                                                                  ;9092D6;
    REP #$30                                                             ;9092D7;
    BRA .uselessBranch                                                   ;9092D9; >.<


.uselessBranch:
    LDA.W $0AFA                                                          ;9092DB;
    CLC                                                                  ;9092DE;
    ADC.B $12                                                            ;9092DF;
    STA.W $0AFA                                                          ;9092E1;
    STA.W $0B14                                                          ;9092E4;
    PLP                                                                  ;9092E7;
    RTS                                                                  ;9092E8;
endif ; !FEATURE_KEEP_UNREFERENCED


RTS_9092E9:
    RTS                                                                  ;9092E9;

    PHP                                                                  ;9092EA;
    REP #$30                                                             ;9092EB;
    LDA.W #$0001                                                         ;9092ED;
    STA.B $12                                                            ;9092F0;
    STZ.B $14                                                            ;9092F2;
    LDA.W $0A1E                                                          ;9092F4;
    AND.W #$00FF                                                         ;9092F7;
    CMP.W #$0004                                                         ;9092FA;
    BEQ .facingLeft                                                      ;9092FD;
    LDA.B $8B                                                            ;9092FF;
    BIT.W #$0100                                                         ;909301;
    BNE .rightwards                                                      ;909304;
    BRA .return                                                          ;909306;


.facingLeft:
    LDA.B $8B                                                            ;909308;
    BIT.W #$0200                                                         ;90930A;
    BNE .leftwards                                                       ;90930D;
    BRA .return                                                          ;90930F;


.rightwards:
    JSR.W CalculateSamusXDisplacement_ForMovingRight                     ;909311;
    BRA .merge                                                           ;909314;


.leftwards:
    JSR.W CalculateSamusXDisplacement_ForMovingLeft                      ;909316;

.merge:
    LDA.B $12                                                            ;909319;
    BMI .moveLeft                                                        ;90931B;
    JSR.W MoveSamus_Right                                                ;90931D;
    BRA +                                                                ;909320;


.moveLeft:
    JSR.W MoveSamus_Left                                                 ;909322;

  + LDA.W $0DD0                                                          ;909325;
    BNE .return                                                          ;909328;
    LDA.W $0A1E                                                          ;90932A;
    AND.W #$00FF                                                         ;90932D;
    CMP.W #$0004                                                         ;909330;
    BEQ .leftFacing                                                      ;909333;
    LDA.W #$0009                                                         ;909335;
    STA.W $0A28                                                          ;909338;
    BRA +                                                                ;90933B;


.leftFacing:
    LDA.W #$000A                                                         ;90933D;
    STA.W $0A28                                                          ;909340;

  + STZ.W $0DC6                                                          ;909343;

.return:
    PLP                                                                  ;909346;
    RTS                                                                  ;909347;


MoveSamus_HorizontallyWithZeroBaseXSpeed:
    STZ.B $12                                                            ;909348;
    STZ.B $14                                                            ;90934A;
    JSR.W MoveSamus_Horizontally                                         ;90934C;
    RTS                                                                  ;90934F;


MoveSamus_Left:
    PHP                                                                  ;909350;
    REP #$30                                                             ;909351;
    LDA.B $12                                                            ;909353;
    EOR.W #$FFFF                                                         ;909355;
    STA.B $12                                                            ;909358;
    LDA.B $14                                                            ;90935A;
    EOR.W #$FFFF                                                         ;90935C;
    INC A                                                                ;90935F;
    STA.B $14                                                            ;909360;
    BNE .checkSolidEnemyCollision                                        ;909362;
    INC.B $12                                                            ;909364;

.checkSolidEnemyCollision:
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;909366;
    STA.W $0DD0                                                          ;90936A;
    TAX                                                                  ;90936D;
    BEQ .noSolidEnemyCollision                                           ;90936E;
    JSR.W Kill_SamusXSpeed_IfCollisionDetected                           ;909370;
    JSR.W MoveSamus_Left_NoCollisionDetection                            ;909373;
    JSL.L Align_SamusYPosition_WithNonSquareSlope                        ;909376;
    PLP                                                                  ;90937A;
    RTS                                                                  ;90937B;


.noSolidEnemyCollision:
    LDA.B $12                                                            ;90937C;
    EOR.W #$FFFF                                                         ;90937E;
    STA.B $12                                                            ;909381;
    LDA.B $14                                                            ;909383;
    EOR.W #$FFFF                                                         ;909385;
    INC A                                                                ;909388;
    STA.B $14                                                            ;909389;
    BNE .moveRight                                                       ;90938B;
    INC.B $12                                                            ;90938D;

.moveRight:
    JSL.L MoveSamusRight_NoSolidEnemyCollision                           ;90938F;
    LDA.B $14                                                            ;909393;
    STA.W $0DAC                                                          ;909395;
    LDA.B $12                                                            ;909398;
    STA.W $0DAA                                                          ;90939A;
    LDA.W $0B02                                                          ;90939D;
    BIT.W #$0001                                                         ;9093A0;
    BEQ +                                                                ;9093A3;
    STZ.W $0DD0                                                          ;9093A5;

  + JSR.W Kill_SamusXSpeed_IfCollisionDetected                           ;9093A8;
    JSL.L Align_SamusYPosition_WithNonSquareSlope                        ;9093AB;
    PLP                                                                  ;9093AF;
    RTS                                                                  ;9093B0;


MoveSamus_Right:
    PHP                                                                  ;9093B1;
    REP #$30                                                             ;9093B2;
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;9093B4;
    STA.W $0DD0                                                          ;9093B8;
    TAX                                                                  ;9093BB;
    BEQ +                                                                ;9093BC;
    JSR.W Kill_SamusXSpeed_IfCollisionDetected                           ;9093BE;
    JSR.W MoveSamus_Right_NoCollisionDetection                           ;9093C1;
    JSL.L Align_SamusYPosition_WithNonSquareSlope                        ;9093C4;
    PLP                                                                  ;9093C8;
    RTS                                                                  ;9093C9;


  + JSL.L MoveSamusRight_NoSolidEnemyCollision                           ;9093CA;
    LDA.B $14                                                            ;9093CE;
    STA.W $0DB0                                                          ;9093D0;
    LDA.B $12                                                            ;9093D3;
    STA.W $0DAE                                                          ;9093D5;
    LDA.W $0B02                                                          ;9093D8;
    BIT.W #$0001                                                         ;9093DB;
    BNE +                                                                ;9093DE;
    STZ.W $0DD0                                                          ;9093E0;

  + JSR.W Kill_SamusXSpeed_IfCollisionDetected                           ;9093E3;
    JSL.L Align_SamusYPosition_WithNonSquareSlope                        ;9093E6;
    PLP                                                                  ;9093EA;
    RTS                                                                  ;9093EB;


MoveSamus_Up:
    PHP                                                                  ;9093EC;
    REP #$30                                                             ;9093ED;
    LDA.W #$0002                                                         ;9093EF;
    STA.W $0B02                                                          ;9093F2;
    LDA.B $12                                                            ;9093F5;
    EOR.W #$FFFF                                                         ;9093F7;
    STA.B $12                                                            ;9093FA;
    LDA.B $14                                                            ;9093FC;
    EOR.W #$FFFF                                                         ;9093FE;
    INC A                                                                ;909401;
    STA.B $14                                                            ;909402;
    BNE +                                                                ;909404;
    INC.B $12                                                            ;909406;

  + JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;909408;
    STA.W $0DD0                                                          ;90940C;
    TAX                                                                  ;90940F;
    BEQ +                                                                ;909410;
    JSR.W SetSamusSolidVerticalCollisionResult_UpwardsMovement           ;909412;
    JSR.W MoveSamus_Up_NoCollisionDetection                              ;909415;
    PLP                                                                  ;909418;
    RTS                                                                  ;909419;


  + LDA.B $12                                                            ;90941A;
    EOR.W #$FFFF                                                         ;90941C;
    STA.B $12                                                            ;90941F;
    LDA.B $14                                                            ;909421;
    EOR.W #$FFFF                                                         ;909423;
    INC A                                                                ;909426;
    STA.B $14                                                            ;909427;
    BNE +                                                                ;909429;
    INC.B $12                                                            ;90942B;

  + JSL.L MoveSamusDown_NoSolidEnemyCollision                            ;90942D;
    LDA.B $14                                                            ;909431;
    STA.W $0DB4                                                          ;909433;
    LDA.B $12                                                            ;909436;
    STA.W $0DB2                                                          ;909438;
    JSR.W SetSamusSolidVerticalCollisionResult_UpwardsMovement           ;90943B;
    PLP                                                                  ;90943E;
    RTS                                                                  ;90943F;


MoveSamus_Down:
    PHP                                                                  ;909440;
    REP #$30                                                             ;909441;
    LDA.W #$0003                                                         ;909443;
    STA.W $0B02                                                          ;909446;
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;909449;
    STA.W $0DD0                                                          ;90944D;
    TAX                                                                  ;909450;
    BEQ .move                                                            ;909451;
    JSR.W SetSamusSolidVerticalCollisionResult_DownwardsMovement         ;909453;
    JSR.W MoveSamus_Down_NoCollisionDetection                            ;909456;
    PLP                                                                  ;909459;
    RTS                                                                  ;90945A;


.move:
    JSL.L MoveSamusDown_NoSolidEnemyCollision                            ;90945B;
    LDA.B $14                                                            ;90945F;
    STA.W $0DB8                                                          ;909461;
    LDA.B $12                                                            ;909464;
    STA.W $0DB6                                                          ;909466;
    JSR.W SetSamusSolidVerticalCollisionResult_DownwardsMovement         ;909469;
    PLP                                                                  ;90946C;
    RTS                                                                  ;90946D;


SamusMovementHandler_ReleasedFromGrappleSwing:
    LDA.W $0B36                                                          ;90946E;
    CMP.W #$0001                                                         ;909471;
    BNE .up                                                              ;909474;
    LDA.W $0B2E                                                          ;909476;
    BPL .up                                                              ;909479;
    STZ.W $0B2C                                                          ;90947B;
    STZ.W $0B2E                                                          ;90947E;
    LDA.W #$0002                                                         ;909481;
    STA.W $0B36                                                          ;909484;
    LDA.W #SamusMovementHandler_Normal                                   ;909487;
    STA.W $0A58                                                          ;90948A;

.up:
    LDA.W #$0002                                                         ;90948D;
    STA.W $0B4A                                                          ;909490;
    JSR.W DetermineGrappleSwing_SamusXSpeedTable_EntryPointer            ;909493;
    JSR.W CalculateSamusXBaseSpeed_DecelerationAllowed                   ;909496;
    LDA.W $0B4A                                                          ;909499;
    BNE .pressingLeftRight                                               ;90949C;
    LDA.B $8B                                                            ;90949E;
    BIT.W #$0100                                                         ;9094A0;
    BNE .pressingLeftRight                                               ;9094A3;
    BIT.W #$0200                                                         ;9094A5;
    BNE .pressingLeftRight                                               ;9094A8;
    STZ.B $12                                                            ;9094AA;
    STZ.B $14                                                            ;9094AC;
    STZ.W $0B46                                                          ;9094AE;
    STZ.W $0B48                                                          ;9094B1;
    STZ.W $0DD0                                                          ;9094B4;
    BRA .YMovement                                                       ;9094B7;


.pressingLeftRight:
    JSR.W MoveSamus_Horizontally                                         ;9094B9;

.YMovement:
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;9094BC;
    LDA.W $0DC6                                                          ;9094BF;
    BEQ .return                                                          ;9094C2;
    LDA.W #SamusMovementHandler_Normal                                   ;9094C4;
    STA.W $0A58                                                          ;9094C7;

.return:
    RTS                                                                  ;9094CA;


SamusMovementHandler_SamusDrained_Falling:
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;9094CB;
    LDA.W $0DD0                                                          ;9094CE;
    BEQ .return                                                          ;9094D1;
    LDA.W #SamusMovementHandler_Normal                                   ;9094D3;
    STA.W $0A58                                                          ;9094D6;
    LDA.W #$0008                                                         ;9094D9;
    STA.W $0A94                                                          ;9094DC;
    LDA.W #$0007                                                         ;9094DF;
    STA.W $0A96                                                          ;9094E2;
    STZ.W $0B2C                                                          ;9094E5;
    STZ.W $0B2E                                                          ;9094E8;

.return:
    RTS                                                                  ;9094EB;


Main_Scrolling_Routine:
    PHP                                                                  ;9094EC;
    PHB                                                                  ;9094ED;
    PHK                                                                  ;9094EE;
    PLB                                                                  ;9094EF;
    REP #$30                                                             ;9094F0;
    LDA.W $0CF8                                                          ;9094F2;
    BEQ .normalScrolling                                                 ;9094F5;
    LDA.W $0AF6                                                          ;9094F7;
    BMI .grappleScrollVerticalEnd                                        ;9094FA;
    SEC                                                                  ;9094FC;
    SBC.W $0911                                                          ;9094FD;
    BCC .grappleScrollLeft                                               ;909500;
    CMP.W #$00A0                                                         ;909502;
    BCC +                                                                ;909505;
    LDA.W $0911                                                          ;909507;
    CLC                                                                  ;90950A;
    ADC.W #$0003                                                         ;90950B;
    STA.W $0911                                                          ;90950E;
    BRA .grappleScrollHorizontalEnd                                      ;909511;


  + CMP.W #$0060                                                         ;909513;
    BCS .grappleScrollHorizontalEnd                                      ;909516;

.grappleScrollLeft:
    LDA.W $0911                                                          ;909518;
    SEC                                                                  ;90951B;
    SBC.W #$0003                                                         ;90951C;
    STA.W $0911                                                          ;90951F;

.grappleScrollHorizontalEnd:
    LDA.W $0AFA                                                          ;909522;
    BMI .grappleScrollVerticalEnd                                        ;909525;
    SEC                                                                  ;909527;
    SBC.W $0915                                                          ;909528;
    BCC .grappleScrollUp                                                 ;90952B;
    CMP.W #$0090                                                         ;90952D;
    BCC +                                                                ;909530;
    LDA.W $0915                                                          ;909532;
    CLC                                                                  ;909535;
    ADC.W #$0003                                                         ;909536;
    STA.W $0915                                                          ;909539;
    BRA .grappleScrollVerticalEnd                                        ;90953C;


  + CMP.W #$0070                                                         ;90953E;
    BCS .grappleScrollVerticalEnd                                        ;909541;

.grappleScrollUp:
    LDA.W $0915                                                          ;909543;
    SEC                                                                  ;909546;
    SBC.W #$0003                                                         ;909547;
    STA.W $0915                                                          ;90954A;

.grappleScrollVerticalEnd:
    JSL.L HandleScrollZones_HorizontalAutoscrolling                      ;90954D;
    JSL.L HandleScrollZones_VerticalAutoscrolling                        ;909551;
    BRA .finishedScrolling                                               ;909555;


.normalScrolling:
    JSR.W Calculate_CameraXSpeed                                         ;909557;
    JSR.W Handle_Horizontal_Scrolling                                    ;90955A;
    JSR.W CalculateVerticalDistanceSamusMovedLastFrame                   ;90955D;
    JSR.W Handle_Vertical_Scrolling                                      ;909560;

.finishedScrolling:
    LDX.W $07E9                                                          ;909563;
    BEQ +                                                                ;909566;
    LDX.W #$0000                                                         ;909568;
    JSR.W ($07E9,X)                                                      ;90956B;

  + LDA.W $0AF6                                                          ;90956E;
    STA.W $0B10                                                          ;909571;
    LDA.W $0AF8                                                          ;909574;
    STA.W $0B12                                                          ;909577;
    LDA.W $0AFA                                                          ;90957A;
    STA.W $0B14                                                          ;90957D;
    LDA.W $0AFC                                                          ;909580;
    STA.W $0B16                                                          ;909583;
    PLB                                                                  ;909586;
    PLP                                                                  ;909587;
    RTL                                                                  ;909588;


ScrollingFinishedHook_SporeSpawnFight:
    LDA.W #$01D0                                                         ;909589;
    CMP.W $0915                                                          ;90958C;
    BCC .return                                                          ;90958F;
    STA.W $0915                                                          ;909591;

.return:
    RTS                                                                  ;909594;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_CameraXSpeed_0_909595:
    PHP                                                                  ;909595;
    REP #$30                                                             ;909596;
    STZ.W $0DA4                                                          ;909598;
    STZ.W $0DA2                                                          ;90959B;
    PLP                                                                  ;90959E;
    RTS                                                                  ;90959F;
endif ; !FEATURE_KEEP_UNREFERENCED


Handle_Horizontal_Scrolling:
    PHP                                                                  ;9095A0;
    REP #$30                                                             ;9095A1;
    LDA.W $0B10                                                          ;9095A3;
    CMP.W $0AF6                                                          ;9095A6;
    BNE +                                                                ;9095A9;
    JSL.L HandleScrollZones_HorizontalAutoscrolling                      ;9095AB;
    JMP.W .return                                                        ;9095AF;


  + LDA.W $0911                                                          ;9095B2;
    STA.B $12                                                            ;9095B5;
    LDA.W $0A52                                                          ;9095B7;
    BNE .backwards                                                       ;9095BA;
    LDA.W $0A1F                                                          ;9095BC;
    AND.W #$00FF                                                         ;9095BF;
    CMP.W #$0010                                                         ;9095C2;
    BNE .forwards                                                        ;9095C5;

.backwards:
    LDA.W $0A1E                                                          ;9095C7;
    AND.W #$00FF                                                         ;9095CA;
    CMP.W #$0004                                                         ;9095CD;
    BEQ .right                                                           ;9095D0;
    BRA .left                                                            ;9095D2;


.forwards:
    LDA.W $0B4A                                                          ;9095D4;
    CMP.W #$0001                                                         ;9095D7;
    BEQ .backwards                                                       ;9095DA;
    LDA.W $0A1E                                                          ;9095DC;
    AND.W #$00FF                                                         ;9095DF;
    CMP.W #$0004                                                         ;9095E2;
    BEQ .left                                                            ;9095E5;

.right:
    LDX.W $0941                                                          ;9095E7;
    LDA.W $0AF6                                                          ;9095EA;
    SEC                                                                  ;9095ED;
    SBC.W .facingRight,X                                                 ;9095EE;
    STA.W $0B0A                                                          ;9095F1;
    BRA .merge                                                           ;9095F4;


.left:
    LDX.W $0941                                                          ;9095F6;
    LDA.W $0AF6                                                          ;9095F9;
    SEC                                                                  ;9095FC;
    SBC.W .facingLeft,X                                                  ;9095FD;
    STA.W $0B0A                                                          ;909600;

.merge:
    LDA.W $0B0A                                                          ;909603;
    CMP.W $0911                                                          ;909606;
    BEQ .return                                                          ;909609;
    BMI +                                                                ;90960B;
    LDA.W $090F                                                          ;90960D;
    CLC                                                                  ;909610;
    ADC.W $0DA4                                                          ;909611;
    STA.W $090F                                                          ;909614;
    LDA.W $0911                                                          ;909617;
    ADC.W $0DA2                                                          ;90961A;
    STA.W $0911                                                          ;90961D;
    JSL.L HandleScrollZones_ScrollingRight                               ;909620;
    BRA .return                                                          ;909624;


  + LDA.W $090F                                                          ;909626;
    SEC                                                                  ;909629;
    SBC.W $0DA4                                                          ;90962A;
    STA.W $090F                                                          ;90962D;
    LDA.W $0911                                                          ;909630;
    SBC.W $0DA2                                                          ;909633;
    STA.W $0911                                                          ;909636;
    JSL.L HandleScrollZones_ScrollingLeft                                ;909639;

.return:
    PLP                                                                  ;90963D;
    RTS                                                                  ;90963E;

; Target distance camera is to the left of Samus
  .facingRight:
    dw $0060,$0040,$0020,$00E0                                           ;90963F;
  .facingLeft:
    dw $00A0,$0050,$0020,$00E0                                           ;909647;


Handle_Vertical_Scrolling:
    PHP                                                                  ;90964F;
    REP #$30                                                             ;909650;
    LDA.W $0B14                                                          ;909652;
    CMP.W $0AFA                                                          ;909655;
    BNE +                                                                ;909658;
    JSL.L HandleScrollZones_VerticalAutoscrolling                        ;90965A;
    JMP.W .return                                                        ;90965E;


  + LDA.W $0915                                                          ;909661;
    STA.B $12                                                            ;909664;
    LDA.W $0B36                                                          ;909666;
    CMP.W #$0001                                                         ;909669;
    BEQ .up                                                              ;90966C;
    LDA.W $0AFA                                                          ;90966E;
    SEC                                                                  ;909671;
    SBC.W $07AD                                                          ;909672;
    STA.W $0B0E                                                          ;909675;
    BRA +                                                                ;909678;


.up:
    LDA.W $0AFA                                                          ;90967A;
    SEC                                                                  ;90967D;
    SBC.W $07AF                                                          ;90967E;
    STA.W $0B0E                                                          ;909681;

  + LDA.W $0B0E                                                          ;909684;
    CMP.W $0915                                                          ;909687;
    BEQ .return                                                          ;90968A;
    BMI .idealLessThanActual                                             ;90968C;
    LDA.W $0913                                                          ;90968E;
    CLC                                                                  ;909691;
    ADC.W $0DA8                                                          ;909692;
    STA.W $0913                                                          ;909695;
    LDA.W $0915                                                          ;909698;
    ADC.W $0DA6                                                          ;90969B;
    STA.W $0915                                                          ;90969E;
    JSL.L HandleScrollZones_ScrollingDown                                ;9096A1;
    BRA .return                                                          ;9096A5;


.idealLessThanActual:
    LDA.W $0913                                                          ;9096A7;
    SEC                                                                  ;9096AA;
    SBC.W $0DA8                                                          ;9096AB;
    STA.W $0913                                                          ;9096AE;
    LDA.W $0915                                                          ;9096B1;
    SBC.W $0DA6                                                          ;9096B4;
    STA.W $0915                                                          ;9096B7;
    JSL.L HandleScrollZones_ScrollingUp                                  ;9096BA;

.return:
    PLP                                                                  ;9096BE;
    RTS                                                                  ;9096BF;


Calculate_CameraXSpeed:
    PHP                                                                  ;9096C0;
    REP #$30                                                             ;9096C1;
    LDA.W $0AF6                                                          ;9096C3;
    CMP.W $0B10                                                          ;9096C6;
    BMI +                                                                ;9096C9;
    BRA .right                                                           ;9096CB;


  + LDA.W $0B12                                                          ;9096CD;
    SEC                                                                  ;9096D0;
    SBC.W $0AF8                                                          ;9096D1;
    STA.W $0DA4                                                          ;9096D4;
    LDA.W $0B10                                                          ;9096D7;
    SBC.W $0AF6                                                          ;9096DA;
    CLC                                                                  ;9096DD;
    ADC.W SamusPhysicsConstants_CameraXOffsetFromSamusWhenTurning        ;9096DE;
    STA.W $0DA2                                                          ;9096E1;
    BRA .return                                                          ;9096E4;


.right:
    LDA.W $0AF8                                                          ;9096E6;
    SEC                                                                  ;9096E9;
    SBC.W $0B12                                                          ;9096EA;
    STA.W $0DA4                                                          ;9096ED;
    LDA.W $0AF6                                                          ;9096F0;
    SBC.W $0B10                                                          ;9096F3;
    CLC                                                                  ;9096F6;
    ADC.W SamusPhysicsConstants_CameraXOffsetFromSamusWhenTurning        ;9096F7;
    STA.W $0DA2                                                          ;9096FA;

.return:
    PLP                                                                  ;9096FD;
    RTS                                                                  ;9096FE;


CalculateVerticalDistanceSamusMovedLastFrame:
    PHP                                                                  ;9096FF;
    REP #$30                                                             ;909700;
    LDA.W $0AFA                                                          ;909702;
    CMP.W $0B14                                                          ;909705;
    BMI +                                                                ;909708;
    BRA .down                                                            ;90970A;


  + LDA.W $0B16                                                          ;90970C;
    SEC                                                                  ;90970F;
    SBC.W $0AFC                                                          ;909710;
    STA.W $0DA8                                                          ;909713;
    LDA.W $0B14                                                          ;909716;
    SBC.W $0AFA                                                          ;909719;
    CLC                                                                  ;90971C;
    ADC.W SamusPhysicsConstants_CameraXOffsetFromSamusWhenTurning        ;90971D;
    STA.W $0DA6                                                          ;909720;
    BRA .return                                                          ;909723;


.down:
    LDA.W $0AFC                                                          ;909725;
    SEC                                                                  ;909728;
    SBC.W $0B16                                                          ;909729;
    STA.W $0DA8                                                          ;90972C;
    LDA.W $0AFA                                                          ;90972F;
    SBC.W $0B14                                                          ;909732;
    CLC                                                                  ;909735;
    ADC.W SamusPhysicsConstants_CameraXOffsetFromSamusWhenTurning        ;909736;
    STA.W $0DA6                                                          ;909739;

.return:
    PLP                                                                  ;90973C;
    RTS                                                                  ;90973D;


Handle_Samus_XExtraRunSpeed:
    PHP                                                                  ;90973E;
    REP #$30                                                             ;90973F;
    LDA.W $09A2                                                          ;909741;
    BIT.W #$0020                                                         ;909744;
    BNE .gravity                                                         ;909747;
    JSL.L Get_Samus_Bottom_Boundary                                      ;909749;
    LDA.W $195E                                                          ;90974D;
    BMI .negativeYPosition                                               ;909750;
    CMP.B $12                                                            ;909752;
    BMI .submerged                                                       ;909754;
    BRA .gravity                                                         ;909756;


.negativeYPosition:
    LDA.W $1962                                                          ;909758;
    BMI .gravity                                                         ;90975B;
    CMP.B $12                                                            ;90975D;
    BMI .gotoNotRunning                                                  ;90975F;

.gravity:
    LDX.W #$0000                                                         ;909761;
    BRA .gravityContinued                                                ;909764;


.submerged:
    LDA.W $197E                                                          ;909766;
    BIT.W #$0004                                                         ;909769;
    BNE .gravity                                                         ;90976C;

.gotoNotRunning:
    JMP.W .notRunning                                                    ;90976E;


.gravityContinued:
    LDA.W $0A1F                                                          ;909771;
    AND.W #$00FF                                                         ;909774;
    CMP.W #$0001                                                         ;909777;
    BEQ .checkDash                                                       ;90977A;
    JMP.W .notRunning                                                    ;90977C;


.checkDash:
    LDA.B $8B                                                            ;90977F;
    AND.W $09B6                                                          ;909781;
    BNE .running                                                         ;909784;
    JMP.W .notRunning                                                    ;909786;


.running:
    LDA.W $09A2                                                          ;909789;
    BIT.W #$2000                                                         ;90978C;
    BEQ .noSpeedBooster                                                  ;90978F;
    LDA.W $0B3C                                                          ;909791;
    BNE .hasMomentum                                                     ;909794;
    LDA.W #$0001                                                         ;909796;
    STA.W $0B3C                                                          ;909799;
    STA.W $0AD0                                                          ;90979C;
    STZ.W $0ACE                                                          ;90979F;
    LDA.L SpeedBoostTimerResetValues                                     ;9097A2;
    STA.W $0B3E                                                          ;9097A6;

.hasMomentum:
    LDA.W $0B42                                                          ;9097A9;
    CMP.W SamusPhysicsConstants_MaxXExtraRunSpeeds_SpeedBooster,X        ;9097AC;
    BMI .accelerating                                                    ;9097AF;
    LDA.W $0B44                                                          ;9097B1;
    CMP.W SamusPhysicsConstants_MaxXExtraRunSubSpeeds_SpeedBooster,X     ;9097B4;
    BMI .accelerating                                                    ;9097B7;
    LDA.W SamusPhysicsConstants_MaxXExtraRunSpeeds_SpeedBooster,X        ;9097B9;
    STA.W $0B42                                                          ;9097BC;
    LDA.W SamusPhysicsConstants_MaxXExtraRunSubSpeeds_SpeedBooster,X     ;9097BF;
    STA.W $0B44                                                          ;9097C2;
    BRA .done                                                            ;9097C5;


.noSpeedBooster:
    LDA.W $0B3C                                                          ;9097C7;
    BNE +                                                                ;9097CA;
    LDA.W #$0001                                                         ;9097CC;
    STA.W $0B3C                                                          ;9097CF;
    STZ.W $0B3E                                                          ;9097D2;

  + LDA.W $0B42                                                          ;9097D5;
    CMP.W SamusPhysicsConstants_MaxXExtraRunSpeeds_NoSpeedBooster_0,X    ;9097D8;
    BMI .accelerating                                                    ;9097DB;
    LDA.W $0B44                                                          ;9097DD;
    CMP.W SamusPhysicsConstants_MaxXExtraRunSpeeds_NoSpeedBooster_1,X    ;9097E0;
    BMI .accelerating                                                    ;9097E3;
    LDA.W SamusPhysicsConstants_MaxXExtraRunSpeeds_NoSpeedBooster_0,X    ;9097E5;
    STA.W $0B42                                                          ;9097E8;
    LDA.W SamusPhysicsConstants_MaxXExtraRunSpeeds_NoSpeedBooster_1,X    ;9097EB;
    STA.W $0B44                                                          ;9097EE;
    BRA .done                                                            ;9097F1;


.accelerating:
    LDA.W $0B44                                                          ;9097F3;
    CLC                                                                  ;9097F6;
    ADC.W SamusPhysicsConstants_XSubAccelerations_DashHeld,X             ;9097F7;
    STA.W $0B44                                                          ;9097FA;
    LDA.W $0B42                                                          ;9097FD;
    ADC.W SamusPhysicsConstants_XAccelerations_DashHeld,X                ;909800;
    STA.W $0B42                                                          ;909803;
    BRA .done                                                            ;909806;


.notRunning:
    LDA.W $0B3C                                                          ;909808;
    BNE .done                                                            ;90980B;
    STZ.W $0B42                                                          ;90980D;
    STZ.W $0B44                                                          ;909810;

.done:
    LDA.W $0B3E                                                          ;909813;
    AND.W #$FF00                                                         ;909816;
    CMP.W #$0400                                                         ;909819;
    BNE .return                                                          ;90981C;
    LDA.W #$0001                                                         ;90981E;
    STA.W $0A6E                                                          ;909821;

.return:
    PLP                                                                  ;909824;
    RTS                                                                  ;909825;


MoveSamus_Right_NoCollisionDetection:
    LDA.W $0AF8                                                          ;909826;
    CLC                                                                  ;909829;
    ADC.B $14                                                            ;90982A;
    STA.W $0AF8                                                          ;90982C;
    LDA.W $0AF6                                                          ;90982F;
    ADC.B $12                                                            ;909832;
    STA.W $0AF6                                                          ;909834;
    LDA.B $14                                                            ;909837;
    STA.W $0DB0                                                          ;909839;
    LDA.B $12                                                            ;90983C;
    STA.W $0DAE                                                          ;90983E;
    RTS                                                                  ;909841;


MoveSamus_Left_NoCollisionDetection:
    LDA.W $0AF8                                                          ;909842;
    SEC                                                                  ;909845;
    SBC.B $14                                                            ;909846;
    STA.W $0AF8                                                          ;909848;
    LDA.W $0AF6                                                          ;90984B;
    SBC.B $12                                                            ;90984E;
    STA.W $0AF6                                                          ;909850;
    LDA.B $12                                                            ;909853;
    EOR.W #$FFFF                                                         ;909855;
    STA.B $12                                                            ;909858;
    LDA.B $14                                                            ;90985A;
    EOR.W #$FFFF                                                         ;90985C;
    INC A                                                                ;90985F;
    STA.B $14                                                            ;909860;
    BNE +                                                                ;909862;
    INC.B $12                                                            ;909864;

  + LDA.B $14                                                            ;909866;
    STA.W $0DAC                                                          ;909868;
    LDA.B $12                                                            ;90986B;
    STA.W $0DAA                                                          ;90986D;
    RTS                                                                  ;909870;


MoveSamus_Down_NoCollisionDetection:
    LDA.W $0AFC                                                          ;909871;
    CLC                                                                  ;909874;
    ADC.B $14                                                            ;909875;
    STA.W $0AFC                                                          ;909877;
    LDA.W $0AFA                                                          ;90987A;
    ADC.B $12                                                            ;90987D;
    STA.W $0AFA                                                          ;90987F;
    LDA.B $14                                                            ;909882;
    STA.W $0DB8                                                          ;909884;
    LDA.B $12                                                            ;909887;
    STA.W $0DB6                                                          ;909889;
    RTS                                                                  ;90988C;


MoveSamus_Up_NoCollisionDetection:
    LDA.W $0AFC                                                          ;90988D;
    SEC                                                                  ;909890;
    SBC.B $14                                                            ;909891;
    STA.W $0AFC                                                          ;909893;
    LDA.W $0AFA                                                          ;909896;
    SBC.B $12                                                            ;909899;
    STA.W $0AFA                                                          ;90989B;
    LDA.B $12                                                            ;90989E;
    EOR.W #$FFFF                                                         ;9098A0;
    STA.B $12                                                            ;9098A3;
    LDA.B $14                                                            ;9098A5;
    EOR.W #$FFFF                                                         ;9098A7;
    INC A                                                                ;9098AA;
    STA.B $14                                                            ;9098AB;
    BNE +                                                                ;9098AD;
    INC.B $12                                                            ;9098AF;

  + LDA.B $14                                                            ;9098B1;
    STA.W $0DB4                                                          ;9098B3;
    LDA.B $12                                                            ;9098B6;
    STA.W $0DB2                                                          ;9098B8;
    RTS                                                                  ;9098BB;


Make_Samus_Jump:
    PHP                                                                  ;9098BC;
    PHB                                                                  ;9098BD;
    PHK                                                                  ;9098BE;
    PLB                                                                  ;9098BF;
    REP #$30                                                             ;9098C0;
    LDA.W $09A2                                                          ;9098C2;
    BIT.W #$0020                                                         ;9098C5;
    BNE .normalGravity                                                   ;9098C8;
    JSL.L Get_Samus_Bottom_Boundary                                      ;9098CA;
    LDA.W $195E                                                          ;9098CE;
    BMI .negativeYPosition                                               ;9098D1;
    CMP.B $12                                                            ;9098D3;
    BMI .submergedInWater                                                ;9098D5;
    BRA .normalGravity                                                   ;9098D7;


.negativeYPosition:
    LDA.W $1962                                                          ;9098D9;
    BMI .normalGravity                                                   ;9098DC;
    CMP.B $12                                                            ;9098DE;
    BMI .submergedInAcidLava                                             ;9098E0;

.normalGravity:
    LDX.W #$0000                                                         ;9098E2;
    BRA .merge                                                           ;9098E5;


.submergedInWater:
    LDA.W $197E                                                          ;9098E7;
    BIT.W #$0004                                                         ;9098EA;
    BNE .normalGravity                                                   ;9098ED;
    LDX.W #$0002                                                         ;9098EF;
    BRA .merge                                                           ;9098F2;


.submergedInAcidLava:
    LDX.W #$0004                                                         ;9098F4;

.merge:
    LDA.W $09A2                                                          ;9098F7;
    BIT.W #$0100                                                         ;9098FA;
    BNE .hiJumpEquipped                                                  ;9098FD;
    LDA.W SamusPhysicsConstants_InitialYSubSpeeds_Jumping,X              ;9098FF;
    STA.W $0B2C                                                          ;909902;
    LDA.W SamusPhysicsConstants_InitialYSpeeds_Jumping,X                 ;909905;
    STA.W $0B2E                                                          ;909908;
    BRA +                                                                ;90990B;


.hiJumpEquipped:
    LDA.W SamusPhysicsConstants_InitialYSubSpeeds_HiJumpJumping,X        ;90990D;
    STA.W $0B2C                                                          ;909910;
    LDA.W SamusPhysicsConstants_InitialYSpeeds_HiJumpJumping,X           ;909913;
    STA.W $0B2E                                                          ;909916;

  + LDA.W $09A2                                                          ;909919;
    BIT.W #$2000                                                         ;90991C;
    BEQ +                                                                ;90991F;
    LDA.W $0B42                                                          ;909921;
    LSR A                                                                ;909924;
    STA.B $12                                                            ;909925;
    LDA.W $0B2C                                                          ;909927;
    CLC                                                                  ;90992A;
    ADC.W $0B44                                                          ;90992B;
    STA.W $0B2C                                                          ;90992E;
    LDA.W $0B2E                                                          ;909931;
    CLC                                                                  ;909934;
    ADC.B $12                                                            ;909935;
    STA.W $0B2E                                                          ;909937;

  + STZ.W $0A9E                                                          ;90993A;
    STZ.W $0AA0                                                          ;90993D;
    LDA.W #$0001                                                         ;909940;
    STA.W $0B36                                                          ;909943;
    PLB                                                                  ;909946;
    PLP                                                                  ;909947;
    RTL                                                                  ;909948;


Make_Samus_WallJump:
    PHP                                                                  ;909949;
    PHB                                                                  ;90994A;
    PHK                                                                  ;90994B;
    PLB                                                                  ;90994C;
    REP #$30                                                             ;90994D;
    LDA.W $09A2                                                          ;90994F;
    BIT.W #$0020                                                         ;909952;
    BNE .normalGravity                                                   ;909955;
    JSL.L Get_Samus_Bottom_Boundary                                      ;909957;
    LDA.W $195E                                                          ;90995B;
    BMI .negativeYPosition                                               ;90995E;
    CMP.B $12                                                            ;909960;
    BMI .submergedInWater                                                ;909962;
    BRA .normalGravity                                                   ;909964;


.negativeYPosition:
    LDA.W $1962                                                          ;909966;
    BMI .normalGravity                                                   ;909969;
    CMP.B $12                                                            ;90996B;
    BMI .submergedInAcidLava                                             ;90996D;

.normalGravity:
    LDX.W #$0000                                                         ;90996F;
    BRA .merge                                                           ;909972;


.submergedInWater:
    LDA.W $197E                                                          ;909974;
    BIT.W #$0004                                                         ;909977;
    BNE .normalGravity                                                   ;90997A;
    LDX.W #$0002                                                         ;90997C;
    BRA .merge                                                           ;90997F;


.submergedInAcidLava:
    LDX.W #$0004                                                         ;909981;

.merge:
    LDA.W $09A2                                                          ;909984;
    BIT.W #$0100                                                         ;909987;
    BNE .hiJumpEquipped                                                  ;90998A;
    LDA.W SamusPhysicsConstants_InitialYSubSpeeds_WallJumping,X          ;90998C;
    STA.W $0B2C                                                          ;90998F;
    LDA.W SamusPhysicsConstants_InitialYSpeeds_WallJumping,X             ;909992;
    STA.W $0B2E                                                          ;909995;
    BRA +                                                                ;909998;


.hiJumpEquipped:
    LDA.W SamusPhysicsConstants_InitialYSubSpeeds_HiJumpWallJumping,X    ;90999A;
    STA.W $0B2C                                                          ;90999D;
    LDA.W SamusPhysicsConstants_InitialYSpeeds_HiJumpWallJumping,X       ;9099A0;
    STA.W $0B2E                                                          ;9099A3;

  + LDA.W $09A2                                                          ;9099A6;
    BIT.W #$2000                                                         ;9099A9;
    BEQ +                                                                ;9099AC;
    LDA.W $0B42                                                          ;9099AE;
    LSR A                                                                ;9099B1;
    STA.B $12                                                            ;9099B2;
    LDA.W $0B2C                                                          ;9099B4;
    CLC                                                                  ;9099B7;
    ADC.W $0B44                                                          ;9099B8;
    STA.W $0B2C                                                          ;9099BB;
    LDA.W $0B2E                                                          ;9099BE;
    CLC                                                                  ;9099C1;
    ADC.B $12                                                            ;9099C2;
    STA.W $0B2E                                                          ;9099C4;

  + STZ.W $0A9E                                                          ;9099C7;
    STZ.W $0AA0                                                          ;9099CA;
    LDA.W #$0001                                                         ;9099CD;
    STA.W $0B36                                                          ;9099D0;
    PLB                                                                  ;9099D3;
    PLP                                                                  ;9099D4;
    RTL                                                                  ;9099D5;


SetSamusYSpeedForKnockback:
    PHP                                                                  ;9099D6;
    PHB                                                                  ;9099D7;
    PHK                                                                  ;9099D8;
    PLB                                                                  ;9099D9;
    REP #$30                                                             ;9099DA;
    LDA.W $09A2                                                          ;9099DC;
    BIT.W #$0020                                                         ;9099DF;
    BNE .inAir                                                           ;9099E2;
    JSL.L Get_Samus_Bottom_Boundary                                      ;9099E4;
    LDA.W $195E                                                          ;9099E8;
    BMI .negativeYPosition                                               ;9099EB;
    CMP.B $12                                                            ;9099ED;
    BMI .inWater                                                         ;9099EF;
    BRA .inAir                                                           ;9099F1;


.negativeYPosition:
    LDA.W $1962                                                          ;9099F3;
    BMI .inAir                                                           ;9099F6;
    CMP.B $12                                                            ;9099F8;
    BMI .inAcidLava                                                      ;9099FA;

.inAir:
    LDX.W #$0000                                                         ;9099FC;
    BRA .merge                                                           ;9099FF;


.inWater:
    LDA.W $197E                                                          ;909A01;
    BIT.W #$0004                                                         ;909A04;
    BNE .inAir                                                           ;909A07;
    LDX.W #$0002                                                         ;909A09;
    BRA .merge                                                           ;909A0C;


.inAcidLava:
    LDX.W #$0004                                                         ;909A0E;

.merge:
    LDA.W SamusPhysicsConstants_InitialYSubSpeeds_Knockback,X            ;909A11;
    STA.W $0B2C                                                          ;909A14;
    LDA.W SamusPhysicsConstants_InitialYSpeeds_Knockback,X               ;909A17;
    STA.W $0B2E                                                          ;909A1A;
    STZ.W $0A9E                                                          ;909A1D;
    STZ.W $0AA0                                                          ;909A20;
    LDA.W #$0001                                                         ;909A23;
    STA.W $0B36                                                          ;909A26;
    PLB                                                                  ;909A29;
    PLP                                                                  ;909A2A;
    RTL                                                                  ;909A2B;


Make_Samus_BombJump:
    PHP                                                                  ;909A2C;
    REP #$30                                                             ;909A2D;
    LDA.W $09A2                                                          ;909A2F;
    BIT.W #$0020                                                         ;909A32;
    BNE .normalGravity                                                   ;909A35;
    JSL.L Get_Samus_Bottom_Boundary                                      ;909A37;
    LDA.W $195E                                                          ;909A3B;
    BMI .negativeYPosition                                               ;909A3E;
    CMP.B $12                                                            ;909A40;
    BMI .submergedInWater                                                ;909A42;
    BRA .normalGravity                                                   ;909A44;


.negativeYPosition:
    LDA.W $1962                                                          ;909A46;
    BMI .normalGravity                                                   ;909A49;
    CMP.B $12                                                            ;909A4B;
    BMI .submergedInAcidLava                                             ;909A4D;

.normalGravity:
    LDX.W #$0000                                                         ;909A4F;
    BRA .merge                                                           ;909A52;


.submergedInWater:
    LDA.W $197E                                                          ;909A54;
    BIT.W #$0004                                                         ;909A57;
    BNE .normalGravity                                                   ;909A5A;
    LDX.W #$0002                                                         ;909A5C;
    BRA .merge                                                           ;909A5F;


.submergedInAcidLava:
    LDX.W #$0004                                                         ;909A61;

.merge:
    LDA.W SamusPhysicsConstants_InitialYSubSpeeds_BombJump,X             ;909A64;
    STA.W $0B2C                                                          ;909A67;
    LDA.W SamusPhysicsConstants_InitialYSpeeds_BombJump,X                ;909A6A;
    STA.W $0B2E                                                          ;909A6D;
    STZ.W $0A9E                                                          ;909A70;
    STZ.W $0AA0                                                          ;909A73;
    LDA.W #$0001                                                         ;909A76;
    STA.W $0B36                                                          ;909A79;
    PLP                                                                  ;909A7C;
    RTS                                                                  ;909A7D;


CalculateSamusXBaseSpeed_DecelerationAllowed:
    PHP                                                                  ;909A7E;
    REP #$30                                                             ;909A7F;
    LDA.W $0B4A                                                          ;909A81;
    BNE .decelerating                                                    ;909A84;
    LDA.W $0B48                                                          ;909A86;
    CLC                                                                  ;909A89;
    ADC.W $0002,X                                                        ;909A8A;
    STA.W $0B48                                                          ;909A8D;
    LDA.W $0B46                                                          ;909A90;
    ADC.W $0000,X                                                        ;909A93;
    STA.W $0B46                                                          ;909A96;
    CMP.W $0004,X                                                        ;909A99;
    BMI .return                                                          ;909A9C;
    BEQ .checkMaxSubSpeed                                                ;909A9E;

.capXSpeed:
    LDA.W $0004,X                                                        ;909AA0;
    STA.W $0B46                                                          ;909AA3;
    LDA.W $0006,X                                                        ;909AA6;
    STA.W $0B48                                                          ;909AA9;
    BRA .return                                                          ;909AAC;


.checkMaxSubSpeed:
    LDA.W $0B48                                                          ;909AAE;
    CMP.W $0006,X                                                        ;909AB1;
    BMI .return                                                          ;909AB4;
    BEQ .return                                                          ;909AB6;
    BRA .capXSpeed                                                       ;909AB8;


.decelerating:
    SEP #$20                                                             ;909ABA;
    LDA.W $0B4C                                                          ;909ABC;
    BEQ .zeroMultiplier                                                  ;909ABF;
    STA.W $4202                                                          ;909AC1;
    LDA.W $000B,X                                                        ;909AC4;
    STA.W $4203                                                          ;909AC7;
    NOP                                                                  ;909ACA;
    NOP                                                                  ;909ACB;
    NOP                                                                  ;909ACC;
    REP #$20                                                             ;909ACD;
    LDA.W $4216                                                          ;909ACF;
    STA.B $14                                                            ;909AD2;
    SEP #$20                                                             ;909AD4;
    LDA.W $0008,X                                                        ;909AD6;
    STA.W $4203                                                          ;909AD9;
    NOP                                                                  ;909ADC;
    NOP                                                                  ;909ADD;
    NOP                                                                  ;909ADE;
    REP #$20                                                             ;909ADF;
    LDA.W $4217                                                          ;909AE1;
    AND.W #$00FF                                                         ;909AE4;
    STA.B $12                                                            ;909AE7;
    BRA +                                                                ;909AE9;


.zeroMultiplier:
    REP #$20                                                             ;909AEB;
    LDA.W $000A,X                                                        ;909AED;
    STA.B $14                                                            ;909AF0;
    LDA.W $0008,X                                                        ;909AF2;
    STA.B $12                                                            ;909AF5;

  + LDA.W $0B48                                                          ;909AF7;
    SEC                                                                  ;909AFA;
    SBC.B $14                                                            ;909AFB;
    STA.W $0B48                                                          ;909AFD;
    LDA.W $0B46                                                          ;909B00;
    SBC.B $12                                                            ;909B03;
    STA.W $0B46                                                          ;909B05;
    BPL .return                                                          ;909B08;
    STZ.W $0B46                                                          ;909B0A;
    STZ.W $0B48                                                          ;909B0D;
    STZ.W $0B4A                                                          ;909B10;

.return:
    LDA.W $0B46                                                          ;909B13;
    STA.B $12                                                            ;909B16;
    LDA.W $0B48                                                          ;909B18;
    STA.B $14                                                            ;909B1B;
    PLP                                                                  ;909B1D;
    RTS                                                                  ;909B1E;


CalculateSamusXBaseSpeed_DecelerationDisallowed:
    PHP                                                                  ;909B1F;
    REP #$30                                                             ;909B20;
    LDA.W $0B4A                                                          ;909B22;
    BIT.W #$0001                                                         ;909B25;
    BNE .turningAround                                                   ;909B28;
    LDA.W $0B48                                                          ;909B2A;
    CLC                                                                  ;909B2D;
    ADC.W $0002,X                                                        ;909B2E;
    STA.W $0B48                                                          ;909B31;
    LDA.W $0B46                                                          ;909B34;
    ADC.W $0000,X                                                        ;909B37;
    STA.W $0B46                                                          ;909B3A;
    CMP.W $0004,X                                                        ;909B3D;
    BMI .returnClear                                                     ;909B40;
    BEQ .checkMaxSubSpeed                                                ;909B42;

.capXSpeed:
    LDA.W $0004,X                                                        ;909B44;
    STA.W $0B46                                                          ;909B47;
    LDA.W $0006,X                                                        ;909B4A;
    STA.W $0B48                                                          ;909B4D;
    BRA .returnSet                                                       ;909B50;


.checkMaxSubSpeed:
    LDA.W $0B48                                                          ;909B52;
    CMP.W $0006,X                                                        ;909B55;
    BMI .returnClear                                                     ;909B58;
    BEQ .returnClear                                                     ;909B5A;
    BRA .capXSpeed                                                       ;909B5C;


.turningAround:
    SEP #$20                                                             ;909B5E;
    LDA.W $0B4C                                                          ;909B60;
    BEQ .zeroMultiplier                                                  ;909B63;
    STA.W $4202                                                          ;909B65;
    LDA.W $000B,X                                                        ;909B68;
    STA.W $4203                                                          ;909B6B;
    NOP                                                                  ;909B6E;
    NOP                                                                  ;909B6F;
    NOP                                                                  ;909B70;
    REP #$20                                                             ;909B71;
    LDA.W $4216                                                          ;909B73;
    STA.B $14                                                            ;909B76;
    SEP #$20                                                             ;909B78;
    LDA.W $0008,X                                                        ;909B7A;
    STA.W $4203                                                          ;909B7D;
    NOP                                                                  ;909B80;
    NOP                                                                  ;909B81;
    NOP                                                                  ;909B82;
    REP #$20                                                             ;909B83;
    LDA.W $4217                                                          ;909B85;
    AND.W #$00FF                                                         ;909B88;
    STA.B $12                                                            ;909B8B;
    BRA +                                                                ;909B8D;


.zeroMultiplier:
    REP #$20                                                             ;909B8F;
    LDA.W $000A,X                                                        ;909B91;
    STA.B $14                                                            ;909B94;
    LDA.W $0008,X                                                        ;909B96;
    STA.B $12                                                            ;909B99;

  + LDA.W $0B48                                                          ;909B9B;
    SEC                                                                  ;909B9E;
    SBC.B $14                                                            ;909B9F;
    STA.W $0B48                                                          ;909BA1;
    LDA.W $0B46                                                          ;909BA4;
    SBC.B $12                                                            ;909BA7;
    STA.W $0B46                                                          ;909BA9;
    BPL .returnClear                                                     ;909BAC;
    STZ.W $0B46                                                          ;909BAE;
    STZ.W $0B48                                                          ;909BB1;
    STZ.W $0B4A                                                          ;909BB4;

.returnClear:
    LDA.W $0B46                                                          ;909BB7;
    STA.B $12                                                            ;909BBA;
    LDA.W $0B48                                                          ;909BBC;
    STA.B $14                                                            ;909BBF;
    PLP                                                                  ;909BC1;
    CLC                                                                  ;909BC2;
    RTS                                                                  ;909BC3;


.returnSet:
    LDA.W $0B46                                                          ;909BC4;
    STA.B $12                                                            ;909BC7;
    LDA.W $0B48                                                          ;909BC9;
    STA.B $14                                                            ;909BCC;
    PLP                                                                  ;909BCE;
    SEC                                                                  ;909BCF;
    RTS                                                                  ;909BD0;


Determine_SamusXSpeedTable_EntryPointer:
    PHP                                                                  ;909BD1;
    REP #$30                                                             ;909BD2;
    LDA.W $09A2                                                          ;909BD4;
    BIT.W #$0020                                                         ;909BD7;
    BNE .gotoSpeedTableSet                                               ;909BDA;
    JSL.L Get_Samus_Bottom_Boundary                                      ;909BDC;
    LDA.W $195E                                                          ;909BE0;
    BMI .negativeYPosition                                               ;909BE3;
    CMP.B $12                                                            ;909BE5;
    BMI .submergedInWater                                                ;909BE7;
    BRA .gotoSpeedTableSet                                               ;909BE9;


.negativeYPosition:
    LDA.W $1962                                                          ;909BEB;
    BMI .gotoSpeedTableSet                                               ;909BEE;
    CMP.B $12                                                            ;909BF0;
    BMI .submergedInAcidLava                                             ;909BF2;

.gotoSpeedTableSet:
    BRA .speedTableSet                                                   ;909BF4;


.submergedInWater:
    LDA.W $197E                                                          ;909BF6;
    BIT.W #$0004                                                         ;909BF9;
    BNE .gotoSpeedTableSet                                               ;909BFC;
    LDA.W #SamusXSpeedTable_InWater                                      ;909BFE;
    STA.W $0A6C                                                          ;909C01;
    BRA .speedTableSet                                                   ;909C04;


.submergedInAcidLava:
    LDA.W #SamusXSpeedTable_InLavaAcid                                   ;909C06;
    STA.W $0A6C                                                          ;909C09;

.speedTableSet:
    LDA.W $0A1F                                                          ;909C0C;
    AND.W #$00FF                                                         ;909C0F;
    STA.B $14                                                            ;909C12;
    ASL A                                                                ;909C14;
    CLC                                                                  ;909C15;
    ADC.B $14                                                            ;909C16;
    ASL A                                                                ;909C18;
    ASL A                                                                ;909C19;
    CLC                                                                  ;909C1A;
    ADC.W $0A6C                                                          ;909C1B;
    TAX                                                                  ;909C1E;
    PLP                                                                  ;909C1F;
    RTS                                                                  ;909C20;


DetermineGrappleSwing_SamusXSpeedTable_EntryPointer:
    PHP                                                                  ;909C21;
    REP #$30                                                             ;909C22;
    LDA.W $09A2                                                          ;909C24;
    BIT.W #$0020                                                         ;909C27;
    BNE .normalGravity                                                   ;909C2A;
    JSL.L Get_Samus_Bottom_Boundary                                      ;909C2C;
    LDA.W $195E                                                          ;909C30;
    BMI .negativeYPosition                                               ;909C33;
    CMP.B $12                                                            ;909C35;
    BMI .submergedInWater                                                ;909C37;
    BRA .normalGravity                                                   ;909C39;


.negativeYPosition:
    LDA.W $1962                                                          ;909C3B;
    BMI .normalGravity                                                   ;909C3E;
    CMP.B $12                                                            ;909C40;
    BMI .submergedInAcidLava                                             ;909C42;

.normalGravity:
    LDX.W #SamusPhysicsConstants_XAccelSpeeds_DisconnectGrappleInAir     ;909C44;
    BRA .return                                                          ;909C47;


.submergedInWater:
    LDA.W $197E                                                          ;909C49;
    BIT.W #$0004                                                         ;909C4C;
    BNE .normalGravity                                                   ;909C4F;
    LDX.W #SamusPhysicsConstants_XAccelSpeeds_DisconnectGrappleInWater   ;909C51;
    BRA .return                                                          ;909C54;


.submergedInAcidLava:
    LDX.W #SamusPhysicsConstants_XAccelSpeeds_DisconnectGrappleInLavaAcid   ;909C56;

.return:
    PLP                                                                  ;909C59;
    RTS                                                                  ;909C5A;


Determine_Samus_YAcceleration:
    LDA.W $09A2                                                          ;909C5B;
    BIT.W #$0020                                                         ;909C5E;
    BNE .notSubmerged                                                    ;909C61;
    JSL.L Get_Samus_Bottom_Boundary                                      ;909C63;
    LDA.W $195E                                                          ;909C67;
    BMI .negativeYPosition                                               ;909C6A;
    CMP.B $12                                                            ;909C6C;
    BMI .submergedInWater                                                ;909C6E;
    BRA .notSubmerged                                                    ;909C70;


.negativeYPosition:
    LDA.W $1962                                                          ;909C72;
    BMI .notSubmerged                                                    ;909C75;
    CMP.B $12                                                            ;909C77;
    BMI .submergedInAcidLava                                             ;909C79;

.notSubmerged:
    LDA.W SamusPhysicsConstants_YSubAccelerationInAir                    ;909C7B;
    STA.W $0B32                                                          ;909C7E;
    LDA.W SamusPhysicsConstants_YAccelerationInAir                       ;909C81;
    STA.W $0B34                                                          ;909C84;
    BRA .return                                                          ;909C87;


.submergedInWater:
    LDA.W $197E                                                          ;909C89;
    BIT.W #$0004                                                         ;909C8C;
    BNE .notSubmerged                                                    ;909C8F;
    LDA.W SamusPhysicsConstants_YSubAccelerationInWater                  ;909C91;
    STA.W $0B32                                                          ;909C94;
    LDA.W SamusPhysicsConstants_YAccelerationInWater                     ;909C97;
    STA.W $0B34                                                          ;909C9A;
    BRA .return                                                          ;909C9D;


.submergedInAcidLava:
    LDA.W SamusPhysicsConstants_YSubAccelerationInAcidLava               ;909C9F;
    STA.W $0B32                                                          ;909CA2;
    LDA.W SamusPhysicsConstants_YAccelerationInAcidLava                  ;909CA5;
    STA.W $0B34                                                          ;909CA8;

.return:
    RTS                                                                  ;909CAB;


Grapple_WallJump_Check:
    PHP                                                                  ;909CAC;
    PHB                                                                  ;909CAD;
    PHK                                                                  ;909CAE;
    PLB                                                                  ;909CAF;
    REP #$30                                                             ;909CB0;
    LDA.W #$FFFF                                                         ;909CB2;
    STA.W $0E1C                                                          ;909CB5;
    LDA.W $0A1E                                                          ;909CB8;
    AND.W #$00FF                                                         ;909CBB;
    CMP.W #$0004                                                         ;909CBE;
    BEQ .facingLeft                                                      ;909CC1;
    CMP.W #$0008                                                         ;909CC3;
    BEQ .facingRight                                                     ;909CC6;

.gotoReturnCarryClear:
    JMP.W .returnCarryClear                                              ;909CC8;


.facingRight:
    LDA.W #$0001                                                         ;909CCB;
    STA.W $0B02                                                          ;909CCE;
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;909CD1;
    TAX                                                                  ;909CD5;
    BNE .checkJump                                                       ;909CD6;
    JSL.L WallJumpBlockCollisionDetection                                ;909CD8;
    BCC .gotoReturnCarryClear                                            ;909CDC;
    LDA.B $8F                                                            ;909CDE;
    BIT.W $09B4                                                          ;909CE0;
    BNE .returnCarrySet                                                  ;909CE3;
    JMP.W .returnCarryClear                                              ;909CE5;


.checkJump:
    LDA.B $8F                                                            ;909CE8;
    BIT.W $09B4                                                          ;909CEA;
    BNE .wallJumpEnemy                                                   ;909CED;
    BRA .returnCarryClear                                                ;909CEF;


.facingLeft:
    STZ.W $0B02                                                          ;909CF1;
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;909CF4;
    TAX                                                                  ;909CF8;
    BNE .collisionDetected                                               ;909CF9;
    LDA.B $12                                                            ;909CFB;
    EOR.W #$FFFF                                                         ;909CFD;
    STA.B $12                                                            ;909D00;
    LDA.B $14                                                            ;909D02;
    EOR.W #$FFFF                                                         ;909D04;
    INC A                                                                ;909D07;
    STA.B $14                                                            ;909D08;
    BNE .wallJumpCollision                                               ;909D0A;
    INC.B $12                                                            ;909D0C;

.wallJumpCollision:
    JSL.L WallJumpBlockCollisionDetection                                ;909D0E;
    BCC .returnCarryClear                                                ;909D12;
    LDA.B $8F                                                            ;909D14;
    BIT.W $09B4                                                          ;909D16;
    BNE .returnCarrySet                                                  ;909D19;
    BRA .returnCarryClear                                                ;909D1B;


.collisionDetected:
    LDA.B $8F                                                            ;909D1D;
    BIT.W $09B4                                                          ;909D1F;
    BEQ .returnCarryClear                                                ;909D22;

.wallJumpEnemy:
    LDA.B $16                                                            ;909D24;
    STA.W $0E1C                                                          ;909D26;
    PLB                                                                  ;909D29;
    PLP                                                                  ;909D2A;
    SEC                                                                  ;909D2B;
    RTL                                                                  ;909D2C;


.returnCarrySet:
    PLB                                                                  ;909D2D;
    PLP                                                                  ;909D2E;
    SEC                                                                  ;909D2F;
    RTL                                                                  ;909D30;


.returnCarryClear:
    PLB                                                                  ;909D31;
    PLP                                                                  ;909D32;
    CLC                                                                  ;909D33;
    RTL                                                                  ;909D34;


WallJump_Check:
    PHP                                                                  ;909D35;
    REP #$30                                                             ;909D36;
    LDA.W $0A27                                                          ;909D38;
    AND.W #$00FF                                                         ;909D3B;
    CMP.W #$0003                                                         ;909D3E;
    BEQ .spinJumping                                                     ;909D41;
    CMP.W #$0014                                                         ;909D43;
    BNE .carryClearReturn                                                ;909D46;

.spinJumping:
    LDA.W $0A1C                                                          ;909D48;
    CMP.W #$0081                                                         ;909D4B;
    BEQ .screwAttack                                                     ;909D4E;
    CMP.W #$0082                                                         ;909D50;
    BEQ .screwAttack                                                     ;909D53;
    LDA.W $0A96                                                          ;909D55;
    CMP.W #$000B                                                         ;909D58;
    BMI .spinningAnimation                                               ;909D5B;
    JMP.W .wallJumpEligibleAnimation                                     ;909D5D;


.screwAttack:
    LDA.W $0A96                                                          ;909D60;
    CMP.W #$001B                                                         ;909D63;
    BMI .spinningAnimation                                               ;909D66;
    JMP.W .wallJumpEligibleAnimation                                     ;909D68;


.spinningAnimation:
    LDA.B $8B                                                            ;909D6B;
    BIT.W #$0200                                                         ;909D6D;
    BNE .spinningPressingLeft                                            ;909D70;
    BIT.W #$0100                                                         ;909D72;
    BNE .spinningPressingRight                                           ;909D75;

.carryClearReturn:
    PLP                                                                  ;909D77;
    CLC                                                                  ;909D78;
    RTS                                                                  ;909D79;


.spinningPressingLeft:
    LDA.W #$0001                                                         ;909D7A;
    STA.W $0B02                                                          ;909D7D;
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;909D80;
    TAX                                                                  ;909D84;
    BNE .collisionDetected                                               ;909D85;
    JSL.L WallJumpBlockCollisionDetection                                ;909D87;
    BCC .carryClearReturn                                                ;909D8B;
    BRA .collisionDetected                                               ;909D8D;


.spinningPressingRight:
    STZ.W $0B02                                                          ;909D8F;
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;909D92;
    TAX                                                                  ;909D96;
    BNE .collisionDetected                                               ;909D97;
    LDA.B $12                                                            ;909D99;
    EOR.W #$FFFF                                                         ;909D9B;
    STA.B $12                                                            ;909D9E;
    LDA.B $14                                                            ;909DA0;
    EOR.W #$FFFF                                                         ;909DA2;
    INC A                                                                ;909DA5;
    STA.B $14                                                            ;909DA6;
    BNE .wallJumpCollisionDetection                                      ;909DA8;
    INC.B $12                                                            ;909DAA;

.wallJumpCollisionDetection:
    JSL.L WallJumpBlockCollisionDetection                                ;909DAC;
    BCC .carryClearReturn                                                ;909DB0;

.collisionDetected:
    LDA.W $0A1C                                                          ;909DB2;
    CMP.W #$0081                                                         ;909DB5;
    BEQ .screwAttackPose                                                 ;909DB8;
    CMP.W #$0082                                                         ;909DBA;
    BEQ .screwAttackPose                                                 ;909DBD;
    LDA.W #$0001                                                         ;909DBF;
    STA.W $0A94                                                          ;909DC2;
    LDA.W #$000A                                                         ;909DC5;
    STA.W $0A96                                                          ;909DC8;
    JMP.W .carryClearReturn                                              ;909DCB;


.screwAttackPose:
    LDA.W #$0001                                                         ;909DCE;
    STA.W $0A94                                                          ;909DD1;
    LDA.W #$001A                                                         ;909DD4;
    STA.W $0A96                                                          ;909DD7;
    JMP.W .carryClearReturn                                              ;909DDA;


.wallJumpEligibleAnimation:
    LDA.W #$FFFF                                                         ;909DDD;
    STA.W $0E1C                                                          ;909DE0;
    LDA.B $8B                                                            ;909DE3;
    BIT.W #$0200                                                         ;909DE5;
    BNE .wallJumpEligiblePressingLeft                                    ;909DE8;
    BIT.W #$0100                                                         ;909DEA;
    BNE .wallJumpEligiblePressingRight                                   ;909DED;

.gotoReturnCarryClear:
    JMP.W .returnCarryClear                                              ;909DEF;


.wallJumpEligiblePressingLeft:
    LDA.W #$0001                                                         ;909DF2;
    STA.W $0B02                                                          ;909DF5;
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;909DF8;
    TAX                                                                  ;909DFC;
    BNE .collision                                                       ;909DFD;
    JSL.L WallJumpBlockCollisionDetection                                ;909DFF;
    BCC .gotoReturnCarryClear                                            ;909E03;
    LDA.B $8F                                                            ;909E05;
    BIT.W $09B4                                                          ;909E07;
    BNE .wallJumpBlock                                                   ;909E0A;
    JMP.W .returnCarryClear                                              ;909E0C;


.collision:
    LDA.B $8F                                                            ;909E0F;
    BIT.W $09B4                                                          ;909E11;
    BNE .wallJumpEnemy                                                   ;909E14;
    BRA .returnCarryClear                                                ;909E16;


.wallJumpEligiblePressingRight:
    STZ.W $0B02                                                          ;909E18;
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;909E1B;
    TAX                                                                  ;909E1F;
    BNE .leftCollisionDetected                                           ;909E20;
    LDA.B $12                                                            ;909E22;
    EOR.W #$FFFF                                                         ;909E24;
    STA.B $12                                                            ;909E27;
    LDA.B $14                                                            ;909E29;
    EOR.W #$FFFF                                                         ;909E2B;
    INC A                                                                ;909E2E;
    STA.B $14                                                            ;909E2F;
    BNE .wallJumpBlockCollisionDetection                                 ;909E31;
    INC.B $12                                                            ;909E33;

.wallJumpBlockCollisionDetection:
    JSL.L WallJumpBlockCollisionDetection                                ;909E35;
    BCC .returnCarryClear                                                ;909E39;
    LDA.B $8F                                                            ;909E3B;
    BIT.W $09B4                                                          ;909E3D;
    BNE .wallJumpBlock                                                   ;909E40;
    BRA .returnCarryClear                                                ;909E42;


.leftCollisionDetected:
    LDA.B $8F                                                            ;909E44;
    BIT.W $09B4                                                          ;909E46;
    BEQ .returnCarryClear                                                ;909E49;

.wallJumpEnemy:
    LDA.W #$0000                                                         ;909E4B;
    BEQ .checkDistanceEnemy                                              ;909E4E;
    LDA.B $12                                                            ;909E50;
    CMP.W #$0005                                                         ;909E52;
    BMI .returnCarryClear                                                ;909E55;

.checkDistanceEnemy:
    LDA.B $12                                                            ;909E57;
    CMP.W #$0008                                                         ;909E59;
    BPL .returnCarryClear                                                ;909E5C;
    LDA.W #$0005                                                         ;909E5E;
    STA.W $0DC6                                                          ;909E61;
    LDA.B $16                                                            ;909E64;
    STA.W $0E1C                                                          ;909E66;
    PLP                                                                  ;909E69;
    SEC                                                                  ;909E6A;
    RTS                                                                  ;909E6B;


.wallJumpBlock:
    LDA.W #$0000                                                         ;909E6C;
    BEQ .checkDistanceBlock                                              ;909E6F;
    LDA.B $12                                                            ;909E71;
    CMP.W #$0005                                                         ;909E73;
    BMI .returnCarryClear                                                ;909E76;

.checkDistanceBlock:
    LDA.B $12                                                            ;909E78;
    CMP.W #$0008                                                         ;909E7A;
    BPL .returnCarryClear                                                ;909E7D;
    LDA.W #$0005                                                         ;909E7F;
    STA.W $0DC6                                                          ;909E82;
    PLP                                                                  ;909E85;
    SEC                                                                  ;909E86;
    RTS                                                                  ;909E87;


.returnCarryClear:
    PLP                                                                  ;909E88;
    CLC                                                                  ;909E89;
    RTS                                                                  ;909E8A;


SamusPhysicsConstants:
  .LavaSubDamagePerFrame:
    dw $9900                                                             ;909E8B;

  .LavaDamagePerFrame:
    dw $0000                                                             ;909E8D;

  .AcidSubDamagePerFrame:
    dw $CC00                                                             ;909E8F;

  .AcidDamagePerFrame:
    dw $0001                                                             ;909E91;

  .AnimationDelayInWater:
    dw $0003                                                             ;909E93;

  .AnimationDelayInLavaAcid:
    dw $0002                                                             ;909E95;

  .SpaceJumpMinimumYVelocityInAir:
    dw $0300                                                             ;909E97;

  .SpaceJumpMaximumYVelocityInAir:
    dw $0600                                                             ;909E99;

  .SpaceJumpMinimumYVelocityInWater:
    dw $0080                                                             ;909E9B;

  .SpaceJumpMaximumYVelocityInWater:
    dw $0500                                                             ;909E9D;

  .MaximumDistanceFromWallForWallJump:
    dw $0008                                                             ;909E9F;

  .YSubAccelerationInAir:
    dw $2800                                                             ;909EA1;

  .YSubAccelerationInWater:
    dw $0999                                                             ;909EA3;

  .YSubAccelerationInAcidLava:
    dw $0ACC                                                             ;909EA5;

  .YAccelerationInAir:
    dw $0000                                                             ;909EA7;

  .YAccelerationInWater:
    dw $0000                                                             ;909EA9;

  .YAccelerationInAcidLava:
    dw $0000                                                             ;909EAB;

  .CameraXOffsetFromSamusWhenTurning:
    dw $0001                                                             ;909EAD;

  .CameraXSubOffsetFromSamusWhenTurning:
    dw $0000                                                             ;909EAF;

  .CameraYOffsetFromSamusWhenTurning:
    dw $0001                                                             ;909EB1;

  .CameraYSubOffsetFromSamusWhenTurning:
    dw $0000                                                             ;909EB3;

  .YSpeedWhenBouncingInMorphBall:
    dw $0001                                                             ;909EB5;

  .YSubSpeedWhenBouncingInMorphBall:
    dw $3300                                                             ;909EB7;

  .InitialYSpeeds_Jumping:
    dw $0005,$0002,$0003                                                 ;909EB9;

  .InitialYSubSpeeds_Jumping:
    dw $D900,$1900,$4C00                                                 ;909EBF;

  .InitialYSpeeds_HiJumpJumping:
    dw $0007,$0003,$0004                                                 ;909EC5;

  .InitialYSubSpeeds_HiJumpJumping:
    dw $3300,$0000,$3300                                                 ;909ECB;

  .InitialYSpeeds_WallJumping:
    dw $0005,$0000,$0003                                                 ;909ED1;

  .InitialYSubSpeeds_WallJumping:
    dw $8C00,$4C00,$2600                                                 ;909ED7;

  .InitialYSpeeds_HiJumpWallJumping:
    dw $0006,$0000,$0004                                                 ;909EDD;

  .InitialYSubSpeeds_HiJumpWallJumping:
    dw $9900,$9900,$3300                                                 ;909EE3;

  .InitialYSpeeds_Knockback:
    dw $0006,$0002,$0002                                                 ;909EE9;

  .InitialYSubSpeeds_Knockback:
    dw $0000,$6600,$6600                                                 ;909EEF;

  .InitialYSpeeds_BombJump:
    dw $0003,$0000,$0000                                                 ;909EF5;

  .InitialYSubSpeeds_BombJump:
    dw $4C00,$1300,$1300                                                 ;909EFB;

  .XAccelerations_DashHeld:
    dw $0000,$0000,$0000                                                 ;909F01;

  .XSubAccelerations_DashHeld:
    dw $1400,$04CC,$04CC                                                 ;909F07;

  .MaxXExtraRunSpeeds_SpeedBooster:
    dw $0008,$0004,$0004                                                 ;909F0D;

  .MaxXExtraRunSubSpeeds_SpeedBooster:
    dw $0000,$0000,$0000                                                 ;909F13;

  .MaxXExtraRunSpeeds_NoSpeedBooster_0:
    dw $0002,$0001,$0000                                                 ;909F19;

  .MaxXExtraRunSpeeds_NoSpeedBooster_1:
    dw $6600,$3300,$0000                                                 ;909F1F;

  .XAccelSpeeds_DiagonalBombJump:
    dw $0000,$3900,$0003,$9900,$0000,$0999                               ;909F25;

  .XAccelSpeeds_DisconnectGrappleInAir:
    dw $0000,$3900,$0012,$0000,$0000,$1300                               ;909F31;

  .XAccelSpeeds_DisconnectGrappleInWater:
    dw $0000,$3900,$0012,$0000,$0000,$1300                               ;909F3D;

  .XAccelSpeeds_DisconnectGrappleInLavaAcid:
    dw $0000,$3900,$0012,$0000,$0000,$1300                               ;909F49;

SamusXSpeedTable_Normal:                                                 ;909F55;
; Used for Samus X base speed (due to general movement)

;        _________________________________ X acceleration
;       |      ___________________________ X subacceleration
;       |     |      _____________________ Max X speed
;       |     |     |      _______________ Max X subspeed
;       |     |     |     |      _________ X deceleration
;       |     |     |     |     |      ___ X subdeceleration
;       |     |     |     |     |     |
    dw $0000,$E600,$0000,$0000,$0000,$9900 ; 0: Standing
    dw $0000,$3900,$0003,$4C00,$0000,$9900 ; 1: Running
    dw $0000,$E600,$0001,$8000,$0000,$9900 ; 2: Normal jumping
    dw $0000,$E600,$0001,$A600,$0000,$9900 ; 3: Spin jumping
    dw $0000,$E600,$0003,$E600,$0000,$9900 ; 4: Morph ball - on ground
    dw $0000,$E600,$0000,$0000,$0000,$9900 ; 5: Crouching
    dw $0000,$E600,$0001,$8000,$0000,$9900 ; 6: Falling
    dw $0002,$0000,$0001,$0000,$0000,$9900 ; 7: Unused
    dw $0000,$E600,$0001,$3300,$0000,$9900 ; 8: Morph ball - falling
    dw $0002,$0000,$0002,$0000,$0000,$9900 ; 9: Unused
    dw $0001,$CC00,$0006,$0000,$0000,$9900 ; Ah: Knockback / crystal flash ending
    dw $0000,$E600,$0000,$0000,$0000,$9900 ; Bh: Unused
    dw $0000,$E600,$0000,$0000,$0000,$9900 ; Ch: Unused
    dw $0000,$E600,$0002,$6600,$0000,$9900 ; Dh: Unused
    dw $0000,$E600,$0000,$0000,$0000,$9900 ; Eh: Turning around - on ground
    dw $0000,$E600,$0001,$8000,$0000,$9900 ; Fh: Crouching/standing/morphing/unmorphing transition
    dw $0000,$E600,$0000,$9900,$0000,$9900 ; 10h: Moonwalking
    dw $0000,$E600,$0003,$E600,$0000,$9900 ; 11h: Spring ball - on ground
    dw $0000,$E600,$0001,$8000,$0000,$9900 ; 12h: Spring ball - in air
    dw $0000,$E600,$0001,$3300,$0000,$9900 ; 13h: Spring ball - falling
    dw $0000,$E600,$0001,$A600,$0000,$9900 ; 14h: Wall jumping
    dw $0000,$E600,$0000,$0000,$0000,$9900 ; 15h: Ran into a wall
    dw $0000,$E600,$0001,$8000,$0000,$9900 ; 16h: Grappling
    dw $0000,$E600,$0000,$0000,$0000,$9900 ; 17h: Turning around - jumping
    dw $0000,$E600,$0000,$0000,$0000,$9900 ; 18h: Turning around - falling
    dw $0000,$E600,$0006,$0000,$0000,$9900 ; 19h: Damage boost

SamusXSpeedTable_InWater:                                                ;90A08D;
; Used for Samus X base speed (due to general movement)

;        _________________________________ X acceleration
;       |      ___________________________ X subacceleration
;       |     |      _____________________ Max X speed
;       |     |     |      _______________ Max X subspeed
;       |     |     |     |      _________ X deceleration
;       |     |     |     |     |      ___ X subdeceleration
;       |     |     |     |     |     |
    dw $0000,$E600,$0000,$0000,$0000,$0999 ; 0: Standing
    dw $0000,$04CC,$0003,$4C00,$0000,$0999 ; 1: Running
    dw $0000,$E600,$0001,$8000,$0000,$0999 ; 2: Normal jumping
    dw $0000,$E600,$0001,$A600,$0000,$0999 ; 3: Spin jumping
    dw $0000,$04CC,$0003,$4C00,$0000,$0999 ; 4: Morph ball - on ground
    dw $0000,$E600,$0000,$0000,$0000,$0999 ; 5: Crouching
    dw $0000,$E600,$0001,$8000,$0000,$0999 ; 6: Falling
    dw $0002,$0000,$0001,$0000,$0000,$0999 ; 7: Unused
    dw $0000,$04CC,$0001,$CC00,$0000,$0999 ; 8: Morph ball - falling
    dw $0002,$0000,$0002,$0000,$0000,$0999 ; 9: Unused
    dw $0001,$CC00,$0006,$0000,$0000,$0999 ; Ah: Knockback / crystal flash ending
    dw $0000,$E600,$0000,$0000,$0000,$0999 ; Bh: Unused
    dw $0000,$E600,$0000,$0000,$0000,$0999 ; Ch: Unused
    dw $0000,$E600,$0002,$6600,$0000,$0999 ; Dh: Unused
    dw $0000,$E600,$0000,$0000,$0000,$0999 ; Eh: Turning around - on ground
    dw $0000,$E600,$0001,$8000,$0000,$0999 ; Fh: Crouching/standing/morphing/unmorphing transition
    dw $0000,$E600,$0000,$9900,$0000,$0999 ; 10h: Moonwalking
    dw $0000,$04CC,$0003,$4C00,$0000,$0999 ; 11h: Spring ball - on ground
    dw $0000,$04CC,$0001,$8000,$0000,$0999 ; 12h: Spring ball - in air
    dw $0000,$04CC,$0001,$CC00,$0000,$0999 ; 13h: Spring ball - falling
    dw $0000,$E600,$0001,$A600,$0000,$0999 ; 14h: Wall jumping
    dw $0000,$E600,$0000,$0000,$0000,$0999 ; 15h: Ran into a wall
    dw $0000,$E600,$0001,$8000,$0000,$0999 ; 16h: Grappling
    dw $0000,$E600,$0000,$0000,$0000,$0999 ; 17h: Turning around - jumping
    dw $0000,$E600,$0000,$0000,$0000,$0999 ; 18h: Turning around - falling
    dw $0000,$E600,$0000,$9900,$0000,$0999 ; 19h: Damage boost
    dw $0000,$E600,$0006,$0000,$0000,$0999 ; 1Ah: Grabbed by Draygon
    dw $0000,$E600,$0006,$0000,$0000,$0999 ; 1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

SamusXSpeedTable_InLavaAcid:                                             ;90A1DD;
; Used for Samus X base speed (due to general movement)

;        _________________________________ X acceleration
;       |      ___________________________ X subacceleration
;       |     |      _____________________ Max X speed
;       |     |     |      _______________ Max X subspeed
;       |     |     |     |      _________ X deceleration
;       |     |     |     |     |      ___ X subdeceleration
;       |     |     |     |     |     |
    dw $0000,$E600,$0000,$0000,$0000,$4C00 ; 0: Standing
    dw $0000,$04CC,$0002,$1900,$0000,$4C00 ; 1: Running
    dw $0000,$E600,$0001,$8000,$0000,$4C00 ; 2: Normal jumping
    dw $0000,$E600,$0001,$A600,$0000,$4C00 ; 3: Spin jumping
    dw $0000,$04CC,$0003,$4C00,$0000,$4C00 ; 4: Morph ball - on ground
    dw $0000,$E600,$0000,$0000,$0000,$4C00 ; 5: Crouching
    dw $0000,$E600,$0001,$8000,$0000,$4C00 ; 6: Falling
    dw $0002,$0000,$0001,$0000,$0000,$4C00 ; 7: Unused
    dw $0000,$04CC,$0001,$A600,$0000,$4C00 ; 8: Morph ball - falling
    dw $0002,$0000,$0002,$0000,$0000,$4C00 ; 9: Unused
    dw $0001,$CC00,$0006,$0000,$0000,$4C00 ; Ah: Knockback / crystal flash ending
    dw $0000,$E600,$0000,$0000,$0000,$4C00 ; Bh: Unused
    dw $0000,$E600,$0000,$0000,$0000,$4C00 ; Ch: Unused
    dw $0000,$E600,$0002,$6600,$0000,$4C00 ; Dh: Unused
    dw $0000,$E600,$0000,$0000,$0000,$4C00 ; Eh: Turning around - on ground
    dw $0000,$E600,$0001,$8000,$0000,$4C00 ; Fh: Crouching/standing/morphing/unmorphing transition
    dw $0000,$E600,$0000,$9900,$0000,$4C00 ; 10h: Moonwalking
    dw $0000,$04CC,$0003,$4C00,$0000,$4C00 ; 11h: Spring ball - on ground
    dw $0000,$04CC,$0001,$8000,$0000,$4C00 ; 12h: Spring ball - in air
    dw $0000,$04CC,$0001,$A600,$0000,$4C00 ; 13h: Spring ball - falling
    dw $0000,$E600,$0001,$A600,$0000,$4C00 ; 14h: Wall jumping
    dw $0000,$E600,$0000,$0000,$0000,$4C00 ; 15h: Ran into a wall
    dw $0000,$E600,$0001,$8000,$0000,$4C00 ; 16h: Grappling
    dw $0000,$E600,$0000,$0000,$0000,$4C00 ; 17h: Turning around - jumping
    dw $0000,$E600,$0000,$0000,$0000,$4C00 ; 18h: Turning around - falling
    dw $0000,$E600,$0000,$9900,$0000,$4C00 ; 19h: Damage boost
    dw $0000,$E600,$0006,$0000,$0000,$4C00 ; 1Ah: Grabbed by Draygon
    dw $0000,$E600,$0006,$0000,$0000,$4C00 ; 1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

UNUSED_SamusMovement_7_90A32D:
    PHP                                                                  ;90A32D;
    REP #$30                                                             ;90A32E;
    STZ.W $0DC6                                                          ;90A330;
    PLP                                                                  ;90A333;
    RTS                                                                  ;90A334;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_90A335:
    dw $001E                                                             ;90A335;
endif ; !FEATURE_KEEP_UNREFERENCED

SamusMovementHandler_Normal:
    LDA.W $0A78                                                          ;90A337;
    BNE .return                                                          ;90A33A;
    LDA.W $0A1F                                                          ;90A33C;
    AND.W #$00FF                                                         ;90A33F;
    ASL A                                                                ;90A342;
    TAX                                                                  ;90A343;
    JSR.W (.pointers,X)                                                  ;90A344;
    JSR.W UpdateSamusEchoPosition                                        ;90A347;

.return:
    RTS                                                                  ;90A34A;


.pointers:
    dw SamusMovement_Standing                                            ;90A34B; 0: Standing
    dw SamusMovement_Running                                             ;90A34D; 1: Running
    dw SamusMovement_Jumping                                             ;90A34F; 2: Normal jumping
    dw SamusMovement_SpinJumping                                         ;90A351; 3: Spin jumping
    dw SamusMovement_MorphBall_OnGround                                  ;90A353; 4: Morph ball - on ground
    dw SamusMovement_Crouching                                           ;90A355; 5: Crouching
    dw SamusMovement_Falling                                             ;90A357; 6: Falling
    dw UNUSED_SamusMovement_7_90A32D                                     ;90A359; 7: Unused
    dw SamusMovement_MorphBall_Falling                                   ;90A35B; 8: Morph ball - falling
    dw UNUSED_RTS_90A5FB                                                 ;90A35D; 9: Unused
    dw SamusMovement_Knockback_CrystalFlashEnding                        ;90A35F; Ah: Knockback / crystal flash ending
    dw UNUSED_SamusMovement_B_90A607                                     ;90A361; Bh: Unused
    dw UNUSED_SamusMovement_C_90A60F                                     ;90A363; Ch: Unused
    dw UNUSED_SamusMovement_D_90A617                                     ;90A365; Dh: Unused
    dw SamusMovement_TurningAround_OnGround                              ;90A367; Eh: Turning around - on ground
    dw SamusMovement_TransitionPoses                                     ;90A369; Fh: Crouching/standing/morphing/unmorphing transition
    dw SamusMovement_Moonwalking                                         ;90A36B; 10h: Moonwalking
    dw SamusMovement_SpringBall_OnGround                                 ;90A36D; 11h: Spring ball - on ground
    dw SamusMovement_SpringBall_InAir                                    ;90A36F; 12h: Spring ball - in air
    dw SamusMovement_SpringBall_Falling                                  ;90A371; 13h: Spring ball - falling
    dw SamusMovement_WallJumping                                         ;90A373; 14h: Wall jumping
    dw SamusMovement_RanIntoAWall                                        ;90A375; 15h: Ran into a wall
    dw SamusMovement_Grappling                                           ;90A377; 16h: Grappling
    dw SamusMovement_TurningAround_Jumping                               ;90A379; 17h: Turning around - jumping
    dw SamusMovement_TurningAround_Falling                               ;90A37B; 18h: Turning around - falling
    dw SamusMovement_DamageBoost                                         ;90A37D; 19h: Damage boost
    dw SamusMovement_GrabbedByDraygon                                    ;90A37F; 1Ah: Grabbed by Draygon
    dw SamusMovement_Shinespark_CF_Drained_DamagedByMotherBrain          ;90A381; 1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

SamusMovement_Standing:
    PHP                                                                  ;90A383;
    REP #$30                                                             ;90A384;
    LDA.W $0A1C                                                          ;90A386;
    BEQ .facingForward                                                   ;90A389;
    CMP.W #$009B                                                         ;90A38B;
    BEQ .facingForward                                                   ;90A38E;
    BRA .notFacingForward                                                ;90A390;


.facingForward:
    LDA.W $0E18                                                          ;90A392;
    BEQ .noChange                                                        ;90A395;
    LDA.W #$0002                                                         ;90A397;
    STA.W $0B02                                                          ;90A39A;
    LDA.W #$0001                                                         ;90A39D;
    STA.B $12                                                            ;90A3A0;
    STZ.B $14                                                            ;90A3A2;
    JSL.L MoveSamusDown_NoSolidEnemyCollision                            ;90A3A4;

.noChange:
    STZ.W $0DC6                                                          ;90A3A8;
    BRA .return                                                          ;90A3AB;


.notFacingForward:
    LDA.W $0A1C                                                          ;90A3AD;
    CMP.W #$0001                                                         ;90A3B0;
    BEQ .checkPressingShot                                               ;90A3B3;
    CMP.W #$0002                                                         ;90A3B5;
    BNE .moveSamus                                                       ;90A3B8;

.checkPressingShot:
    LDA.B $8B                                                            ;90A3BA;
    BIT.W $09B2                                                          ;90A3BC;
    BEQ .moveSamus                                                       ;90A3BF;
    LDA.W #$0010                                                         ;90A3C1;
    STA.W $0A94                                                          ;90A3C4;
    STZ.W $0A96                                                          ;90A3C7;

.moveSamus:
    JSR.W MoveSamus_HorizontallyWithZeroBaseXSpeed                       ;90A3CA;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A3CD;
    JSL.L Cancel_SpeedBoosting                                           ;90A3D0;
    STZ.W $0B42                                                          ;90A3D4;
    STZ.W $0B44                                                          ;90A3D7;
    STZ.W $0B46                                                          ;90A3DA;
    STZ.W $0B48                                                          ;90A3DD;
    STZ.W $0B4A                                                          ;90A3E0;

.return:
    PLP                                                                  ;90A3E3;
    RTS                                                                  ;90A3E4;


SamusMovement_Running:
    PHP                                                                  ;90A3E5;
    REP #$30                                                             ;90A3E6;
    JSR.W Samus_X_Movement                                               ;90A3E8;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A3EB;
    LDX.W $0A96                                                          ;90A3EE;
    LDA.W $0A94                                                          ;90A3F1;
    CMP.W #$0001                                                         ;90A3F4;
    BNE .return                                                          ;90A3F7;
    LDA.W .frames,X                                                      ;90A3F9;
    AND.W #$00FF                                                         ;90A3FC;
    BEQ .return                                                          ;90A3FF;
    JSR.W FootstepGraphics                                               ;90A401;
    LDA.W $1F51                                                          ;90A404;
    BNE .return                                                          ;90A407;
    LDA.W $179C                                                          ;90A409;
    BNE .return                                                          ;90A40C;
    LDA.W $0A68                                                          ;90A40E;
    BNE .return                                                          ;90A411;
    LDA.W $0B3E                                                          ;90A413;
    BIT.W #$0400                                                         ;90A416;
    BNE .return                                                          ;90A419;
    LDA.W #$0006                                                         ;90A41B;
    JSL.L QueueSound_Lib3_Max6                                           ;90A41E;

.return:
    PLP                                                                  ;90A422;
    RTS                                                                  ;90A423;


.frames:
; Presumably these frames correspond to the points when Samus' foot hits the ground
    db $00,$00,$01,$00,$00,$00,$00,$01,$00,$00                           ;90A424;

SamusMovement_Jumping:
    PHP                                                                  ;90A42E;
    REP #$30                                                             ;90A42F;
    JSR.W Samus_Jumping_Movement                                         ;90A431;
    PLP                                                                  ;90A434;
    RTS                                                                  ;90A435;


SamusMovement_SpinJumping:
    PHP                                                                  ;90A436;
    REP #$30                                                             ;90A437;
    LDA.W $0A74                                                          ;90A439;
    BIT.W #$0004                                                         ;90A43C;
    BNE .nonLiquidPhysics                                                ;90A43F;
    JSL.L Get_Samus_BottomTop_Boundary                                   ;90A441;
    LDA.W $195E                                                          ;90A445;
    BMI .negativeYPosition                                               ;90A448;
    CMP.B $14                                                            ;90A44A;
    BPL .nonLiquidPhysics                                                ;90A44C;
    LDA.W $197E                                                          ;90A44E;
    BIT.W #$0004                                                         ;90A451;
    BNE .nonLiquidPhysics                                                ;90A454;
    BRA +                                                                ;90A456;


.negativeYPosition:
    LDA.W $1962                                                          ;90A458;
    BMI .nonLiquidPhysics                                                ;90A45B;
    CMP.B $14                                                            ;90A45D;
    BPL .nonLiquidPhysics                                                ;90A45F;

  + LDA.W #$0001                                                         ;90A461;
    STA.B $12                                                            ;90A464;
    BRA .determinedLiquidPhysics                                         ;90A466;


.nonLiquidPhysics:
    STZ.B $12                                                            ;90A468;

.determinedLiquidPhysics:
    LDA.B $12                                                            ;90A46A;
    BNE .liquidPhysics                                                   ;90A46C;
    LDA.W $09A2                                                          ;90A46E;
    BIT.W #$0200                                                         ;90A471;
    BNE .spaceJumpEligible                                               ;90A474;
    LDA.W $0A1C                                                          ;90A476;
    CMP.W #$0081                                                         ;90A479;
    BEQ .gotoScrewAttack                                                 ;90A47C;
    CMP.W #$0082                                                         ;90A47E;
    BEQ .gotoScrewAttack                                                 ;90A481;
    BRA .liquidPhysics                                                   ;90A483;


.gotoScrewAttack:
    JMP.W .screwAttack                                                   ;90A485;


.spaceJumpEligible:
    LDA.W $0B36                                                          ;90A488;
    CMP.W #$0002                                                         ;90A48B;
    BNE .screwAttackEligible                                             ;90A48E;
    LDA.W $0AD2                                                          ;90A490;
    BEQ .airPhysics                                                      ;90A493;
    LDA.W $0B2D                                                          ;90A495;
    CMP.W SamusPhysicsConstants_SpaceJumpMinimumYVelocityInWater         ;90A498;
    BMI .screwAttackEligible                                             ;90A49B;
    CMP.W SamusPhysicsConstants_SpaceJumpMaximumYVelocityInWater         ;90A49D;
    BPL .screwAttackEligible                                             ;90A4A0;
    BRA +                                                                ;90A4A2;


.airPhysics:
    LDA.W $0B2D                                                          ;90A4A4;
    CMP.W SamusPhysicsConstants_SpaceJumpMinimumYVelocityInAir           ;90A4A7;
    BMI .screwAttackEligible                                             ;90A4AA;
    CMP.W SamusPhysicsConstants_SpaceJumpMaximumYVelocityInAir           ;90A4AC;
    BPL .screwAttackEligible                                             ;90A4AF;

  + LDA.W $0DFA                                                          ;90A4B1;
    AND.W #$FF00                                                         ;90A4B4;
    ORA.W #$0001                                                         ;90A4B7;
    STA.W $0DFA                                                          ;90A4BA;
    LDA.B $8F                                                            ;90A4BD;
    AND.W $09B4                                                          ;90A4BF;
    BEQ .screwAttackEligible                                             ;90A4C2;
    JSL.L Make_Samus_Jump                                                ;90A4C4;

.screwAttackEligible:
    LDA.W $0A1C                                                          ;90A4C8;
    CMP.W #$0081                                                         ;90A4CB;
    BEQ .screwAttack                                                     ;90A4CE;
    CMP.W #$0082                                                         ;90A4D0;
    BEQ .screwAttack                                                     ;90A4D3;
    BRA .liquidPhysics                                                   ;90A4D5; >.<


.liquidPhysics:
    LDA.B $12                                                            ;90A4D7;
    BEQ +                                                                ;90A4D9;
    LDX.W $0A96                                                          ;90A4DB;
    LDA.W $0A94                                                          ;90A4DE;
    CMP.W #$0001                                                         ;90A4E1;
    BNE +                                                                ;90A4E4;
    LDA.W .framesSFX,X                                                   ;90A4E6;
    AND.W #$00FF                                                         ;90A4E9;
    BEQ +                                                                ;90A4EC;
    LDA.W #$002F                                                         ;90A4EE;
    JSL.L QueueSound_Lib1_Max6                                           ;90A4F1;

  + LDA.W $0CD0                                                          ;90A4F5;
    CMP.W #$003C                                                         ;90A4F8;
    BMI .return                                                          ;90A4FB;
    LDA.B $12                                                            ;90A4FD;
    BNE .return                                                          ;90A4FF;
    LDA.W #$0004                                                         ;90A501;
    STA.W $0A6E                                                          ;90A504;
    BRA .return                                                          ;90A507;


.screwAttack:
    LDA.W #$0003                                                         ;90A509;
    STA.W $0A6E                                                          ;90A50C;

.return:
    JSR.W Samus_SpinJumping_Movement                                     ;90A50F;
    PLP                                                                  ;90A512;
    RTS                                                                  ;90A513;


.framesSFX:
; Samus animation frames on which to play underwater space jump sound effect
    db $01,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00               ;90A514;

SamusMovement_MorphBall_OnGround:
    PHP                                                                  ;90A521;
    REP #$30                                                             ;90A522;
    LDA.W $0B4A                                                          ;90A524;
    BNE .decelerating                                                    ;90A527;
    LDA.W $0A1E                                                          ;90A529;
    AND.W #$00FF                                                         ;90A52C;
    CMP.W #$0004                                                         ;90A52F;
    BEQ .facingLeft                                                      ;90A532;
    LDA.W $0A1C                                                          ;90A534;
    CMP.W #$001D                                                         ;90A537;
    BNE .decelerating                                                    ;90A53A;
    BRA .moveSamus                                                       ;90A53C;


.facingLeft:
    LDA.W $0A1C                                                          ;90A53E;
    CMP.W #$0041                                                         ;90A541;
    BNE .decelerating                                                    ;90A544;

.moveSamus:
    JSR.W MoveSamus_HorizontallyWithZeroBaseXSpeed                       ;90A546;
    JSR.W Simple_Samus_Y_Movement                                        ;90A549;
    BCS .return                                                          ;90A54C;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A54E;
    JSL.L Cancel_SpeedBoosting                                           ;90A551;
    STZ.W $0B42                                                          ;90A555;
    STZ.W $0B44                                                          ;90A558;
    STZ.W $0B46                                                          ;90A55B;
    STZ.W $0B48                                                          ;90A55E;
    STZ.W $0B4A                                                          ;90A561;
    BRA .return                                                          ;90A564;


.decelerating:
    JSR.W Samus_X_Movement                                               ;90A566;
    JSR.W Simple_Samus_Y_Movement                                        ;90A569;
    BCS .return                                                          ;90A56C;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A56E;

.return:
    PLP                                                                  ;90A571;
    RTS                                                                  ;90A572;


SamusMovement_Crouching:
    PHP                                                                  ;90A573;
    REP #$30                                                             ;90A574;
    JSR.W MoveSamus_HorizontallyWithZeroBaseXSpeed                       ;90A576;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A579;
    STZ.W $0B42                                                          ;90A57C;
    STZ.W $0B44                                                          ;90A57F;
    STZ.W $0B46                                                          ;90A582;
    STZ.W $0B48                                                          ;90A585;
    STZ.W $0B4A                                                          ;90A588;
    PLP                                                                  ;90A58B;
    RTS                                                                  ;90A58C;


SamusMovement_Falling:
    PHP                                                                  ;90A58D;
    REP #$30                                                             ;90A58E;
    JSR.W Samus_Falling_Movement                                         ;90A590;
    LDA.W $0A1C                                                          ;90A593;
    CMP.W #$0029                                                         ;90A596;
    BEQ .falling                                                         ;90A599;
    CMP.W #$002A                                                         ;90A59B;
    BEQ .falling                                                         ;90A59E;
    CMP.W #$0067                                                         ;90A5A0;
    BEQ .falling                                                         ;90A5A3;
    CMP.W #$0068                                                         ;90A5A5;
    BEQ .falling                                                         ;90A5A8;
    BRA .return                                                          ;90A5AA;


.falling:
    LDA.W $0B2E                                                          ;90A5AC;
    CMP.W #$0005                                                         ;90A5AF;
    BMI .return                                                          ;90A5B2;
    LDA.W $0A96                                                          ;90A5B4;
    CMP.W #$0005                                                         ;90A5B7;
    BPL .return                                                          ;90A5BA;
    LDA.W #$0008                                                         ;90A5BC;
    STA.W $0A94                                                          ;90A5BF;
    LDA.W #$0005                                                         ;90A5C2;
    STA.W $0A96                                                          ;90A5C5;

.return:
    PLP                                                                  ;90A5C8;
    RTS                                                                  ;90A5C9;


SamusMovement_MorphBall_Falling:
    PHP                                                                  ;90A5CA;
    REP #$30                                                             ;90A5CB;
    LDA.B $8B                                                            ;90A5CD;
    BIT.W #$0300                                                         ;90A5CF;
    BNE .pressingLeftRight                                               ;90A5D2;
    LDA.W $0B4A                                                          ;90A5D4;
    BNE .pressingLeftRight                                               ;90A5D7;
    JSL.L Cancel_SpeedBoosting                                           ;90A5D9;
    STZ.W $0B42                                                          ;90A5DD;
    STZ.W $0B44                                                          ;90A5E0;
    STZ.W $0B46                                                          ;90A5E3;
    STZ.W $0B48                                                          ;90A5E6;
    STZ.W $0B4A                                                          ;90A5E9;

.pressingLeftRight:
    LDA.W $0B20                                                          ;90A5EC;
    BNE .morphBounce                                                     ;90A5EF;
    JSR.W Samus_Morphed_Falling_Movement                                 ;90A5F1;
    BRA .return                                                          ;90A5F4;


.morphBounce:
    JSR.W Samus_Morphed_Bouncing_Movement                                ;90A5F6;

.return:
    PLP                                                                  ;90A5F9;
    RTS                                                                  ;90A5FA;


UNUSED_RTS_90A5FB:
    RTS                                                                  ;90A5FB;


SamusMovement_Knockback_CrystalFlashEnding:
    PHP                                                                  ;90A5FC;
    REP #$30                                                             ;90A5FD;
    STZ.W $0DC6                                                          ;90A5FF;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A602;
    PLP                                                                  ;90A605;
    RTS                                                                  ;90A606;


UNUSED_SamusMovement_B_90A607:
    PHP                                                                  ;90A607;
    REP #$30                                                             ;90A608;
    STZ.W $0DC6                                                          ;90A60A;
    PLP                                                                  ;90A60D;
    RTS                                                                  ;90A60E;


UNUSED_SamusMovement_C_90A60F:
    PHP                                                                  ;90A60F;
    REP #$30                                                             ;90A610;
    STZ.W $0DC6                                                          ;90A612;
    PLP                                                                  ;90A615;
    RTS                                                                  ;90A616;


UNUSED_SamusMovement_D_90A617:
    PHP                                                                  ;90A617;
    REP #$30                                                             ;90A618;
    PLP                                                                  ;90A61A;
    RTS                                                                  ;90A61B;


SamusMovement_TransitionPoses:
    PHP                                                                  ;90A61C;
    REP #$30                                                             ;90A61D;
    LDA.W $0A1C                                                          ;90A61F;
    CMP.W #$00F1                                                         ;90A622;
    BPL .moveSamus                                                       ;90A625;
    CMP.W #$00DB                                                         ;90A627;
    BPL .noYMovement                                                     ;90A62A;
    SEC                                                                  ;90A62C;
    SBC.W #$0035                                                         ;90A62D;
    ASL A                                                                ;90A630;
    TAX                                                                  ;90A631;
    JSR.W (.pointers,X)                                                  ;90A632;

.moveSamus:
    JSR.W MoveSamus_HorizontallyWithZeroBaseXSpeed                       ;90A635;
    JSR.W Simple_Samus_Y_Movement_duplicate                              ;90A638;
    BCS .noYMovement                                                     ;90A63B;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A63D;

.noYMovement:
    LDA.W $0DC6                                                          ;90A640;
    CMP.W #$0401                                                         ;90A643;
    BNE .noChange                                                        ;90A646;
    STZ.W $0B2C                                                          ;90A648;
    STZ.W $0B2E                                                          ;90A64B;
    STZ.W $0B36                                                          ;90A64E;
    STZ.W $0B20                                                          ;90A651;

.noChange:
    STZ.W $0DC6                                                          ;90A654;
    PLP                                                                  ;90A657;
    RTS                                                                  ;90A658;


.pointers:
    dw RTS_90A671                                                        ;90A659; 35h: Facing right - crouching transition
    dw RTS_90A671                                                        ;90A65B; 36h: Facing left  - crouching transition
    dw RTS_90A671                                                        ;90A65D; 37h: Facing right - morphing transition
    dw RTS_90A671                                                        ;90A65F; 38h: Facing left  - morphing transition
    dw Enable_Horizontal_Slope_Detection                                 ;90A661; 39h: Unused
    dw Enable_Horizontal_Slope_Detection                                 ;90A663; 3Ah: Unused
    dw RTS_90A671                                                        ;90A665; 3Bh: Facing right - standing transition
    dw RTS_90A671                                                        ;90A667; 3Ch: Facing left  - standing transition
    dw RTS_90A671                                                        ;90A669; 3Dh: Facing right - unmorphing transition
    dw RTS_90A671                                                        ;90A66B; 3Eh: Facing left  - unmorphing transition
    dw Enable_Horizontal_Slope_Detection                                 ;90A66D; 3Fh: Unused
    dw Enable_Horizontal_Slope_Detection                                 ;90A66F; 40h: Unused

RTS_90A671:
    RTS                                                                  ;90A671;


Enable_Horizontal_Slope_Detection:
    LDA.W #$0003                                                         ;90A672;
    STA.W $0A46                                                          ;90A675;
    STZ.W $0AA4                                                          ;90A678;
    RTS                                                                  ;90A67B;


SamusMovement_TurningAround_OnGround:
    PHP                                                                  ;90A67C;
    REP #$30                                                             ;90A67D;
    JSR.W Samus_X_Movement                                               ;90A67F;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A682;
    JSL.L Cancel_SpeedBoosting                                           ;90A685;
    STZ.W $0B42                                                          ;90A689;
    STZ.W $0B44                                                          ;90A68C;
    STZ.W $0DC6                                                          ;90A68F;
    PLP                                                                  ;90A692;
    RTS                                                                  ;90A693;


SamusMovement_Moonwalking:
    PHP                                                                  ;90A694;
    REP #$30                                                             ;90A695;
    JSR.W Samus_X_Movement                                               ;90A697;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A69A;
    PLP                                                                  ;90A69D;
    RTS                                                                  ;90A69E;


SamusMovement_SpringBall_OnGround:
    PHP                                                                  ;90A69F;
    REP #$30                                                             ;90A6A0;
    LDA.W $0B4A                                                          ;90A6A2;
    BNE .decelerating                                                    ;90A6A5;
    LDA.W $0A1E                                                          ;90A6A7;
    AND.W #$00FF                                                         ;90A6AA;
    CMP.W #$0004                                                         ;90A6AD;
    BEQ .facingLeft                                                      ;90A6B0;
    LDA.W $0A1C                                                          ;90A6B2;
    CMP.W #$0079                                                         ;90A6B5;
    BNE .decelerating                                                    ;90A6B8;
    BRA +                                                                ;90A6BA;


.facingLeft:
    LDA.W $0A1C                                                          ;90A6BC;
    CMP.W #$007A                                                         ;90A6BF;
    BNE .decelerating                                                    ;90A6C2;

  + JSR.W MoveSamus_HorizontallyWithZeroBaseXSpeed                       ;90A6C4;
    JSR.W Simple_Samus_Y_Movement                                        ;90A6C7;
    BCS .return                                                          ;90A6CA;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A6CC;
    JSL.L Cancel_SpeedBoosting                                           ;90A6CF;
    STZ.W $0B42                                                          ;90A6D3;
    STZ.W $0B44                                                          ;90A6D6;
    STZ.W $0B46                                                          ;90A6D9;
    STZ.W $0B48                                                          ;90A6DC;
    STZ.W $0B4A                                                          ;90A6DF;
    BRA .return                                                          ;90A6E2;


.decelerating:
    JSR.W Samus_X_Movement                                               ;90A6E4;
    JSR.W Simple_Samus_Y_Movement                                        ;90A6E7;
    BCS .return                                                          ;90A6EA;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A6EC;

.return:
    PLP                                                                  ;90A6EF;
    RTS                                                                  ;90A6F0;


SamusMovement_SpringBall_InAir:
    PHP                                                                  ;90A6F1;
    REP #$30                                                             ;90A6F2;
    LDA.W $0B20                                                          ;90A6F4;
    BNE .bouncing                                                        ;90A6F7;
    JSR.W Samus_Jumping_Movement                                         ;90A6F9;
    BRA .return                                                          ;90A6FC;


.bouncing:
    JSR.W Samus_Morphed_Bouncing_Movement                                ;90A6FE;

.return:
    PLP                                                                  ;90A701;
    RTS                                                                  ;90A702;


SamusMovement_SpringBall_Falling:
    PHP                                                                  ;90A703;
    REP #$30                                                             ;90A704;
    LDA.B $8B                                                            ;90A706;
    BIT.W #$0300                                                         ;90A708;
    BNE .checkBounce                                                     ;90A70B;
    LDA.W $0B4A                                                          ;90A70D;
    BNE .checkBounce                                                     ;90A710;
    JSL.L Cancel_SpeedBoosting                                           ;90A712;
    STZ.W $0B42                                                          ;90A716;
    STZ.W $0B44                                                          ;90A719;
    STZ.W $0B46                                                          ;90A71C;
    STZ.W $0B48                                                          ;90A71F;
    STZ.W $0B4A                                                          ;90A722;

.checkBounce:
    LDA.W $0B20                                                          ;90A725;
    BNE .bouncing                                                        ;90A728;
    JSR.W Samus_Morphed_Falling_Movement                                 ;90A72A;
    BRA .return                                                          ;90A72D;


.bouncing:
    JSR.W Samus_Morphed_Bouncing_Movement                                ;90A72F;

.return:
    PLP                                                                  ;90A732;
    RTS                                                                  ;90A733;


SamusMovement_WallJumping:
    PHP                                                                  ;90A734;
    REP #$30                                                             ;90A735;
    LDA.W $0A96                                                          ;90A737;
    CMP.W #$0017                                                         ;90A73A;
    BPL .greaterThan16                                                   ;90A73D;
    CMP.W #$0003                                                         ;90A73F;
    BMI .jumpingMovement                                                 ;90A742;
    LDA.W $0CD0                                                          ;90A744;
    CMP.W #$003C                                                         ;90A747;
    BMI .jumpingMovement                                                 ;90A74A;
    LDA.W #$0004                                                         ;90A74C;
    STA.W $0A6E                                                          ;90A74F;
    BRA .jumpingMovement                                                 ;90A752;


.greaterThan16:
    LDA.W #$0003                                                         ;90A754;
    STA.W $0A6E                                                          ;90A757;

.jumpingMovement:
    JSR.W Samus_Jumping_Movement                                         ;90A75A;
    PLP                                                                  ;90A75D;
    RTS                                                                  ;90A75E;


SamusMovement_RanIntoAWall:
    PHP                                                                  ;90A75F;
    REP #$30                                                             ;90A760;
    JSR.W MoveSamus_HorizontallyWithZeroBaseXSpeed                       ;90A762;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A765;
    JSL.L Cancel_SpeedBoosting                                           ;90A768;
    STZ.W $0B42                                                          ;90A76C;
    STZ.W $0B44                                                          ;90A76F;
    STZ.W $0B46                                                          ;90A772;
    STZ.W $0B48                                                          ;90A775;
    STZ.W $0B4A                                                          ;90A778;
    JSR.W RTS_9092E9                                                     ;90A77B;
    PLP                                                                  ;90A77E;
    RTS                                                                  ;90A77F;


SamusMovement_Grappling:
    PHP                                                                  ;90A780;
    REP #$30                                                             ;90A781;
    LDA.W $0DC6                                                          ;90A783;
    CMP.W #$0005                                                         ;90A786;
    BEQ .return                                                          ;90A789;
    STZ.W $0DC6                                                          ;90A78B;

.return:
    PLP                                                                  ;90A78E;
    RTS                                                                  ;90A78F;


SamusMovement_TurningAround_Jumping:
    PHP                                                                  ;90A790;
    REP #$30                                                             ;90A791;
    JSR.W Samus_X_Movement                                               ;90A793;
    JSR.W Simple_Samus_Y_Movement                                        ;90A796;
    BCS +                                                                ;90A799;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A79B;

  + JSL.L Cancel_SpeedBoosting                                           ;90A79E;
    STZ.W $0B42                                                          ;90A7A2;
    STZ.W $0B44                                                          ;90A7A5;
    STZ.W $0DC6                                                          ;90A7A8;
    PLP                                                                  ;90A7AB;
    RTS                                                                  ;90A7AC;


SamusMovement_TurningAround_Falling:
    PHP                                                                  ;90A7AD;
    REP #$30                                                             ;90A7AE;
    JSR.W Samus_X_Movement                                               ;90A7B0;
    JSR.W Simple_Samus_Y_Movement                                        ;90A7B3;
    BCS +                                                                ;90A7B6;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90A7B8;

  + JSL.L Cancel_SpeedBoosting                                           ;90A7BB;
    STZ.W $0B42                                                          ;90A7BF;
    STZ.W $0B44                                                          ;90A7C2;
    STZ.W $0DC6                                                          ;90A7C5;
    PLP                                                                  ;90A7C8;
    RTS                                                                  ;90A7C9;


SamusMovement_DamageBoost:
    PHP                                                                  ;90A7CA;
    REP #$30                                                             ;90A7CB;
    JSR.W Samus_Jumping_Movement                                         ;90A7CD;
    PLP                                                                  ;90A7D0;
    RTS                                                                  ;90A7D1;


SamusMovement_GrabbedByDraygon:
    PHP                                                                  ;90A7D2;
    REP #$30                                                             ;90A7D3;
    STZ.W $0DC6                                                          ;90A7D5;
    PLP                                                                  ;90A7D8;
    RTS                                                                  ;90A7D9;


SamusMovement_Shinespark_CF_Drained_DamagedByMotherBrain:
    PHP                                                                  ;90A7DA;
    REP #$30                                                             ;90A7DB;
    STZ.W $0DC6                                                          ;90A7DD;
    PLP                                                                  ;90A7E0;
    RTS                                                                  ;90A7E1;


DisableMinimap_MarkBossRoomTilesExplored:
    PHP                                                                  ;90A7E2;
    PHB                                                                  ;90A7E3;
    REP #$30                                                             ;90A7E4;
    PHK                                                                  ;90A7E6;
    PLB                                                                  ;90A7E7;
    LDA.W #$0001                                                         ;90A7E8;
    STA.W $05F7                                                          ;90A7EB;
    LDA.W #$001F                                                         ;90A7EE;
    ORA.W #$2C00                                                         ;90A7F1;
    LDX.W #$0000                                                         ;90A7F4;

.loop:
    STA.L $7EC63C,X                                                      ;90A7F7;
    STA.L $7EC67C,X                                                      ;90A7FB;
    STA.L $7EC6BC,X                                                      ;90A7FF;
    INX                                                                  ;90A803;
    INX                                                                  ;90A804;
    CPX.W #$000A                                                         ;90A805;
    BMI .loop                                                            ;90A808;
    LDA.W $179C                                                          ;90A80A;
    LDX.W #$0014                                                         ;90A80D;

.loopBossID:
    CMP.W .bossID,X                                                      ;90A810;
    BEQ +                                                                ;90A813;
    DEX                                                                  ;90A815;
    DEX                                                                  ;90A816;
    DEX                                                                  ;90A817;
    DEX                                                                  ;90A818;
    BPL .loopBossID                                                      ;90A819;
    PLB                                                                  ;90A81B;
    PLP                                                                  ;90A81C;
    RTL                                                                  ;90A81D;


  + LDA.W .pointer,X                                                     ;90A81E;
    TAX                                                                  ;90A821;

.loopMapTiles:
    LDA.W $0000,X                                                        ;90A822;
    BMI .return                                                          ;90A825;
    STA.B $12                                                            ;90A827;
    LDA.W $0002,X                                                        ;90A829;
    STA.B $18                                                            ;90A82C;
    JSR.W MarkMapTilesExplored                                           ;90A82E;
    INX                                                                  ;90A831;
    INX                                                                  ;90A832;
    INX                                                                  ;90A833;
    INX                                                                  ;90A834;
    BRA .loopMapTiles                                                    ;90A835;


.return:
    PLB                                                                  ;90A837;
    PLP                                                                  ;90A838;
    RTL                                                                  ;90A839;


;        ________ Boss ID
;       |     ___ Pointer to room map tile offsets
;       |    |
  .bossID:
    dw $0003                                                             ;90A83A;
  .pointer:
    dw       .kraid                                                      ;90A83C;
    dw $0006,.crocomire                                                  ;90A83E;
    dw $0007,.phantoon                                                   ;90A842;
    dw $0008,.draygon                                                    ;90A846;
    dw $000A,.motherBrain                                                ;90A84A;
    dw $0005,.ridley                                                     ;90A84E;

;        _________ X offset (in pixels)
;       |      ___ Y offset (in pixels)
;       |     |
  .kraid:                                                                ;90A852;
    dw $0000,$0000
    dw $0100,$0000
    dw $0000,$0100
    dw $0100,$0100
    dw $FFFF
  .crocomire:                                                            ;90A864;
    dw $0300,$0000
    dw $0400,$0000
    dw $0500,$0000
    dw $FFFF
  .phantoon:                                                             ;90A872;
    dw $0000,$0000
    dw $FFFF
  .draygon:                                                              ;90A878;
    dw $0000,$0000
    dw $0100,$0000
    dw $0000,$0100
    dw $0100,$0100
    dw $FFFF
  .motherBrain:                                                          ;90A88A;
    dw $0000,$0000
    dw $0100,$0000
    dw $0200,$0000
    dw $0300,$0000
    dw $FFFF
  .ridley:                                                               ;90A89C;
    dw $0000,$0000
    dw $0000,$0100
    dw $FFFF

MarkMapTilesExplored:
    PHP                                                                  ;90A8A6;
    PHX                                                                  ;90A8A7;
    PHY                                                                  ;90A8A8;
    LDA.B $12                                                            ;90A8A9;
    AND.W #$FF00                                                         ;90A8AB;
    XBA                                                                  ;90A8AE;
    CLC                                                                  ;90A8AF;
    ADC.W $07A1                                                          ;90A8B0;
    PHA                                                                  ;90A8B3;
    AND.W #$0020                                                         ;90A8B4;
    STA.B $22                                                            ;90A8B7;
    PLA                                                                  ;90A8B9;
    AND.W #$001F                                                         ;90A8BA;
    STA.B $12                                                            ;90A8BD;
    AND.W #$0007                                                         ;90A8BF;
    TAY                                                                  ;90A8C2;
    LDA.B $12                                                            ;90A8C3;
    LSR A                                                                ;90A8C5;
    LSR A                                                                ;90A8C6;
    LSR A                                                                ;90A8C7;
    STA.B $14                                                            ;90A8C8;
    LDA.B $18                                                            ;90A8CA;
    AND.W #$FF00                                                         ;90A8CC;
    XBA                                                                  ;90A8CF;
    CLC                                                                  ;90A8D0;
    ADC.W $07A3                                                          ;90A8D1;
    INC A                                                                ;90A8D4;
    STA.B $16                                                            ;90A8D5;
    CLC                                                                  ;90A8D7;
    ADC.B $22                                                            ;90A8D8;
    ASL A                                                                ;90A8DA;
    ASL A                                                                ;90A8DB;
    CLC                                                                  ;90A8DC;
    ADC.B $14                                                            ;90A8DD;
    TAX                                                                  ;90A8DF;
    SEP #$20                                                             ;90A8E0;
    LDA.W $07F7,X                                                        ;90A8E2;
    ORA.W Bitmasks_1bit_90AC04,Y                                         ;90A8E5;
    STA.W $07F7,X                                                        ;90A8E8;
    PLY                                                                  ;90A8EB;
    PLX                                                                  ;90A8EC;
    PLP                                                                  ;90A8ED;
    RTS                                                                  ;90A8EE;


Initialise_Minimap_broken:
    PHP                                                                  ;90A8EF;
    REP #$30                                                             ;90A8F0;
    LDA.W $0AF6                                                          ;90A8F2;
    AND.W #$FF00                                                         ;90A8F5;
    XBA                                                                  ;90A8F8;
    CLC                                                                  ;90A8F9;
    ADC.W $07A1                                                          ;90A8FA;
    TAX                                                                  ;90A8FD;
    STA.B $12                                                            ;90A8FE;
    AND.W #$0007                                                         ;90A900;
    TAY                                                                  ;90A903;
    TXA                                                                  ;90A904;
    LSR A                                                                ;90A905;
    LSR A                                                                ;90A906;
    LSR A                                                                ;90A907;
    STA.B $14                                                            ;90A908;
    LDA.W $0AFA                                                          ;90A90A;
    AND.W #$FF00                                                         ;90A90D;
    XBA                                                                  ;90A910;
    CLC                                                                  ;90A911;
    ADC.W $07A3                                                          ;90A912;
    INC A                                                                ;90A915;
    STA.B $16                                                            ;90A916;
    JMP.W Update_HUD_Minimap_Tilemap                                     ;90A918;


Update_Minimap:
    PHP                                                                  ;90A91B;
    REP #$30                                                             ;90A91C;
    LDA.W $05F7                                                          ;90A91E;
    BEQ +                                                                ;90A921;
    PLP                                                                  ;90A923;
    RTL                                                                  ;90A924;


  + LDA.W $0AF6                                                          ;90A925;
    LSR A                                                                ;90A928;
    LSR A                                                                ;90A929;
    LSR A                                                                ;90A92A;
    LSR A                                                                ;90A92B;
    CMP.W $07A5                                                          ;90A92C;
    BCC +                                                                ;90A92F;
    PLP                                                                  ;90A931;
    RTL                                                                  ;90A932;


  + LDA.W $0AFA                                                          ;90A933;
    LSR A                                                                ;90A936;
    LSR A                                                                ;90A937;
    LSR A                                                                ;90A938;
    LSR A                                                                ;90A939;
    CMP.W $07A7                                                          ;90A93A;
    BCC +                                                                ;90A93D;
    PLP                                                                  ;90A93F;
    RTL                                                                  ;90A940;


  + STZ.B $2E                                                            ;90A941;
    LDA.W $0AF6                                                          ;90A943;
    AND.W #$FF00                                                         ;90A946;
    XBA                                                                  ;90A949;
    CLC                                                                  ;90A94A;
    ADC.W $07A1                                                          ;90A94B;
    PHA                                                                  ;90A94E;
    AND.W #$0020                                                         ;90A94F;
    STA.B $22                                                            ;90A952;
    PLA                                                                  ;90A954;
    AND.W #$001F                                                         ;90A955;
    STA.B $12                                                            ;90A958;
    AND.W #$0007                                                         ;90A95A;
    TAY                                                                  ;90A95D;
    LDA.B $12                                                            ;90A95E;
    LSR A                                                                ;90A960;
    LSR A                                                                ;90A961;
    LSR A                                                                ;90A962;
    STA.B $14                                                            ;90A963;
    LDA.W $0AFA                                                          ;90A965;
    AND.W #$FF00                                                         ;90A968;
    XBA                                                                  ;90A96B;
    CLC                                                                  ;90A96C;
    ADC.W $07A3                                                          ;90A96D;
    INC A                                                                ;90A970;
    STA.B $16                                                            ;90A971;
    CLC                                                                  ;90A973;
    ADC.B $22                                                            ;90A974;
    ASL A                                                                ;90A976;
    ASL A                                                                ;90A977;
    CLC                                                                  ;90A978;
    ADC.B $14                                                            ;90A979;
    TAX                                                                  ;90A97B;
    SEP #$20                                                             ;90A97C;
    LDA.W $07F7,X                                                        ;90A97E;
    ORA.W Bitmasks_1bit_90AC04,Y                                         ;90A981;
    STA.W $07F7,X                                                        ;90A984;
    STY.B $20                                                            ;90A987;
    STX.B $1E                                                            ;90A989;
    REP #$30                                                             ;90A98B;
    DEX                                                                  ;90A98D;
    DEX                                                                  ;90A98E;
    DEX                                                                  ;90A98F;
    DEX                                                                  ;90A990;
    TYA                                                                  ;90A991;
    DEC A                                                                ;90A992;
    DEC A                                                                ;90A993;
    BPL +                                                                ;90A994;
    AND.W #$0007                                                         ;90A996;
    DEX                                                                  ;90A999;
    INC.B $2E                                                            ;90A99A;

  + ASL A                                                                ;90A99C;
    TAY                                                                  ;90A99D;
    STX.B $32                                                            ;90A99E;
    STY.B $34                                                            ;90A9A0;
    LDA.W $07F7,X                                                        ;90A9A2;
    XBA                                                                  ;90A9A5;
    AND.W Bitmasks_6bit_90AC0C,Y                                         ;90A9A6;
    STA.B $18                                                            ;90A9A9;
    LDA.W $07FB,X                                                        ;90A9AB;
    XBA                                                                  ;90A9AE;
    AND.W Bitmasks_6bit_90AC0C,Y                                         ;90A9AF;
    STA.B $1A                                                            ;90A9B2;
    LDA.W $07FF,X                                                        ;90A9B4;
    XBA                                                                  ;90A9B7;
    AND.W Bitmasks_6bit_90AC0C,Y                                         ;90A9B8;
    STA.B $1C                                                            ;90A9BB;
    PHX                                                                  ;90A9BD;
    LDA.W $079F                                                          ;90A9BE;
    ASL A                                                                ;90A9C1;
    TAX                                                                  ;90A9C2;
    LDA.W #$0082                                                         ;90A9C3;
    STA.B $0B                                                            ;90A9C6;
    LDA.L MapData_pointers,X                                             ;90A9C8;
    STA.B $09                                                            ;90A9CC;
    STA.B $0F                                                            ;90A9CE;
    PLA                                                                  ;90A9D0;
    CLC                                                                  ;90A9D1;
    ADC.B $09                                                            ;90A9D2;
    STA.B $09                                                            ;90A9D4;
    LDA.B [$09]                                                          ;90A9D6;
    XBA                                                                  ;90A9D8;
    STA.B $26                                                            ;90A9D9;
    LDA.B $09                                                            ;90A9DB;
    CLC                                                                  ;90A9DD;
    ADC.W #$0004                                                         ;90A9DE;
    STA.B $09                                                            ;90A9E1;
    LDA.B [$09]                                                          ;90A9E3;
    XBA                                                                  ;90A9E5;
    STA.B $28                                                            ;90A9E6;
    LDA.B $09                                                            ;90A9E8;
    CLC                                                                  ;90A9EA;
    ADC.W #$0004                                                         ;90A9EB;
    STA.B $09                                                            ;90A9EE;
    LDA.B [$09]                                                          ;90A9F0;
    XBA                                                                  ;90A9F2;
    STA.B $2A                                                            ;90A9F3;
    LDX.B $32                                                            ;90A9F5;
    LDY.B $34                                                            ;90A9F7;
    TXA                                                                  ;90A9F9;
    AND.W #$0003                                                         ;90A9FA;
    CMP.W #$0003                                                         ;90A9FD;
    BNE .singlePage                                                      ;90AA00;
    LDA.B $2E                                                            ;90AA02;
    BEQ .SamusAtOrigin                                                   ;90AA04;
    TYA                                                                  ;90AA06;
    LSR A                                                                ;90AA07;
    BRA +                                                                ;90AA08;


.SamusAtOrigin:
    LDA.B $20                                                            ;90AA0A;

  + CMP.W #$0006                                                         ;90AA0C;
    BMI .singlePage                                                      ;90AA0F;
    LDA.B $22                                                            ;90AA11;
    BNE .nonZero                                                         ;90AA13;
    SEP #$20                                                             ;90AA15;
    TXA                                                                  ;90AA17;
    CLC                                                                  ;90AA18;
    ADC.B #$7D                                                           ;90AA19;
    STA.B $30                                                            ;90AA1B;
    BRA .adjustMapBits                                                   ;90AA1D;


.nonZero:
    SEP #$20                                                             ;90AA1F;
    TXA                                                                  ;90AA21;
    SEC                                                                  ;90AA22;
    SBC.B #$7C                                                           ;90AA23;
    STA.B $30                                                            ;90AA25;

.adjustMapBits:
    REP #$30                                                             ;90AA27;
    JSR.W AdjustMapBitsForMapPageSpill                                   ;90AA29;

.singlePage:
    LDA.B $34                                                            ;90AA2C;
    LSR A                                                                ;90AA2E;
    CMP.W #$0000                                                         ;90AA2F;

.loop:
    BEQ Update_HUD_Minimap_Tilemap                                       ;90AA32;
    ASL.B $18                                                            ;90AA34;
    ASL.B $26                                                            ;90AA36;
    ASL.B $1A                                                            ;90AA38;
    ASL.B $28                                                            ;90AA3A;
    ASL.B $1C                                                            ;90AA3C;
    ASL.B $2A                                                            ;90AA3E;
    DEC A                                                                ;90AA40;
    BRA .loop                                                            ;90AA41;


Update_HUD_Minimap_Tilemap:
    LDA.B $16                                                            ;90AA43;
    CLC                                                                  ;90AA45;
    ADC.B $22                                                            ;90AA46;
    XBA                                                                  ;90AA48;
    LSR A                                                                ;90AA49;
    LSR A                                                                ;90AA4A;
    LSR A                                                                ;90AA4B;
    CLC                                                                  ;90AA4C;
    ADC.B $12                                                            ;90AA4D;
    STA.W $060B                                                          ;90AA4F;
    LDA.B $22                                                            ;90AA52;
    BEQ .notLeftMapPage                                                  ;90AA54;
    LDA.W $060B                                                          ;90AA56;
    AND.W #$001F                                                         ;90AA59;
    CMP.W #$0002                                                         ;90AA5C;
    BPL .notLeftMapPage                                                  ;90AA5F;
    LDA.W $060B                                                          ;90AA61;
    SEC                                                                  ;90AA64;
    SBC.W #$0402                                                         ;90AA65;
    BRA +                                                                ;90AA68;


.notLeftMapPage:
    LDA.W $060B                                                          ;90AA6A;
    SEC                                                                  ;90AA6D;
    SBC.W #$0022                                                         ;90AA6E;

  + ASL A                                                                ;90AA71;
    TAY                                                                  ;90AA72;
    LDA.W $079F                                                          ;90AA73;
    ASL A                                                                ;90AA76;
    CLC                                                                  ;90AA77;
    ADC.W $079F                                                          ;90AA78;
    TAX                                                                  ;90AA7B;
    LDA.L AreaMapPointers+2,X                                            ;90AA7C;
    STA.B $02                                                            ;90AA80;
    STA.B $05                                                            ;90AA82;
    STA.B $08                                                            ;90AA84;
    LDA.L AreaMapPointers,X                                              ;90AA86;
    STA.B $00                                                            ;90AA8A;
    CLC                                                                  ;90AA8C;
    ADC.W #$0040                                                         ;90AA8D;
    STA.B $03                                                            ;90AA90;
    CLC                                                                  ;90AA92;
    ADC.W #$0040                                                         ;90AA93;
    STA.B $06                                                            ;90AA96;
    LDA.W #$0005                                                         ;90AA98;
    STA.B $12                                                            ;90AA9B;
    LDX.W #$0000                                                         ;90AA9D;
    LDA.W $0789                                                          ;90AAA0;
    PHP                                                                  ;90AAA3;

.loop:
    ASL.B $26                                                            ;90AAA4;
    BCC .row0BlankTile                                                   ;90AAA6;
    LDA.B [$00],Y                                                        ;90AAA8;
    PLP                                                                  ;90AAAA;
    PHP                                                                  ;90AAAB;
    BNE .row0NotBlank                                                    ;90AAAC;

.row0BlankTile:
    LDA.W #$001F                                                         ;90AAAE;

.row0NotBlank:
    AND.W #$E3FF                                                         ;90AAB1;
    ORA.W #$2C00                                                         ;90AAB4;
    STA.L $7EC63C,X                                                      ;90AAB7;
    ASL.B $18                                                            ;90AABB;
    BCC +                                                                ;90AABD;
    LDA.B [$00],Y                                                        ;90AABF;
    AND.W #$E3FF                                                         ;90AAC1;
    ORA.W #$2800                                                         ;90AAC4;
    STA.L $7EC63C,X                                                      ;90AAC7;

  + ASL.B $28                                                            ;90AACB;
    BCC .row1BlankTile                                                   ;90AACD;
    LDA.B [$03],Y                                                        ;90AACF;
    PLP                                                                  ;90AAD1;
    PHP                                                                  ;90AAD2;
    BNE .row1NotBlank                                                    ;90AAD3;

.row1BlankTile:
    LDA.W #$001F                                                         ;90AAD5;

.row1NotBlank:
    AND.W #$E3FF                                                         ;90AAD8;
    ORA.W #$2C00                                                         ;90AADB;
    STA.L $7EC67C,X                                                      ;90AADE;
    ASL.B $1A                                                            ;90AAE2;
    BCC +                                                                ;90AAE4;
    LDA.B [$03],Y                                                        ;90AAE6;
    AND.W #$E3FF                                                         ;90AAE8;
    ORA.W #$2800                                                         ;90AAEB;
    STA.L $7EC67C,X                                                      ;90AAEE;
    LDA.B $12                                                            ;90AAF2;
    CMP.W #$0003                                                         ;90AAF4;
    BNE +                                                                ;90AAF7;
    LDA.L $7EC67C,X                                                      ;90AAF9;
    AND.W #$01FF                                                         ;90AAFD;
    CMP.W #$0028                                                         ;90AB00;
    BNE +                                                                ;90AB03;
    JSR.W MarkMapTileAboveSamusExplored                                  ;90AB05;

  + ASL.B $2A                                                            ;90AB08;
    BCC .row2BlankTile                                                   ;90AB0A;
    LDA.B [$06],Y                                                        ;90AB0C;
    PLP                                                                  ;90AB0E;
    PHP                                                                  ;90AB0F;
    BNE .row2NotBlank                                                    ;90AB10;

.row2BlankTile:
    LDA.W #$001F                                                         ;90AB12;

.row2NotBlank:
    AND.W #$E3FF                                                         ;90AB15;
    ORA.W #$2C00                                                         ;90AB18;
    STA.L $7EC6BC,X                                                      ;90AB1B;
    ASL.B $1C                                                            ;90AB1F;
    BCC .next                                                            ;90AB21;
    LDA.B [$06],Y                                                        ;90AB23;
    AND.W #$E3FF                                                         ;90AB25;
    ORA.W #$2800                                                         ;90AB28;
    STA.L $7EC6BC,X                                                      ;90AB2B;

.next:
    INX                                                                  ;90AB2F;
    INX                                                                  ;90AB30;
    INY                                                                  ;90AB31;
    INY                                                                  ;90AB32;
    TYA                                                                  ;90AB33;
    AND.W #$003F                                                         ;90AB34;
    CMP.W #$0000                                                         ;90AB37;
    BNE +                                                                ;90AB3A;
    TYA                                                                  ;90AB3C;
    CLC                                                                  ;90AB3D;
    ADC.W #$07C0                                                         ;90AB3E;
    TAY                                                                  ;90AB41;

  + DEC.B $12                                                            ;90AB42;
    BEQ .handleFlashing                                                  ;90AB44;
    JMP.W .loop                                                          ;90AB46;


.handleFlashing:
    PLP                                                                  ;90AB49;
    LDA.W $05B5                                                          ;90AB4A;
    AND.W #$0008                                                         ;90AB4D;
    BNE .return                                                          ;90AB50;
    LDA.L $7EC680                                                        ;90AB52;
    ORA.W #$1C00                                                         ;90AB56;
    STA.L $7EC680                                                        ;90AB59;

.return:
    PLP                                                                  ;90AB5D;
    RTL                                                                  ;90AB5E;


MarkMapTileAboveSamusExplored:
    PHX                                                                  ;90AB5F;
    PHY                                                                  ;90AB60;
    LDX.B $1E                                                            ;90AB61;
    SEP #$20                                                             ;90AB63;
    LDY.B $20                                                            ;90AB65;
    LDA.W $07F3,X                                                        ;90AB67;
    ORA.W Bitmasks_1bit_90AC04,Y                                         ;90AB6A;
    STA.W $07F3,X                                                        ;90AB6D;
    REP #$20                                                             ;90AB70;
    PLY                                                                  ;90AB72;
    PLX                                                                  ;90AB73;
    RTS                                                                  ;90AB74;


AdjustMapBitsForMapPageSpill:
    PHP                                                                  ;90AB75;
    REP #$30                                                             ;90AB76;
    LDA.B $30                                                            ;90AB78;
    AND.W #$00FF                                                         ;90AB7A;
    TAX                                                                  ;90AB7D;
    CLC                                                                  ;90AB7E;
    ADC.B $0F                                                            ;90AB7F;
    STA.B $09                                                            ;90AB81;
    SEP #$20                                                             ;90AB83;
    LDA.W $07F7,X                                                        ;90AB85;
    STA.B $2C                                                            ;90AB88;
    LDA.B [$09]                                                          ;90AB8A;
    STA.B $2D                                                            ;90AB8C;
    LDA.B #$20                                                           ;90AB8E;
    CMP.B $22                                                            ;90AB90;
    BNE .leftMapPage1                                                    ;90AB92;
    LDA.B $2C                                                            ;90AB94;
    STA.B $19                                                            ;90AB96;
    LDA.B $2D                                                            ;90AB98;
    STA.B $27                                                            ;90AB9A;
    BRA +                                                                ;90AB9C;


.leftMapPage1:
    LDA.B $2C                                                            ;90AB9E;
    STA.B $18                                                            ;90ABA0;
    LDA.B $2D                                                            ;90ABA2;
    STA.B $26                                                            ;90ABA4;

  + LDA.W $07FB,X                                                        ;90ABA6;
    STA.B $2C                                                            ;90ABA9;
    REP #$20                                                             ;90ABAB;
    LDA.B $09                                                            ;90ABAD;
    CLC                                                                  ;90ABAF;
    ADC.W #$0004                                                         ;90ABB0;
    STA.B $09                                                            ;90ABB3;
    SEP #$20                                                             ;90ABB5;
    LDA.B [$09]                                                          ;90ABB7;
    STA.B $2D                                                            ;90ABB9;
    LDA.B #$20                                                           ;90ABBB;
    CMP.B $22                                                            ;90ABBD;
    BNE .leftMapPage2                                                    ;90ABBF;
    LDA.B $2C                                                            ;90ABC1;
    STA.B $1B                                                            ;90ABC3;
    LDA.B $2D                                                            ;90ABC5;
    STA.B $29                                                            ;90ABC7;
    BRA +                                                                ;90ABC9;


.leftMapPage2:
    LDA.B $2C                                                            ;90ABCB;
    STA.B $1A                                                            ;90ABCD;
    LDA.B $2D                                                            ;90ABCF;
    STA.B $28                                                            ;90ABD1;

  + LDA.W $07FF,X                                                        ;90ABD3;
    STA.B $2C                                                            ;90ABD6;
    REP #$20                                                             ;90ABD8;
    LDA.B $09                                                            ;90ABDA;
    CLC                                                                  ;90ABDC;
    ADC.W #$0004                                                         ;90ABDD;
    STA.B $09                                                            ;90ABE0;
    SEP #$20                                                             ;90ABE2;
    LDA.B [$09]                                                          ;90ABE4;
    STA.B $2D                                                            ;90ABE6;
    LDA.B #$20                                                           ;90ABE8;
    CMP.B $22                                                            ;90ABEA;
    BNE .leftMapPage3                                                    ;90ABEC;
    LDA.B $2C                                                            ;90ABEE;
    STA.B $1D                                                            ;90ABF0;
    LDA.B $2D                                                            ;90ABF2;
    STA.B $2B                                                            ;90ABF4;
    BRA .return                                                          ;90ABF6;


.leftMapPage3:
    LDA.B $2C                                                            ;90ABF8;
    STA.B $1C                                                            ;90ABFA;
    LDA.B $2D                                                            ;90ABFC;
    STA.B $2A                                                            ;90ABFE;

.return:
    REP #$30                                                             ;90AC00;
    PLP                                                                  ;90AC02;
    RTS                                                                  ;90AC03;


Bitmasks_1bit_90AC04:
    db $80,$40,$20,$10,$08,$04,$02,$01                                   ;90AC04;

Bitmasks_6bit_90AC0C:
; Why are these 6-bits instead of 5?
; FC00h >> i
; 3Fh << Ah - i
    dw $FC00,$7E00,$3F00,$1F80,$0FC0,$07E0,$03F0,$01F8                   ;90AC0C;

Handle_Samus_Cooldown:
    LDA.W $0A78                                                          ;90AC1C;
    BNE .timeFrozen                                                      ;90AC1F;
    LDA.W $0CCC                                                          ;90AC21;
    BEQ .return                                                          ;90AC24;
    BMI .resetCooldown                                                   ;90AC26;
    DEC A                                                                ;90AC28;
    STA.W $0CCC                                                          ;90AC29;
    BPL .return                                                          ;90AC2C;

.resetCooldown:
    STZ.W $0CCC                                                          ;90AC2E;

.return:
    RTS                                                                  ;90AC31;


.timeFrozen:
    LDA.W #$0020                                                         ;90AC32;
    STA.W $0CCC                                                          ;90AC35;
    RTS                                                                  ;90AC38;


Check_if_Samus_Can_Fire_Beam:
    LDA.W $0CCE                                                          ;90AC39;
    CMP.W #$0005                                                         ;90AC3C;
    BPL .noFire                                                          ;90AC3F;
    LDA.W $0CCC                                                          ;90AC41;
    AND.W #$00FF                                                         ;90AC44;
    BNE .noFire                                                          ;90AC47;
    LDA.W #$0001                                                         ;90AC49;
    STA.W $0CCC                                                          ;90AC4C;
    LDA.W $0CCE                                                          ;90AC4F;
    INC A                                                                ;90AC52;
    STA.W $0CCE                                                          ;90AC53;
    SEC                                                                  ;90AC56;
    RTS                                                                  ;90AC57;


.noFire:
    CLC                                                                  ;90AC58;
    RTS                                                                  ;90AC59;


Check_if_Samus_Can_Fire_Missile:
    LDA.W $09D2                                                          ;90AC5A;
    CMP.W #$0002                                                         ;90AC5D;
    BEQ .superMissile                                                    ;90AC60;
    LDA.W $0CCE                                                          ;90AC62;
    CMP.W #$0005                                                         ;90AC65;
    BPL .noFire                                                          ;90AC68;

.freeSlot:
    LDA.W $0CCC                                                          ;90AC6A;
    AND.W #$00FF                                                         ;90AC6D;
    BNE .noFire                                                          ;90AC70;
    LDA.W #$0001                                                         ;90AC72;
    STA.W $0CCC                                                          ;90AC75;
    LDA.W $0CCE                                                          ;90AC78;
    INC A                                                                ;90AC7B;
    STA.W $0CCE                                                          ;90AC7C;
    SEC                                                                  ;90AC7F;
    RTS                                                                  ;90AC80;


.noFire:
    CLC                                                                  ;90AC81;
    RTS                                                                  ;90AC82;


.superMissile:
    LDA.W $0CCE                                                          ;90AC83;
    CMP.W #$0004                                                         ;90AC86;
    BMI .freeSlot                                                        ;90AC89;
    CLC                                                                  ;90AC8B;
    RTS                                                                  ;90AC8C;


Update_Beam_Tiles_and_Palette:
    PHP                                                                  ;90AC8D;
    PHB                                                                  ;90AC8E;
    PHK                                                                  ;90AC8F;
    PLB                                                                  ;90AC90;
    REP #$30                                                             ;90AC91;
    LDA.W $09A6                                                          ;90AC93;
    AND.W #$0FFF                                                         ;90AC96;
    ASL A                                                                ;90AC99;
    TAY                                                                  ;90AC9A;
    LDX.W $0330                                                          ;90AC9B;
    LDA.W #$0100                                                         ;90AC9E;
    STA.B $D0,X                                                          ;90ACA1;
    INX                                                                  ;90ACA3;
    INX                                                                  ;90ACA4;
    LDA.W BeamTilesPointers,Y                                            ;90ACA5;
    STA.B $D0,X                                                          ;90ACA8;
    INX                                                                  ;90ACAA;
    INX                                                                  ;90ACAB;
    SEP #$20                                                             ;90ACAC;
    LDA.B #$9A                                                           ;90ACAE;
    STA.B $D0,X                                                          ;90ACB0;
    REP #$20                                                             ;90ACB2;
    INX                                                                  ;90ACB4;
    LDA.W #$6300                                                         ;90ACB5;
    STA.B $D0,X                                                          ;90ACB8;
    INX                                                                  ;90ACBA;
    INX                                                                  ;90ACBB;
    STX.W $0330                                                          ;90ACBC;
    JMP.W Load_Beam_Palette_withStackPrepped                             ;90ACBF;


Load_Beam_Palette_Setup:
    PHP                                                                  ;90ACC2;
    PHB                                                                  ;90ACC3;
    PHK                                                                  ;90ACC4;
    PLB                                                                  ;90ACC5;
    REP #$30                                                             ;90ACC6;
    AND.W #$0FFF                                                         ;90ACC8;
    ASL A                                                                ;90ACCB;
    TAY                                                                  ;90ACCC; fallthrough to Load_Beam_Palette

Load_Beam_Palette_withStackPrepped:
    LDA.W #$0090                                                         ;90ACCD;
    XBA                                                                  ;90ACD0;
    STA.B $01                                                            ;90ACD1;
    LDA.W BeamPalettePointers,Y                                          ;90ACD3;
    STA.B $00                                                            ;90ACD6;
    LDY.W #$0000                                                         ;90ACD8;
    LDX.W #$0000                                                         ;90ACDB;

.loop:
    LDA.B [$00],Y                                                        ;90ACDE;
    STA.L $7EC1C0,X                                                      ;90ACE0;
    INX                                                                  ;90ACE4;
    INX                                                                  ;90ACE5;
    INY                                                                  ;90ACE6;
    INY                                                                  ;90ACE7;
    CPY.W #$0020                                                         ;90ACE8;
    BMI .loop                                                            ;90ACEB;
    PLB                                                                  ;90ACED;
    PLP                                                                  ;90ACEE;
    RTL                                                                  ;90ACEF;


Load_Beam_Palette_External:
    PHP                                                                  ;90ACF0;
    PHB                                                                  ;90ACF1;
    PHK                                                                  ;90ACF2;
    PLB                                                                  ;90ACF3;
    REP #$30                                                             ;90ACF4;
    JSR.W Load_Beam_Palette                                              ;90ACF6;
    PLB                                                                  ;90ACF9;
    PLP                                                                  ;90ACFA;
    RTL                                                                  ;90ACFB;


Load_Beam_Palette:
    AND.W #$0FFF                                                         ;90ACFC;
    ASL A                                                                ;90ACFF;
    TAY                                                                  ;90AD00;
    LDA.W #$0090                                                         ;90AD01;
    XBA                                                                  ;90AD04;
    STA.B $01                                                            ;90AD05;
    LDA.W BeamPalettePointers,Y                                          ;90AD07;
    STA.B $00                                                            ;90AD0A;
    LDY.W #$0000                                                         ;90AD0C;
    LDX.W #$0000                                                         ;90AD0F;

.loop:
    LDA.B [$00],Y                                                        ;90AD12;
    STA.L $7EC1C0,X                                                      ;90AD14;
    INX                                                                  ;90AD18;
    INX                                                                  ;90AD19;
    INY                                                                  ;90AD1A;
    INY                                                                  ;90AD1B;
    CPY.W #$0020                                                         ;90AD1C;
    BMI .loop                                                            ;90AD1F;
    RTS                                                                  ;90AD21;


Reset_Projectile_Data:
    PHP                                                                  ;90AD22;
    REP #$30                                                             ;90AD23;
    LDX.W #$0000                                                         ;90AD25;

.loop:
    STZ.W $0C90,X                                                        ;90AD28;
    STZ.W $0B64,X                                                        ;90AD2B;
    STZ.W $0B78,X                                                        ;90AD2E;
    STZ.W $0C04,X                                                        ;90AD31;
    STZ.W $0BDC,X                                                        ;90AD34;
    STZ.W $0BF0,X                                                        ;90AD37;
    STZ.W $0BB4,X                                                        ;90AD3A;
    STZ.W $0BC8,X                                                        ;90AD3D;
    STZ.W $0C18,X                                                        ;90AD40;
    STZ.W $0C2C,X                                                        ;90AD43;
    STZ.W $0C40,X                                                        ;90AD46;
    STZ.W $0C54,X                                                        ;90AD49;
    STZ.W $0C7C,X                                                        ;90AD4C;
    STZ.W $0CB8,X                                                        ;90AD4F;
    LDA.W #RTS_90B169                                                    ;90AD52;
    STA.W $0C68,X                                                        ;90AD55;
    INX                                                                  ;90AD58;
    INX                                                                  ;90AD59;
    CPX.W #$0014                                                         ;90AD5A;
    BMI .loop                                                            ;90AD5D;
    STZ.W $0CD2                                                          ;90AD5F;
    STZ.W $0CCC                                                          ;90AD62;
    STZ.W $0CCE                                                          ;90AD65;
    STZ.W $0CEE                                                          ;90AD68;
    LDA.W $09EA                                                          ;90AD6B;
    BEQ +                                                                ;90AD6E;
    STZ.W $09D2                                                          ;90AD70;
    STZ.W $0A04                                                          ;90AD73;

  + STZ.W $0AB0                                                          ;90AD76;
    STZ.W $0AB2                                                          ;90AD79;
    STZ.W $0AB4                                                          ;90AD7C;
    STZ.W $0AB6                                                          ;90AD7F;
    STZ.W $0AB8                                                          ;90AD82;
    STZ.W $0ABA                                                          ;90AD85;
    STZ.W $0ABC                                                          ;90AD88;
    STZ.W $0ABE                                                          ;90AD8B;
    STZ.W $0AC0                                                          ;90AD8E;
    STZ.W $0AC2                                                          ;90AD91;
    STZ.W $0AC4                                                          ;90AD94;
    STZ.W $0AC6                                                          ;90AD97;
    STZ.W $0AAE                                                          ;90AD9A;
    LDA.W $0A4A                                                          ;90AD9D;
    BEQ .checkHyper                                                      ;90ADA0;
    STZ.W $0A4A                                                          ;90ADA2;
    JSL.L LoadSamusSuitTargetPalette                                     ;90ADA5;

.checkHyper:
    LDA.W $0A76                                                          ;90ADA9;
    BEQ .return                                                          ;90ADAC;
    LDY.W #PaletteFXObjects_HyperBeam                                    ;90ADAE;
    JSL.L Spawn_PaletteFXObject                                          ;90ADB1;

.return:
    PLP                                                                  ;90ADB5;
    RTL                                                                  ;90ADB6;


Clear_Projectile:
    PHP                                                                  ;90ADB7;
    REP #$30                                                             ;90ADB8;
    STZ.W $0B64,X                                                        ;90ADBA;
    STZ.W $0B78,X                                                        ;90ADBD;
    STZ.W $0B8C,X                                                        ;90ADC0;
    STZ.W $0BA0,X                                                        ;90ADC3;
    STZ.W $0C04,X                                                        ;90ADC6;
    STZ.W $0BDC,X                                                        ;90ADC9;
    STZ.W $0BF0,X                                                        ;90ADCC;
    STZ.W $0BB4,X                                                        ;90ADCF;
    STZ.W $0BC8,X                                                        ;90ADD2;
    STZ.W $0C18,X                                                        ;90ADD5;
    STZ.W $0C2C,X                                                        ;90ADD8;
    STZ.W $0C40,X                                                        ;90ADDB;
    STZ.W $0C54,X                                                        ;90ADDE;
    STZ.W $0C7C,X                                                        ;90ADE1;
    STZ.W $0CB8,X                                                        ;90ADE4;
    LDA.W #RTS_90B169                                                    ;90ADE7;
    STA.W $0C68,X                                                        ;90ADEA;
    CPX.W #$000A                                                         ;90ADED;
    BPL +                                                                ;90ADF0;
    DEC.W $0CCE                                                          ;90ADF2;
    BPL .return                                                          ;90ADF5;
    STZ.W $0CCE                                                          ;90ADF7;
    BRA .return                                                          ;90ADFA;


  + DEC.W $0CD2                                                          ;90ADFC;
    BPL .return                                                          ;90ADFF;
    STZ.W $0CD2                                                          ;90AE01;

.return:
    PLP                                                                  ;90AE04;
    RTL                                                                  ;90AE05;


Kill_Projectile:
    PHP                                                                  ;90AE06;
    PHB                                                                  ;90AE07;
    PHK                                                                  ;90AE08;
    PLB                                                                  ;90AE09;
    REP #$30                                                             ;90AE0A;
    LDA.W $0C19,X                                                        ;90AE0C;
    AND.W #$000F                                                         ;90AE0F;
    BEQ .beam                                                            ;90AE12;
    CMP.W #$0003                                                         ;90AE14;
    BMI .missile                                                         ;90AE17;
    JSL.L Clear_Projectile                                               ;90AE19;
    PLB                                                                  ;90AE1D;
    PLP                                                                  ;90AE1E;
    RTL                                                                  ;90AE1F;


.beam:
    TXY                                                                  ;90AE20;
    LDA.W $0C04,X                                                        ;90AE21;
    AND.W #$000F                                                         ;90AE24;
    ASL A                                                                ;90AE27;
    TAX                                                                  ;90AE28;
    JSR.W (.pointers,X)                                                  ;90AE29;
    TYX                                                                  ;90AE2C;

.missile:
    JSL.L PartOfKillProjectile_QueueSFX_SetInstruction                   ;90AE2D;
    LDA.W #RTS_90B169                                                    ;90AE31;
    STA.W $0C68,X                                                        ;90AE34;
    PLB                                                                  ;90AE37;
    PLP                                                                  ;90AE38;
    RTL                                                                  ;90AE39;


.pointers:
    dw KillBeam_Up                                                       ;90AE3A;
    dw KillBeam_UpRight                                                  ;90AE3C;
    dw KillBeam_Right                                                    ;90AE3E;
    dw KillBeam_DownRight                                                ;90AE40;
    dw KillBeam_Down                                                     ;90AE42;
    dw KillBeam_Down                                                     ;90AE44;
    dw KillBeam_DownLeft                                                 ;90AE46;
    dw KillBeam_Left                                                     ;90AE48;
    dw KillBeam_UpLeft                                                   ;90AE4A;
    dw KillBeam_Up                                                       ;90AE4C;

KillBeam_Up:
    LDA.W $0B78,Y                                                        ;90AE4E;
    SEC                                                                  ;90AE51;
    SBC.W $0BC8,Y                                                        ;90AE52;
    STA.W $0B78,Y                                                        ;90AE55;
    RTS                                                                  ;90AE58;


KillBeam_UpRight:
    LDA.W $0B64,Y                                                        ;90AE59;
    CLC                                                                  ;90AE5C;
    ADC.W $0BB4,Y                                                        ;90AE5D;
    STA.W $0B64,Y                                                        ;90AE60;
    LDA.W $0B78,Y                                                        ;90AE63;
    SEC                                                                  ;90AE66;
    SBC.W $0BC8,Y                                                        ;90AE67;
    STA.W $0B78,Y                                                        ;90AE6A;
    RTS                                                                  ;90AE6D;


KillBeam_Right:
    LDA.W $0B64,Y                                                        ;90AE6E;
    CLC                                                                  ;90AE71;
    ADC.W $0BB4,Y                                                        ;90AE72;
    STA.W $0B64,Y                                                        ;90AE75;
    RTS                                                                  ;90AE78;


KillBeam_DownRight:
    LDA.W $0B64,Y                                                        ;90AE79;
    CLC                                                                  ;90AE7C;
    ADC.W $0BB4,Y                                                        ;90AE7D;
    STA.W $0B64,Y                                                        ;90AE80;
    LDA.W $0B78,Y                                                        ;90AE83;
    CLC                                                                  ;90AE86;
    ADC.W $0BC8,Y                                                        ;90AE87;
    STA.W $0B78,Y                                                        ;90AE8A;
    RTS                                                                  ;90AE8D;


KillBeam_Down:
    LDA.W $0B78,Y                                                        ;90AE8E;
    CLC                                                                  ;90AE91;
    ADC.W $0BC8,Y                                                        ;90AE92;
    STA.W $0B78,Y                                                        ;90AE95;
    RTS                                                                  ;90AE98;


KillBeam_DownLeft:
    LDA.W $0B64,Y                                                        ;90AE99;
    SEC                                                                  ;90AE9C;
    SBC.W $0BB4,Y                                                        ;90AE9D;
    STA.W $0B64,Y                                                        ;90AEA0;
    LDA.W $0B78,Y                                                        ;90AEA3;
    CLC                                                                  ;90AEA6;
    ADC.W $0BC8,Y                                                        ;90AEA7;
    STA.W $0B78,Y                                                        ;90AEAA;
    RTS                                                                  ;90AEAD;


KillBeam_Left:
    LDA.W $0B64,Y                                                        ;90AEAE;
    SEC                                                                  ;90AEB1;
    SBC.W $0BB4,Y                                                        ;90AEB2;
    STA.W $0B64,Y                                                        ;90AEB5;
    RTS                                                                  ;90AEB8;


KillBeam_UpLeft:
    LDA.W $0B64,Y                                                        ;90AEB9;
    SEC                                                                  ;90AEBC;
    SBC.W $0BB4,Y                                                        ;90AEBD;
    STA.W $0B64,Y                                                        ;90AEC0;
    LDA.W $0B78,Y                                                        ;90AEC3;
    SEC                                                                  ;90AEC6;
    SBC.W $0BC8,Y                                                        ;90AEC7;
    STA.W $0B78,Y                                                        ;90AECA;
    RTS                                                                  ;90AECD;


Handle_Projectiles:
    PHP                                                                  ;90AECE;
    REP #$30                                                             ;90AECF;
    LDA.W #$0012                                                         ;90AED1;
    STA.W $0DDE                                                          ;90AED4;
    TAX                                                                  ;90AED7;

.loop:
    LDA.W $0C40,X                                                        ;90AED8;
    BEQ .next                                                            ;90AEDB;
    JSR.W ($0C68,X)                                                      ;90AEDD;
    JSL.L ProjectileInstructionHandler                                   ;90AEE0;
    LDX.W $0DDE                                                          ;90AEE4;

.next:
    DEX                                                                  ;90AEE7;
    DEX                                                                  ;90AEE8;
    STX.W $0DDE                                                          ;90AEE9;
    BPL .loop                                                            ;90AEEC;
    STZ.W $0DD2                                                          ;90AEEE;
    PLP                                                                  ;90AEF1;
    RTS                                                                  ;90AEF2;


Beam_NoWaveBeam:
    LDA.W $0C04,X                                                        ;90AEF3;
    AND.W #$00F0                                                         ;90AEF6;
    BEQ .trail                                                           ;90AEF9;
    JSL.L Clear_Projectile                                               ;90AEFB;
    RTS                                                                  ;90AEFF;


.trail:
    DEC.W $0C90,X                                                        ;90AF00;
    BNE +                                                                ;90AF03;
    LDA.W #$0004                                                         ;90AF05;
    STA.W $0C90,X                                                        ;90AF08;
    JSL.L Spawn_ProjectileTrail                                          ;90AF0B;
    LDX.W $0DDE                                                          ;90AF0F;

  + LDA.W $0C04,X                                                        ;90AF12;
    AND.W #$000F                                                         ;90AF15;
    ASL A                                                                ;90AF18;
    TAY                                                                  ;90AF19;
    LDA.W $0BDC,X                                                        ;90AF1A;
    CLC                                                                  ;90AF1D;
    ADC.W ProjectileAccelerations_X,Y                                    ;90AF1E;
    STA.W $0BDC,X                                                        ;90AF21;
    LDA.W $0BF0,X                                                        ;90AF24;
    CLC                                                                  ;90AF27;
    ADC.W ProjectileAccelerations_Y,Y                                    ;90AF28;
    STA.W $0BF0,X                                                        ;90AF2B;
    TYX                                                                  ;90AF2E;
    JSR.W (.pointers,X)                                                  ;90AF2F;
    JSR.W DeleteProjectileIfTooFarOffScreen                              ;90AF32;
    RTS                                                                  ;90AF35;


  .pointers:
    dw BeamBlockCollision_NoWaveBeam_Vertical                            ;90AF36; 0: Up, facing right
    dw BeamBlockCollision_NoWaveBeam_Diagonal                            ;90AF38; 1: Up-right
    dw BeamBlockCollision_NoWaveBeam_Horizontal                          ;90AF3A; 2: Right
    dw BeamBlockCollision_NoWaveBeam_Diagonal                            ;90AF3C; 3: Down-right
    dw BeamBlockCollision_NoWaveBeam_Vertical                            ;90AF3E; 4: Down, facing right
    dw BeamBlockCollision_NoWaveBeam_Vertical                            ;90AF40; 5: Down, facing left
    dw BeamBlockCollision_NoWaveBeam_Diagonal                            ;90AF42; 6: Down-left
    dw BeamBlockCollision_NoWaveBeam_Horizontal                          ;90AF44; 7: Left
    dw BeamBlockCollision_NoWaveBeam_Diagonal                            ;90AF46; 8: Up-left
    dw BeamBlockCollision_NoWaveBeam_Vertical                            ;90AF48; 9: Up, facing left

BeamBlockCollision_NoWaveBeam_Vertical:
    LDX.W $0DDE                                                          ;90AF4A;
    JSL.L MoveBeamVertically_NoWaveBeam                                  ;90AF4D;
    RTS                                                                  ;90AF51;


BeamBlockCollision_NoWaveBeam_Diagonal:
    LDX.W $0DDE                                                          ;90AF52;
    JSL.L MoveBeamHorizontally_NoWaveBeam                                ;90AF55;
    BCS .return                                                          ;90AF59;
    JSL.L MoveBeamVertically_NoWaveBeam                                  ;90AF5B;

.return:
    RTS                                                                  ;90AF5F;


BeamBlockCollision_NoWaveBeam_Horizontal:
    LDX.W $0DDE                                                          ;90AF60;
    JSL.L MoveBeamHorizontally_NoWaveBeam                                ;90AF63;
    RTS                                                                  ;90AF67;


ProjectilePreInstruction_Missile:
    LDA.W $0C04,X                                                        ;90AF68;
    AND.W #$00F0                                                         ;90AF6B;
    BEQ .notDeleted                                                      ;90AF6E;
    JSL.L Clear_Projectile                                               ;90AF70;
    RTS                                                                  ;90AF74;


.notDeleted:
    DEC.W $0C90,X                                                        ;90AF75;
    BNE +                                                                ;90AF78;
    LDA.W #$0004                                                         ;90AF7A;
    STA.W $0C90,X                                                        ;90AF7D;
    JSL.L Spawn_ProjectileTrail                                          ;90AF80;
    LDX.W $0DDE                                                          ;90AF84;

  + LDA.W $0C04,X                                                        ;90AF87;
    AND.W #$000F                                                         ;90AF8A;
    ASL A                                                                ;90AF8D;
    TAY                                                                  ;90AF8E;
    LDA.W $0BDC,X                                                        ;90AF8F;
    CLC                                                                  ;90AF92;
    ADC.W ProjectileAccelerations_X,Y                                    ;90AF93;
    STA.W $0BDC,X                                                        ;90AF96;
    LDA.W $0BF0,X                                                        ;90AF99;
    CLC                                                                  ;90AF9C;
    ADC.W ProjectileAccelerations_Y,Y                                    ;90AF9D;
    STA.W $0BF0,X                                                        ;90AFA0;
    TYA                                                                  ;90AFA3;
    LSR A                                                                ;90AFA4;
    TAY                                                                  ;90AFA5;
    JSR.W AccelerateMissile                                              ;90AFA6;
    TYA                                                                  ;90AFA9;
    ASL A                                                                ;90AFAA;
    TAX                                                                  ;90AFAB;
    JSR.W (.pointers,X)                                                  ;90AFAC;
    JSR.W DeleteProjectileIfTooFarOffScreen                              ;90AFAF;
    RTS                                                                  ;90AFB2;


  .pointers:
    dw MissileBlockCollision_Vertical                                    ;90AFB3; 0: Up, facing right
    dw MissileBlockCollision_Diagonal                                    ;90AFB5; 1: Up-right
    dw MissileBlockCollision_Horizontal                                  ;90AFB7; 2: Right
    dw MissileBlockCollision_Diagonal                                    ;90AFB9; 3: Down-right
    dw MissileBlockCollision_Vertical                                    ;90AFBB; 4: Down, facing right
    dw MissileBlockCollision_Vertical                                    ;90AFBD; 5: Down, facing left
    dw MissileBlockCollision_Diagonal                                    ;90AFBF; 6: Down-left
    dw MissileBlockCollision_Horizontal                                  ;90AFC1; 7: Left
    dw MissileBlockCollision_Diagonal                                    ;90AFC3; 8: Up-left
    dw MissileBlockCollision_Vertical                                    ;90AFC5; 9: Up, facing left

MissileBlockCollision_Vertical:
    LDX.W $0DDE                                                          ;90AFC7;
    JSL.L MoveMissileVertically                                          ;90AFCA;
    RTS                                                                  ;90AFCE;


MissileBlockCollision_Diagonal:
    LDX.W $0DDE                                                          ;90AFCF;
    JSL.L MoveMissileHorizontally                                        ;90AFD2;
    BCS .return                                                          ;90AFD6;
    JSL.L MoveMissileVertically                                          ;90AFD8;

.return:
    RTS                                                                  ;90AFDC;


MissileBlockCollision_Horizontal:
    LDX.W $0DDE                                                          ;90AFDD;
    JSL.L MoveMissileHorizontally                                        ;90AFE0;
    RTS                                                                  ;90AFE4;


ProjectilePreInstruction_SuperMissile:
    LDA.W $0C04,X                                                        ;90AFE5;
    AND.W #$00F0                                                         ;90AFE8;
    BEQ .notDeleted                                                      ;90AFEB;
    JSL.L Clear_Projectile                                               ;90AFED;
    BRA .delete                                                          ;90AFF1;


.notDeleted:
    DEC.W $0C90,X                                                        ;90AFF3;
    BNE +                                                                ;90AFF6;
    LDA.W #$0002                                                         ;90AFF8;
    STA.W $0C90,X                                                        ;90AFFB;
    JSL.L Spawn_ProjectileTrail                                          ;90AFFE;
    LDX.W $0DDE                                                          ;90B002;

  + LDA.W $0C04,X                                                        ;90B005;
    AND.W #$000F                                                         ;90B008;
    TAY                                                                  ;90B00B;
    JSR.W AccelerateMissile                                              ;90B00C;
    TYA                                                                  ;90B00F;
    ASL A                                                                ;90B010;
    TAX                                                                  ;90B011;
    JSR.W (.pointers,X)                                                  ;90B012;
    JSR.W DeleteProjectileIfTooFarOffScreen                              ;90B015;
    BCS .delete                                                          ;90B018;
    RTS                                                                  ;90B01A;


.delete:
    LDY.W #$0008                                                         ;90B01B;

.loop:
    LDA.W $0C18,Y                                                        ;90B01E;
    AND.W #$0FFF                                                         ;90B021;
    CMP.W #$0200                                                         ;90B024;
    BNE .next                                                            ;90B027;
    TYX                                                                  ;90B029;
    JSL.L Clear_Projectile                                               ;90B02A;

.next:
    DEY                                                                  ;90B02E;
    DEY                                                                  ;90B02F;
    BPL .loop                                                            ;90B030;
    RTS                                                                  ;90B032;


  .pointers:
    dw SuperMissileBlockCollision_Vertical                               ;90B033; 0: Up, facing right
    dw SuperMissileBlockCollision_Diagonal                               ;90B035; 1: Up-right
    dw SuperMissileBlockCollision_Horizontal                             ;90B037; 2: Right
    dw SuperMissileBlockCollision_Diagonal                               ;90B039; 3: Down-right
    dw SuperMissileBlockCollision_Vertical                               ;90B03B; 4: Down, facing right
    dw SuperMissileBlockCollision_Vertical                               ;90B03D; 5: Down, facing left
    dw SuperMissileBlockCollision_Diagonal                               ;90B03F; 6: Down-left
    dw SuperMissileBlockCollision_Horizontal                             ;90B041; 7: Left
    dw SuperMissileBlockCollision_Diagonal                               ;90B043; 8: Up-left
    dw SuperMissileBlockCollision_Vertical                               ;90B045; 9: Up, facing left

SuperMissileBlockCollision_Vertical:
    LDX.W $0DDE                                                          ;90B047;
    JSL.L MoveMissileVertically                                          ;90B04A;
    JSR.W SuperMissileLink                                               ;90B04E;
    RTS                                                                  ;90B051;


SuperMissileBlockCollision_Diagonal:
    LDX.W $0DDE                                                          ;90B052;
    JSL.L MoveMissileHorizontally                                        ;90B055;
    BCS .collision                                                       ;90B059;
    JSR.W SuperMissileLink_HorizontalBlockCollisionDetection             ;90B05B;
    JSL.L MoveMissileVertically                                          ;90B05E;
    JSR.W SuperMissileLink                                               ;90B062;
    RTS                                                                  ;90B065;


.collision:
    JSR.W SuperMissileLink_HorizontalBlockCollisionDetection             ;90B066;
    RTS                                                                  ;90B069;


SuperMissileBlockCollision_Horizontal:
    LDX.W $0DDE                                                          ;90B06A;
    JSL.L MoveMissileHorizontally                                        ;90B06D;
    JSR.W SuperMissileLink_HorizontalBlockCollisionDetection             ;90B071;
    RTS                                                                  ;90B074;


ProjectilePreInstruction_SuperMissileLink:
    LDA.W $0C04,X                                                        ;90B075;
    AND.W #$00F0                                                         ;90B078;
    BEQ .return                                                          ;90B07B;
    JSL.L Clear_Projectile                                               ;90B07D;
    LDY.W #$0008                                                         ;90B081;

.loop:
    LDA.W $0C18,Y                                                        ;90B084;
    AND.W #$0FFF                                                         ;90B087;
    CMP.W #$0200                                                         ;90B08A;
    BNE .next                                                            ;90B08D;
    TYX                                                                  ;90B08F;
    JSL.L Clear_Projectile                                               ;90B090;

.next:
    DEY                                                                  ;90B094;
    DEY                                                                  ;90B095;
    BPL .loop                                                            ;90B096;

.return:
    RTS                                                                  ;90B098;


ProjectilePreInstruction_Bomb:
    LDA.W $0C04,X                                                        ;90B099;
    AND.W #$00F0                                                         ;90B09C;
    BEQ .notDeleted                                                      ;90B09F;
    JSL.L Clear_Projectile                                               ;90B0A1;
    RTS                                                                  ;90B0A5;


.notDeleted:
    JSR.W HandleBomb                                                     ;90B0A6;
    JSL.L BombAndPowerBombExplosionBlockCollisionHandling                ;90B0A9;
    RTS                                                                  ;90B0AD;


ProjectilePreInstruction_PowerBomb:
    LDA.W $0C04,X                                                        ;90B0AE;
    AND.W #$00F0                                                         ;90B0B1;
    BEQ .notDeleted                                                      ;90B0B4;
    JSL.L Clear_Projectile                                               ;90B0B6;
    RTS                                                                  ;90B0BA;


.notDeleted:
    JSR.W HandlePowerBomb                                                ;90B0BB;
    JSL.L BombAndPowerBombExplosionBlockCollisionHandling                ;90B0BE;
    RTS                                                                  ;90B0C2;


ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave:
    LDA.W $0C04,X                                                        ;90B0C3;
    AND.W #$00F0                                                         ;90B0C6;
    BEQ .notDeleted                                                      ;90B0C9;
    JSL.L Clear_Projectile                                               ;90B0CB;
    RTS                                                                  ;90B0CF;


.notDeleted:
    DEC.W $0C90,X                                                        ;90B0D0;
    BNE WaveBeamSharedPreInstruction                                     ;90B0D3;
    LDA.W #$0004                                                         ;90B0D5;
    STA.W $0C90,X                                                        ;90B0D8;
    JSL.L Spawn_ProjectileTrail                                          ;90B0DB;
    LDX.W $0DDE                                                          ;90B0DF;
    BRA WaveBeamSharedPreInstruction                                     ;90B0E2;


ProjectilePreInstruction_Beam_UnchargedIceWave:
    LDA.W $0C04,X                                                        ;90B0E4;
    AND.W #$00F0                                                         ;90B0E7;
    BEQ .notDeleted                                                      ;90B0EA;
    JSL.L Clear_Projectile                                               ;90B0EC;
    RTS                                                                  ;90B0F0;


.notDeleted:
    DEC.W $0C90,X                                                        ;90B0F1;
    BNE WaveBeamSharedPreInstruction                                     ;90B0F4;
    LDA.W #$0003                                                         ;90B0F6;
    STA.W $0C90,X                                                        ;90B0F9;
    JSL.L Spawn_ProjectileTrail                                          ;90B0FC;
    LDX.W $0DDE                                                          ;90B100;

WaveBeamSharedPreInstruction:
    LDA.W $0C04,X                                                        ;90B103;
    AND.W #$000F                                                         ;90B106;
    ASL A                                                                ;90B109;
    TAY                                                                  ;90B10A;
    LDA.W $0BDC,X                                                        ;90B10B;
    CLC                                                                  ;90B10E;
    ADC.W ProjectileAccelerations_X,Y                                    ;90B10F;
    STA.W $0BDC,X                                                        ;90B112;
    LDA.W $0BF0,X                                                        ;90B115;
    CLC                                                                  ;90B118;
    ADC.W ProjectileAccelerations_Y,Y                                    ;90B119;
    STA.W $0BF0,X                                                        ;90B11C;
    TYX                                                                  ;90B11F;
    JSR.W (.pointers,X)                                                  ;90B120;
    JSR.W DeleteProjectileIfTooFarOffScreen                              ;90B123;
    RTS                                                                  ;90B126;


.pointers:
    dw WaveBeamBlockCollision_Vertical                                   ;90B127;
    dw WaveBeamBlockCollision_Diagonal                                   ;90B129;
    dw WaveBeamBlockCollision_Horizontal                                 ;90B12B;
    dw WaveBeamBlockCollision_Diagonal                                   ;90B12D;
    dw WaveBeamBlockCollision_Vertical                                   ;90B12F;
    dw WaveBeamBlockCollision_Vertical                                   ;90B131;
    dw WaveBeamBlockCollision_Diagonal                                   ;90B133;
    dw WaveBeamBlockCollision_Horizontal                                 ;90B135;
    dw WaveBeamBlockCollision_Diagonal                                   ;90B137;
    dw WaveBeamBlockCollision_Vertical                                   ;90B139;

WaveBeamBlockCollision_Vertical:
    LDX.W $0DDE                                                          ;90B13B;
    JSL.L MoveBeamVertically_WaveBeam                                    ;90B13E;
    RTS                                                                  ;90B142;


WaveBeamBlockCollision_Diagonal:
    LDX.W $0DDE                                                          ;90B143;
    JSL.L MoveBeamHorizontally_WaveBeam                                  ;90B146;
    BCS .return                                                          ;90B14A;
    JSL.L MoveBeamVertically_WaveBeam                                    ;90B14C;

.return:
    RTS                                                                  ;90B150;


WaveBeamBlockCollision_Horizontal:
    LDX.W $0DDE                                                          ;90B151;
    JSL.L MoveBeamHorizontally_WaveBeam                                  ;90B154;
    RTS                                                                  ;90B158;


ProjectilePreInstruction_HyperBeam:
    LDA.W $0C04,X                                                        ;90B159;
    AND.W #$00F0                                                         ;90B15C;
    BEQ .gotoShared                                                      ;90B15F;
    JSL.L Clear_Projectile                                               ;90B161;
    RTS                                                                  ;90B165;


.gotoShared:
    JMP.W WaveBeamSharedPreInstruction                                   ;90B166;

RTS_90B169:
    RTS                                                                  ;90B169;


DeleteProjectileIfTooFarOffScreen:
    LDX.W $0DDE                                                          ;90B16A;
    LDA.W $0B64,X                                                        ;90B16D;
    SEC                                                                  ;90B170;
    SBC.W $0911                                                          ;90B171;
    CMP.W #$FFC0                                                         ;90B174;
    BMI .delete                                                          ;90B177;
    CMP.W #$0140                                                         ;90B179;
    BMI .verticalCheck                                                   ;90B17C;

.delete:
    JSL.L Clear_Projectile                                               ;90B17E;
    SEC                                                                  ;90B182;
    RTS                                                                  ;90B183;


.verticalCheck:
    LDA.W $0B78,X                                                        ;90B184;
    SEC                                                                  ;90B187;
    SBC.W $0915                                                          ;90B188;
    CMP.W #$FFC0                                                         ;90B18B;
    BMI .delete                                                          ;90B18E;
    CMP.W #$0140                                                         ;90B190;
    BPL .delete                                                          ;90B193;
    CLC                                                                  ;90B195;
    RTS                                                                  ;90B196;


InitializeBeamVelocities:
    PHP                                                                  ;90B197;
    PHB                                                                  ;90B198;
    PHK                                                                  ;90B199;
    PLB                                                                  ;90B19A;
    REP #$30                                                             ;90B19B;
    LDX.B $14                                                            ;90B19D;
    LDA.W $0C18,X                                                        ;90B19F;
    AND.W #$000F                                                         ;90B1A2;
    ASL A                                                                ;90B1A5;
    ASL A                                                                ;90B1A6;
    TAY                                                                  ;90B1A7;
    LDA.W $0C04,X                                                        ;90B1A8;
    AND.W #$000F                                                         ;90B1AB;
    ASL A                                                                ;90B1AE;
    TAX                                                                  ;90B1AF;
    JMP.W (.pointers,X)                                                  ;90B1B0;


.notDiagonal:
    LDA.W BeamSpeeds_Horizontal_Vertical,Y                               ;90B1B3;
    STA.B $16                                                            ;90B1B6;
    BRA .merge                                                           ;90B1B8;


.diagonal:
    LDA.W BeamSpeeds_Diagonal,Y                                          ;90B1BA;
    STA.B $16                                                            ;90B1BD;

.merge:
    LDX.B $14                                                            ;90B1BF;
    STX.B $12                                                            ;90B1C1;
    JSR.W InitializeProjectileVelocities                                 ;90B1C3;
    PLB                                                                  ;90B1C6;
    PLP                                                                  ;90B1C7;
    RTL                                                                  ;90B1C8;


.pointers:
    dw .notDiagonal                                                      ;90B1C9;
    dw .diagonal                                                         ;90B1CB;
    dw .notDiagonal                                                      ;90B1CD;
    dw .diagonal                                                         ;90B1CF;
    dw .notDiagonal                                                      ;90B1D1;
    dw .notDiagonal                                                      ;90B1D3;
    dw .diagonal                                                         ;90B1D5;
    dw .notDiagonal                                                      ;90B1D7;
    dw .diagonal                                                         ;90B1D9;
    dw .notDiagonal                                                      ;90B1DB;

InitializeMissileVelocities:
    PHP                                                                  ;90B1DD;
    REP #$30                                                             ;90B1DE;
    LDX.B $14                                                            ;90B1E0;
    LDA.W $0C18,X                                                        ;90B1E2;
    AND.W #$000F                                                         ;90B1E5;
    ASL A                                                                ;90B1E8;
    TAY                                                                  ;90B1E9;
    STZ.B $16                                                            ;90B1EA;
    STX.B $12                                                            ;90B1EC;
    JSR.W InitializeProjectileVelocities                                 ;90B1EE;
    PLP                                                                  ;90B1F1;
    RTS                                                                  ;90B1F2;


InitializeProjectileVelocities:
;; Parameters:
;;     X: Projectile index
;;     $12: Projectile index
;;     $16: Base speed

; There's a repeating issue in all of the subroutines jumped to from here with how "distance Samus moved" is loaded
; These are the variables:
;     $0DAA.$0DAC: Distance Samus moved left
;     $0DAE.$0DB0: Distance Samus moved right
;     $0DB2.$0DB4: Distance Samus moved up
;     $0DB6.$0DB8: Distance Samus moved down

; Notice that the most significant word is stored before the least significant
; Generally speaking, it's more useful to extend little endian ordering and store the least significant word first
; If distance Samus moved left was $0DAC.$0DAA, then loading $0DAB would give (distance Samus moved left) * 100h,
; disregarding the high byte of $0DAC and low byte of $0DAA, which is a common trick used a lot in SM

; It looks like they tried to apply this trick without realising the ordering of the words isn't suitable
; E.g. $0DA9 is loaded into A for (distance Samus moved left) * 100h, which does load the low byte of $0DAA into the high byte of A,
; but also loads garbage (namely the high byte of $0DA8) into the low byte of A

; TODO: add these pesky garbage low bytes to the below calculations
    STZ.W $0B8C,X                                                        ;90B1F3;
    STZ.W $0BA0,X                                                        ;90B1F6;
    LDA.W $0C04,X                                                        ;90B1F9;
    AND.W #$000F                                                         ;90B1FC;
    ASL A                                                                ;90B1FF;
    TAX                                                                  ;90B200;
    JMP.W (.pointers,X)                                                  ;90B201;


.pointers:
    dw InitializeProjectileVelocities_Up                                 ;90B204;
    dw InitializeProjectileVelocities_UpRight                            ;90B206;
    dw InitializeProjectileVelocities_Right                              ;90B208;
    dw InitializeProjectileVelocities_DownRight                          ;90B20A;
    dw InitializeProjectileVelocities_Down                               ;90B20C;
    dw InitializeProjectileVelocities_Down                               ;90B20E;
    dw InitializeProjectileVelocities_DownLeft                           ;90B210;
    dw InitializeProjectileVelocities_Left                               ;90B212;
    dw InitializeProjectileVelocities_UpLeft                             ;90B214;
    dw InitializeProjectileVelocities_Up                                 ;90B216;

InitializeProjectileVelocities_Up:
    LDX.B $12                                                            ;90B218;
    LDA.W $0DB1                                                          ;90B21A;
    BIT.W #$FF00                                                         ;90B21D;
    BNE .left                                                            ;90B220;
    STZ.B $12                                                            ;90B222;
    BRA +                                                                ;90B224;


.left:
    LSR A                                                                ;90B226;
    LSR A                                                                ;90B227;
    ORA.W #$C000                                                         ;90B228;
    STA.B $12                                                            ;90B22B;

  + LDA.B $16                                                            ;90B22D;
    EOR.W #$FFFF                                                         ;90B22F;
    INC A                                                                ;90B232;
    CLC                                                                  ;90B233;
    ADC.B $12                                                            ;90B234;
    STA.W $0BF0,X                                                        ;90B236;
    STZ.W $0BDC,X                                                        ;90B239;
    RTS                                                                  ;90B23C;


InitializeProjectileVelocities_UpRight:
    LDX.B $12                                                            ;90B23D;
    LDA.W $0DB1                                                          ;90B23F;
    BIT.W #$FF00                                                         ;90B242;
    BNE .left                                                            ;90B245;
    STZ.B $12                                                            ;90B247;
    BRA +                                                                ;90B249;


.left:
    LSR A                                                                ;90B24B;
    LSR A                                                                ;90B24C;
    ORA.W #$C000                                                         ;90B24D;
    STA.B $12                                                            ;90B250;

  + LDA.B $16                                                            ;90B252;
    EOR.W #$FFFF                                                         ;90B254;
    INC A                                                                ;90B257;
    CLC                                                                  ;90B258;
    ADC.B $12                                                            ;90B259;
    STA.W $0BF0,X                                                        ;90B25B;
    LDA.B $16                                                            ;90B25E;
    CLC                                                                  ;90B260;
    ADC.W $0DAD                                                          ;90B261;
    STA.W $0BDC,X                                                        ;90B264;
    RTS                                                                  ;90B267;


InitializeProjectileVelocities_Right:
    LDX.B $12                                                            ;90B268;
    STZ.W $0BF0,X                                                        ;90B26A;
    LDA.B $16                                                            ;90B26D;
    CLC                                                                  ;90B26F;
    ADC.W $0DAD                                                          ;90B270;
    STA.W $0BDC,X                                                        ;90B273;
    RTS                                                                  ;90B276;


InitializeProjectileVelocities_DownRight:
    LDX.B $12                                                            ;90B277;
    LDA.B $16                                                            ;90B279;
    CLC                                                                  ;90B27B;
    ADC.W $0DB5                                                          ;90B27C;
    STA.W $0BF0,X                                                        ;90B27F;
    LDA.B $16                                                            ;90B282;
    CLC                                                                  ;90B284;
    ADC.W $0DAD                                                          ;90B285;
    STA.W $0BDC,X                                                        ;90B288;
    RTS                                                                  ;90B28B;


InitializeProjectileVelocities_Down:
    LDX.B $12                                                            ;90B28C;
    LDA.B $16                                                            ;90B28E;
    CLC                                                                  ;90B290;
    ADC.W $0DB5                                                          ;90B291;
    STA.W $0BF0,X                                                        ;90B294;
    STZ.W $0BDC,X                                                        ;90B297;
    RTS                                                                  ;90B29A;


InitializeProjectileVelocities_DownLeft:
    LDX.B $12                                                            ;90B29B;
    LDA.B $16                                                            ;90B29D;
    CLC                                                                  ;90B29F;
    ADC.W $0DB5                                                          ;90B2A0;
    STA.W $0BF0,X                                                        ;90B2A3;
    LDA.B $16                                                            ;90B2A6;
    EOR.W #$FFFF                                                         ;90B2A8;
    INC A                                                                ;90B2AB;
    CLC                                                                  ;90B2AC;
    ADC.W $0DA9                                                          ;90B2AD;
    STA.W $0BDC,X                                                        ;90B2B0;
    RTS                                                                  ;90B2B3;


InitializeProjectileVelocities_Left:
    LDX.B $12                                                            ;90B2B4;
    STZ.W $0BF0,X                                                        ;90B2B6;
    LDA.B $16                                                            ;90B2B9;
    EOR.W #$FFFF                                                         ;90B2BB;
    INC A                                                                ;90B2BE;
    CLC                                                                  ;90B2BF;
    ADC.W $0DA9                                                          ;90B2C0;
    STA.W $0BDC,X                                                        ;90B2C3;
    RTS                                                                  ;90B2C6;


InitializeProjectileVelocities_UpLeft:
    LDX.B $12                                                            ;90B2C7;
    LDA.W $0DB1                                                          ;90B2C9;
    BIT.W #$FF00                                                         ;90B2CC;
    BNE .left                                                            ;90B2CF;
    STZ.B $12                                                            ;90B2D1;
    BRA +                                                                ;90B2D3;


.left:
    LSR A                                                                ;90B2D5;
    LSR A                                                                ;90B2D6;
    ORA.W #$C000                                                         ;90B2D7;
    STA.B $12                                                            ;90B2DA;

  + LDA.B $16                                                            ;90B2DC;
    EOR.W #$FFFF                                                         ;90B2DE;
    INC A                                                                ;90B2E1;
    CLC                                                                  ;90B2E2;
    ADC.B $12                                                            ;90B2E3;
    STA.W $0BF0,X                                                        ;90B2E5;
    LDA.B $16                                                            ;90B2E8;
    EOR.W #$FFFF                                                         ;90B2EA;
    INC A                                                                ;90B2ED;
    CLC                                                                  ;90B2EE;
    ADC.W $0DA9                                                          ;90B2EF;
    STA.W $0BDC,X                                                        ;90B2F2;
    RTS                                                                  ;90B2F5;


AccelerateMissile:
    PHP                                                                  ;90B2F6;
    REP #$30                                                             ;90B2F7;
    PHX                                                                  ;90B2F9;
    PHY                                                                  ;90B2FA;
    LDA.W $0C7C,X                                                        ;90B2FB;
    AND.W #$FF00                                                         ;90B2FE;
    BNE .initialized                                                     ;90B301;
    LDA.W $0C7C,X                                                        ;90B303;
    CLC                                                                  ;90B306;
    ADC.W MissileInitializedBitset                                       ;90B307;
    STA.W $0C7C,X                                                        ;90B30A;
    AND.W #$FF00                                                         ;90B30D;
    BEQ .return                                                          ;90B310;
    LDA.W $0C7C,X                                                        ;90B312;
    STA.B $16                                                            ;90B315;
    STX.B $12                                                            ;90B317;
    JSR.W InitializeProjectileVelocities                                 ;90B319;
    LDA.W $0C18,X                                                        ;90B31C;
    BIT.W #$0200                                                         ;90B31F;
    BEQ .return                                                          ;90B322;
    JSR.W Spawn_SuperMissileLink                                         ;90B324;
    BRA .return                                                          ;90B327;


.initialized:
    LDA.W $0C04,X                                                        ;90B329;
    AND.W #$000F                                                         ;90B32C;
    ASL A                                                                ;90B32F;
    ASL A                                                                ;90B330;
    STA.B $12                                                            ;90B331;
    LDA.W $0C19,X                                                        ;90B333;
    AND.W #$000F                                                         ;90B336;
    BIT.W #$0002                                                         ;90B339;
    BNE .superMissile                                                    ;90B33C;
    LDA.W #MissileAccelerations                                          ;90B33E;
    CLC                                                                  ;90B341;
    ADC.B $12                                                            ;90B342;
    TAY                                                                  ;90B344;
    BRA +                                                                ;90B345;


.superMissile:
    LDA.W #SuperMissileAccelerations                                     ;90B347;
    CLC                                                                  ;90B34A;
    ADC.B $12                                                            ;90B34B;
    TAY                                                                  ;90B34D;

  + LDA.W $0BDC,X                                                        ;90B34E;
    CLC                                                                  ;90B351;
    ADC.W $0000,Y                                                        ;90B352;
    STA.W $0BDC,X                                                        ;90B355;
    LDA.W $0BF0,X                                                        ;90B358;
    CLC                                                                  ;90B35B;
    ADC.W $0002,Y                                                        ;90B35C;
    STA.W $0BF0,X                                                        ;90B35F;

.return:
    PLY                                                                  ;90B362;
    PLX                                                                  ;90B363;
    PLP                                                                  ;90B364;
    RTS                                                                  ;90B365;


SuperMissileLink:
    LDX.W $0DDE                                                          ;90B366;
    LDA.W $0C18,X                                                        ;90B369;
    AND.W #$0F00                                                         ;90B36C;
    CMP.W #$0200                                                         ;90B36F;
    BEQ .superMissile                                                    ;90B372;
    CMP.W #$0800                                                         ;90B374;
    BEQ .superMissile                                                    ;90B377;
    RTS                                                                  ;90B379;


.superMissile:
    LDA.W $0C7C,X                                                        ;90B37A;
    BIT.W #$FF00                                                         ;90B37D;
    BNE .initialized                                                     ;90B380;
    RTS                                                                  ;90B382;


.initialized:
    AND.W #$00FF                                                         ;90B383;
    TAY                                                                  ;90B386;
    LDA.W $0BF0,X                                                        ;90B387;
    BPL +                                                                ;90B38A;
    EOR.W #$FFFF                                                         ;90B38C;
    INC A                                                                ;90B38F;

  + AND.W #$FF00                                                         ;90B390;
    CMP.W #$0B00                                                         ;90B393;
    BMI .slow                                                            ;90B396;
    XBA                                                                  ;90B398;
    SEC                                                                  ;90B399;
    SBC.W #$000A                                                         ;90B39A;
    STA.B $12                                                            ;90B39D;
    LDA.W $0BF0,X                                                        ;90B39F;
    BMI .upwards                                                         ;90B3A2;
    PHX                                                                  ;90B3A4;
    LDA.W $0B78,X                                                        ;90B3A5;
    SEC                                                                  ;90B3A8;
    SBC.B $12                                                            ;90B3A9;
    STA.W $0B78,Y                                                        ;90B3AB;
    TYX                                                                  ;90B3AE;
    STY.W $0DDE                                                          ;90B3AF;
    JSL.L MoveMissileVertically                                          ;90B3B2;
    TXY                                                                  ;90B3B6;
    PLX                                                                  ;90B3B7;
    STX.W $0DDE                                                          ;90B3B8;
    LDA.W $0C18,X                                                        ;90B3BB;
    AND.W #$0F00                                                         ;90B3BE;
    CMP.W #$0800                                                         ;90B3C1;
    BNE .return                                                          ;90B3C4;
    TYX                                                                  ;90B3C6;
    JSL.L Clear_Projectile                                               ;90B3C7;

.return:
    RTS                                                                  ;90B3CB;


.upwards:
    PHX                                                                  ;90B3CC;
    LDA.W $0B78,X                                                        ;90B3CD;
    CLC                                                                  ;90B3D0;
    ADC.B $12                                                            ;90B3D1;
    STA.W $0B78,Y                                                        ;90B3D3;
    TYX                                                                  ;90B3D6;
    STY.W $0DDE                                                          ;90B3D7;
    JSL.L MoveMissileVertically                                          ;90B3DA;
    TXY                                                                  ;90B3DE;
    PLX                                                                  ;90B3DF;
    STX.W $0DDE                                                          ;90B3E0;
    LDA.W $0C18,X                                                        ;90B3E3;
    AND.W #$0F00                                                         ;90B3E6;
    CMP.W #$0800                                                         ;90B3E9;
    BNE .return                                                          ;90B3EC;

.explosion:
    TYX                                                                  ;90B3EE;
    JSL.L Clear_Projectile                                               ;90B3EF;
    RTS                                                                  ;90B3F3;


.slow:
    LDA.W $0C18,X                                                        ;90B3F4;
    AND.W #$0F00                                                         ;90B3F7;
    CMP.W #$0800                                                         ;90B3FA;
    BEQ .explosion                                                       ;90B3FD;
    LDA.W $0B78,X                                                        ;90B3FF;
    STA.W $0B78,Y                                                        ;90B402;
    RTS                                                                  ;90B405;


SuperMissileLink_HorizontalBlockCollisionDetection:
    LDX.W $0DDE                                                          ;90B406;
    LDA.W $0C18,X                                                        ;90B409;
    AND.W #$0F00                                                         ;90B40C;
    CMP.W #$0200                                                         ;90B40F;
    BEQ .superMissile                                                    ;90B412;
    CMP.W #$0800                                                         ;90B414;
    BEQ .superMissile                                                    ;90B417;
    RTS                                                                  ;90B419;


.superMissile:
    LDA.W $0C7C,X                                                        ;90B41A;
    BIT.W #$FF00                                                         ;90B41D;
    BNE .initialized                                                     ;90B420;
    RTS                                                                  ;90B422;


.initialized:
    AND.W #$00FF                                                         ;90B423;
    TAY                                                                  ;90B426;
    LDA.W $0BDC,X                                                        ;90B427;
    BPL +                                                                ;90B42A;
    EOR.W #$FFFF                                                         ;90B42C;
    INC A                                                                ;90B42F;

  + AND.W #$FF00                                                         ;90B430;
    CMP.W #$0B00                                                         ;90B433;
    BMI .slow                                                            ;90B436;
    XBA                                                                  ;90B438;
    SEC                                                                  ;90B439;
    SBC.W #$000A                                                         ;90B43A;
    STA.B $12                                                            ;90B43D;
    LDA.W $0BDC,X                                                        ;90B43F;
    BMI .leftwards                                                       ;90B442;
    PHX                                                                  ;90B444;
    LDA.W $0B64,X                                                        ;90B445;
    SEC                                                                  ;90B448;
    SBC.B $12                                                            ;90B449;
    STA.W $0B64,Y                                                        ;90B44B;
    TYX                                                                  ;90B44E;
    STY.W $0DDE                                                          ;90B44F;
    JSL.L MoveMissileHorizontally                                        ;90B452;
    TXY                                                                  ;90B456;
    PLX                                                                  ;90B457;
    STX.W $0DDE                                                          ;90B458;
    LDA.W $0C18,X                                                        ;90B45B;
    AND.W #$0F00                                                         ;90B45E;
    CMP.W #$0800                                                         ;90B461;
    BNE .return                                                          ;90B464;
    TYX                                                                  ;90B466;
    JSL.L Clear_Projectile                                               ;90B467;

.return:
    RTS                                                                  ;90B46B;


.leftwards:
    PHX                                                                  ;90B46C;
    LDA.W $0B64,X                                                        ;90B46D;
    CLC                                                                  ;90B470;
    ADC.B $12                                                            ;90B471;
    STA.W $0B64,Y                                                        ;90B473;
    TYX                                                                  ;90B476;
    STY.W $0DDE                                                          ;90B477;
    JSL.L MoveMissileHorizontally                                        ;90B47A;
    TXY                                                                  ;90B47E;
    PLX                                                                  ;90B47F;
    STX.W $0DDE                                                          ;90B480;
    LDA.W $0C18,X                                                        ;90B483;
    AND.W #$0F00                                                         ;90B486;
    CMP.W #$0800                                                         ;90B489;
    BNE .return                                                          ;90B48C;

.explosion:
    TYX                                                                  ;90B48E;
    JSL.L Clear_Projectile                                               ;90B48F;
    RTS                                                                  ;90B493;


.slow:
    LDA.W $0C18,X                                                        ;90B494;
    AND.W #$0F00                                                         ;90B497;
    CMP.W #$0800                                                         ;90B49A;
    BEQ .explosion                                                       ;90B49D;
    LDA.W $0B64,X                                                        ;90B49F;
    STA.W $0B64,Y                                                        ;90B4A2;
    RTS                                                                  ;90B4A5;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_ClearLinkedSuperMissileIfSuperMissileExplosion_90B4A6:
    PHP                                                                  ;90B4A6;
    REP #$30                                                             ;90B4A7;
    LDA.W $0C7C,X                                                        ;90B4A9;
    BIT.W #$FF00                                                         ;90B4AC;
    BNE .initialized                                                     ;90B4AF;
    PLP                                                                  ;90B4B1;
    RTL                                                                  ;90B4B2;


.initialized:
    AND.W #$00FF                                                         ;90B4B3;
    TAY                                                                  ;90B4B6;
    LDA.W $0C18,X                                                        ;90B4B7;
    AND.W #$0F00                                                         ;90B4BA;
    CMP.W #$0800                                                         ;90B4BD;
    BNE .return                                                          ;90B4C0;
    TYX                                                                  ;90B4C2;
    JSL.L Clear_Projectile                                               ;90B4C3;

.return:
    PLP                                                                  ;90B4C7;
    RTL                                                                  ;90B4C8;
endif ; !FEATURE_KEEP_UNREFERENCED


InstList_BeamTrail_Empty:
    dw $0000                                                             ;90B4C9;

InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam:                        ;90B4CB;
    dw $0001,$2C38
    dw $0001,$2C38
    dw $0001,$2C38
    dw $0001,$2C38
    dw $0001,$2C39
    dw $0001,$2C39
    dw Instruction_MoveLeftProjectileTrailDownOnePixel
    dw $0001,$2C39
    dw $0001,$2C39
    dw Instruction_MoveLeftProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveLeftProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveLeftProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveLeftProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveLeftProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveLeftProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveLeftProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveLeftProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveLeftProjectileTrailDownOnePixel
    dw $0004,$2C3B
    dw $0000

Instruction_MoveLeftProjectileTrailDownOnePixel:
    LDA.W $D778,Y                                                        ;90B525;
    INC A                                                                ;90B528;
    STA.W $D778,Y                                                        ;90B529;
    RTS                                                                  ;90B52C;


InstList_RightBeamTrail_SomeIceBeams:                                    ;90B52D;
    dw $0001,$2C38
    dw $0001,$2C38
    dw $0001,$2C38
    dw $0001,$2C38
    dw $0001,$2C39
    dw $0001,$2C39
    dw Instruction_MoveRightProjectileTrailDownOnePixel
    dw $0001,$2C39
    dw $0001,$2C39
    dw Instruction_MoveRightProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveRightProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveRightProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveRightProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveRightProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveRightProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveRightProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveRightProjectileTrailDownOnePixel
    dw $0001,$2C3A
    dw Instruction_MoveRightProjectileTrailDownOnePixel
    dw $0004,$2C3B
    dw $0000

Instruction_MoveRightProjectileTrailDownOnePixel:
    LDA.W $D79C,Y                                                        ;90B587;
    INC A                                                                ;90B58A;
    STA.W $D79C,Y                                                        ;90B58B;
    RTS                                                                  ;90B58E;


InstList_BeamTrail_WaveBeam:                                             ;90B58F;
    dw $0004,$2A3C
    dw $0004,$2A3D
    dw $0004,$2A3E
    dw $0004,$2A3F
    dw $0000

InstList_BeamTrail_SuperMissile:                                         ;90B5A1;
    dw $0004,$2A48
    dw $0004,$2A49
    dw $0004,$2A4A
    dw $0004,$2A4B
    dw $0000

Instruction_MoveLeftProjectileTrailUpOnePixel:
    LDA.W $D778,Y                                                        ;90B5B3;
    DEC A                                                                ;90B5B6;
    STA.W $D778,Y                                                        ;90B5B7;
    RTS                                                                  ;90B5BA;


ProjectileTrail_InstListPointers_Left:
    dw InstList_BeamTrail_Empty                                          ;90B5BB;  0: Uncharged power
    dw InstList_BeamTrail_WaveBeam                                       ;90B5BD; *1: Uncharged wave
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5BF; *2: Uncharged ice
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5C1; *3: Uncharged ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B5C3;  4: Uncharged spazer
    dw InstList_BeamTrail_Empty                                          ;90B5C5;  5: Uncharged spazer + wave
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5C7; *6: Uncharged spazer + ice
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5C9; *7: Uncharged spazer + ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B5CB;  8: Uncharged plasma
    dw InstList_BeamTrail_Empty                                          ;90B5CD;  9: Uncharged plasma + wave
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5CF; *Ah: Uncharged plasma + ice
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5D1; *Bh: Uncharged plasma + ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B5D3;  Ch
    dw InstList_BeamTrail_Empty                                          ;90B5D5;  Dh
    dw InstList_BeamTrail_Empty                                          ;90B5D7;  Eh
    dw InstList_BeamTrail_Empty                                          ;90B5D9;  Fh
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5DB; *10h: Charged power
    dw InstList_BeamTrail_WaveBeam                                       ;90B5DD; *11h: Charged wave
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5DF; *12h: Charged ice
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5E1; *13h: Charged ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B5E3;  14h: Charged spazer
    dw InstList_BeamTrail_Empty                                          ;90B5E5;  15h: Charged spazer + wave
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5E7; *16h: Charged spazer + ice
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5E9; *17h: Charged spazer + ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B5EB;  18h: Charged plasma
    dw InstList_BeamTrail_Empty                                          ;90B5ED;  19h: Charged plasma + wave
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5EF; *1Ah: Charged plasma + ice
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B5F1; *1Bh: Charged plasma + ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B5F3;  1Ch
    dw InstList_BeamTrail_Empty                                          ;90B5F5;  1Dh
    dw InstList_BeamTrail_Empty                                          ;90B5F7;  1Eh
    dw InstList_BeamTrail_Empty                                          ;90B5F9;  1Fh
    dw InstList_BeamTrail_SuperMissile                                   ;90B5FB; *20h: Missile
    dw InstList_BeamTrail_SuperMissile                                   ;90B5FD; *21h: Super missile
    dw InstList_BeamTrail_Empty                                          ;90B5FF;  22h
    dw InstList_BeamTrail_Empty                                          ;90B601;  23h
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B603; *24h: Spazer SBA trail
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B605; *25h
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B607; *26h

ProjectileTrail_InstListPointers_Right:
    dw InstList_BeamTrail_Empty                                          ;90B609;  0: Uncharged power
    dw InstList_BeamTrail_Empty                                          ;90B60B;  1: Uncharged wave
    dw InstList_BeamTrail_Empty                                          ;90B60D;  2: Uncharged ice
    dw InstList_BeamTrail_Empty                                          ;90B60F;  3: Uncharged ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B611;  4: Uncharged spazer
    dw InstList_BeamTrail_Empty                                          ;90B613;  5: Uncharged spazer + wave
    dw InstList_RightBeamTrail_SomeIceBeams                              ;90B615; *6: Uncharged spazer + ice
    dw InstList_RightBeamTrail_SomeIceBeams                              ;90B617; *7: Uncharged spazer + ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B619;  8: Uncharged plasma
    dw InstList_BeamTrail_Empty                                          ;90B61B;  9: Uncharged plasma + wave
    dw InstList_BeamTrail_Empty                                          ;90B61D;  Ah: Uncharged plasma + ice
    dw InstList_RightBeamTrail_SomeIceBeams                              ;90B61F; *Bh: Uncharged plasma + ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B621;  Ch
    dw InstList_BeamTrail_Empty                                          ;90B623;  Dh
    dw InstList_BeamTrail_Empty                                          ;90B625;  Eh
    dw InstList_BeamTrail_Empty                                          ;90B627;  Fh
    dw InstList_BeamTrail_Empty                                          ;90B629;  10h: Charged power
    dw InstList_BeamTrail_WaveBeam                                       ;90B62B; *11h: Charged wave
    dw InstList_BeamTrail_Empty                                          ;90B62D;  12h: Charged ice
    dw InstList_RightBeamTrail_SomeIceBeams                              ;90B62F; *13h: Charged ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B631;  14h: Charged spazer
    dw InstList_BeamTrail_Empty                                          ;90B633;  15h: Charged spazer + wave
    dw InstList_RightBeamTrail_SomeIceBeams                              ;90B635; *16h: Charged spazer + ice
    dw InstList_RightBeamTrail_SomeIceBeams                              ;90B637; *17h: Charged spazer + ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B639;  18h: Charged plasma
    dw InstList_BeamTrail_Empty                                          ;90B63B;  19h: Charged plasma + wave
    dw InstList_BeamTrail_Empty                                          ;90B63D;  1Ah: Charged plasma + ice
    dw InstList_RightBeamTrail_SomeIceBeams                              ;90B63F; *1Bh: Charged plasma + ice + wave
    dw InstList_BeamTrail_Empty                                          ;90B641;  1Ch
    dw InstList_BeamTrail_Empty                                          ;90B643;  1Dh
    dw InstList_BeamTrail_Empty                                          ;90B645;  1Eh
    dw InstList_BeamTrail_Empty                                          ;90B647;  1Fh
    dw InstList_BeamTrail_Empty                                          ;90B649;  20h: Missile
    dw InstList_BeamTrail_Empty                                          ;90B64B;  21h: Super missile
    dw InstList_BeamTrail_Empty                                          ;90B64D;  22h
    dw InstList_BeamTrail_Empty                                          ;90B64F;  23h
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B651; *24h: Spazer SBA trail
    dw InstList_RightBeamTrail_SomeIceBeams                              ;90B653; *25h
    dw InstList_LeftBeamTrail_IceBeams_ChargedPowerBeam                  ;90B655; *26h

Spawn_ProjectileTrail:
    PHB                                                                  ;90B657;
    LDA.W $0C18,X                                                        ;90B658;
    BIT.W #$0F00                                                         ;90B65B;
    BNE .notBeam                                                         ;90B65E;
    AND.W #$003F                                                         ;90B660;
    BRA +                                                                ;90B663;


.notBeam:
    XBA                                                                  ;90B665;
    AND.W #$000F                                                         ;90B666;
    CMP.W #$0003                                                         ;90B669;
    BCS .returnCarrySet                                                  ;90B66C;
    CLC                                                                  ;90B66E;
    ADC.W #$001F                                                         ;90B66F;

  + ASL A                                                                ;90B672;
    TAX                                                                  ;90B673;
    PEA.W $7E7E                                                          ;90B674;
    PLB                                                                  ;90B677;
    PLB                                                                  ;90B678;
    LDY.W #$0022                                                         ;90B679;

.loop:
    LDA.W $D658,Y                                                        ;90B67C;
    BEQ .found                                                           ;90B67F;
    DEY                                                                  ;90B681;
    DEY                                                                  ;90B682;
    BPL .loop                                                            ;90B683;

.returnCarrySet:
    PLB                                                                  ;90B685;
    SEC                                                                  ;90B686;
    RTL                                                                  ;90B687;


.found:
    LDA.W #$0001                                                         ;90B688;
    STA.W $D658,Y                                                        ;90B68B;
    STA.W $D67C,Y                                                        ;90B68E;
    LDA.L ProjectileTrail_InstListPointers_Left,X                        ;90B691;
    STA.W $D6A0,Y                                                        ;90B695;
    LDA.L ProjectileTrail_InstListPointers_Right,X                       ;90B698;
    STA.W $D6C4,Y                                                        ;90B69C;
    LDX.W $0DDE                                                          ;90B69F;
    JSL.L SetProjectileTrailPosition                                     ;90B6A2;
    PLB                                                                  ;90B6A6;
    CLC                                                                  ;90B6A7;
    RTL                                                                  ;90B6A8;


HandleProjectileTrails:
    PHB                                                                  ;90B6A9;
    PEA.W $7E7E                                                          ;90B6AA;
    PLB                                                                  ;90B6AD;
    PLB                                                                  ;90B6AE;
    LDA.W $0A78                                                          ;90B6AF;
    BEQ .notFrozen                                                       ;90B6B2;
    JMP.W .timeIsFrozen                                                  ;90B6B4;


.notFrozen:
    LDY.W #$0022                                                         ;90B6B7;

.main:
    LDA.W $D658,Y                                                        ;90B6BA;
    BEQ .leftTrailEnd                                                    ;90B6BD;
    DEC A                                                                ;90B6BF;
    STA.W $D658,Y                                                        ;90B6C0;
    BNE .leftInstructionsEnd                                             ;90B6C3;
    LDX.W $D6A0,Y                                                        ;90B6C5;

.loopLeft:
    LDA.L $900000,X                                                      ;90B6C8;
    BPL .notAPointer                                                     ;90B6CC;
    INX                                                                  ;90B6CE;
    INX                                                                  ;90B6CF;
    PEA.W .loopLeft-1                                                    ;90B6D0;
    STA.B $12                                                            ;90B6D3;
    JMP.W ($0012)                                                        ;90B6D5;


.notAPointer:
    STA.W $D658,Y                                                        ;90B6D8;
    BEQ .leftTrailEnd                                                    ;90B6DB;
    LDA.L $900002,X                                                      ;90B6DD;
    STA.W $D6E8,Y                                                        ;90B6E1;
    TXA                                                                  ;90B6E4;
    CLC                                                                  ;90B6E5;
    ADC.W #$0004                                                         ;90B6E6;
    STA.W $D6A0,Y                                                        ;90B6E9;

.leftInstructionsEnd:
    LDX.W $0590                                                          ;90B6EC;
    CPX.W #$0200                                                         ;90B6EF;
    BPL .leftTrailEnd                                                    ;90B6F2;
    LDA.W $D730,Y                                                        ;90B6F4;
    SEC                                                                  ;90B6F7;
    SBC.W $0911                                                          ;90B6F8;
    BIT.W #$FF00                                                         ;90B6FB;
    BNE .leftTrailEnd                                                    ;90B6FE;
    STA.W $0370,X                                                        ;90B700;
    LDA.W $D778,Y                                                        ;90B703;
    SEC                                                                  ;90B706;
    SBC.W $0915                                                          ;90B707;
    BIT.W #$FF00                                                         ;90B70A;
    BNE .leftTrailEnd                                                    ;90B70D;
    STA.W $0371,X                                                        ;90B70F;
    LDA.W $D6E8,Y                                                        ;90B712;
    STA.W $0372,X                                                        ;90B715;
    TXA                                                                  ;90B718;
    CLC                                                                  ;90B719;
    ADC.W #$0004                                                         ;90B71A;
    STA.W $0590                                                          ;90B71D;

.leftTrailEnd:
    LDA.W $D67C,Y                                                        ;90B720;
    BEQ .rightTrailEnd                                                   ;90B723;
    DEC A                                                                ;90B725;
    STA.W $D67C,Y                                                        ;90B726;
    BNE .rightInstructionsEnd                                            ;90B729;
    LDX.W $D6C4,Y                                                        ;90B72B;

.loop:
    LDA.L $900000,X                                                      ;90B72E;
    BPL .notPointer                                                      ;90B732;
    INX                                                                  ;90B734;
    INX                                                                  ;90B735;
    PEA.W .loop-1                                                        ;90B736;
    STA.B $12                                                            ;90B739;
    JMP.W ($0012)                                                        ;90B73B;


.notPointer:
    STA.W $D67C,Y                                                        ;90B73E;
    BEQ .rightTrailEnd                                                   ;90B741;
    LDA.L $900002,X                                                      ;90B743;
    STA.W $D70C,Y                                                        ;90B747;
    TXA                                                                  ;90B74A;
    CLC                                                                  ;90B74B;
    ADC.W #$0004                                                         ;90B74C;
    STA.W $D6C4,Y                                                        ;90B74F;

.rightInstructionsEnd:
    LDX.W $0590                                                          ;90B752;
    CPX.W #$0200                                                         ;90B755;
    BPL .rightTrailEnd                                                   ;90B758;
    LDA.W $D754,Y                                                        ;90B75A;
    SEC                                                                  ;90B75D;
    SBC.W $0911                                                          ;90B75E;
    BIT.W #$FF00                                                         ;90B761;
    BNE .rightTrailEnd                                                   ;90B764;
    STA.W $0370,X                                                        ;90B766;
    LDA.W $D79C,Y                                                        ;90B769;
    SEC                                                                  ;90B76C;
    SBC.W $0915                                                          ;90B76D;
    BIT.W #$FF00                                                         ;90B770;
    BNE .rightTrailEnd                                                   ;90B773;
    STA.W $0371,X                                                        ;90B775;
    LDA.W $D70C,Y                                                        ;90B778;
    STA.W $0372,X                                                        ;90B77B;
    TXA                                                                  ;90B77E;
    CLC                                                                  ;90B77F;
    ADC.W #$0004                                                         ;90B780;
    STA.W $0590                                                          ;90B783;

.rightTrailEnd:
    DEY                                                                  ;90B786;
    DEY                                                                  ;90B787;
    BMI .return                                                          ;90B788;
    JMP.W .main                                                          ;90B78A;


.return:
    PLB                                                                  ;90B78D;
    RTL                                                                  ;90B78E;


.timeIsFrozen:
    LDY.W #$0022                                                         ;90B78F;

.loopTimeIsFrozen:
    LDX.W $0590                                                          ;90B792;
    CPX.W #$0200                                                         ;90B795;
    BPL +                                                                ;90B798;
    LDA.W $D658,Y                                                        ;90B79A;
    BEQ +                                                                ;90B79D;
    LDA.W $D730,Y                                                        ;90B79F;
    SEC                                                                  ;90B7A2;
    SBC.W $0911                                                          ;90B7A3;
    BIT.W #$FF00                                                         ;90B7A6;
    BNE +                                                                ;90B7A9;
    STA.W $0370,X                                                        ;90B7AB;
    LDA.W $D778,Y                                                        ;90B7AE;
    SEC                                                                  ;90B7B1;
    SBC.W $0915                                                          ;90B7B2;
    BIT.W #$FF00                                                         ;90B7B5;
    BNE +                                                                ;90B7B8;
    STA.W $0371,X                                                        ;90B7BA;
    LDA.W $D6E8,Y                                                        ;90B7BD;
    STA.W $0372,X                                                        ;90B7C0;
    TXA                                                                  ;90B7C3;
    CLC                                                                  ;90B7C4;
    ADC.W #$0004                                                         ;90B7C5;
    STA.W $0590                                                          ;90B7C8;

  + LDX.W $0590                                                          ;90B7CB;
    CPX.W #$0200                                                         ;90B7CE;
    BPL .next                                                            ;90B7D1;
    LDA.W $D67C,Y                                                        ;90B7D3;
    BEQ .next                                                            ;90B7D6;
    LDA.W $D754,Y                                                        ;90B7D8;
    SEC                                                                  ;90B7DB;
    SBC.W $0911                                                          ;90B7DC;
    BIT.W #$FF00                                                         ;90B7DF;
    BNE .next                                                            ;90B7E2;
    STA.W $0370,X                                                        ;90B7E4;
    LDA.W $D79C,Y                                                        ;90B7E7;
    SEC                                                                  ;90B7EA;
    SBC.W $0915                                                          ;90B7EB;
    BIT.W #$FF00                                                         ;90B7EE;
    BNE .next                                                            ;90B7F1;
    STA.W $0371,X                                                        ;90B7F3;
    LDA.W $D70C,Y                                                        ;90B7F6;
    STA.W $0372,X                                                        ;90B7F9;
    TXA                                                                  ;90B7FC;
    CLC                                                                  ;90B7FD;
    ADC.W #$0004                                                         ;90B7FE;
    STA.W $0590                                                          ;90B801;

.next:
    DEY                                                                  ;90B804;
    DEY                                                                  ;90B805;
    BMI .returnFrozen                                                    ;90B806;
    JMP.W .loopTimeIsFrozen                                              ;90B808;


.returnFrozen:
    PLB                                                                  ;90B80B;
    RTL                                                                  ;90B80C;


HUDSelectionHandler_Nothing_PowerBombs:
    PHP                                                                  ;90B80D;
    REP #$30                                                             ;90B80E;
    LDA.W $0CD0                                                          ;90B810;
    STA.W $0DC2                                                          ;90B813;
    LDA.W $0A76                                                          ;90B816;
    BNE +                                                                ;90B819;
    LDA.W $09A6                                                          ;90B81B;
    BIT.W #$1000                                                         ;90B81E;
    BNE .charge                                                          ;90B821;

  + LDA.B $8B                                                            ;90B823;
    AND.W $09B2                                                          ;90B825;
    BEQ .return                                                          ;90B828;
    JMP.W Fire_Uncharge_Beam                                             ;90B82A;


.charge:
    LDA.W $0B5E                                                          ;90B82D;
    BEQ +                                                                ;90B830;
    LDA.W $0CD0                                                          ;90B832;
    CMP.W #$003C                                                         ;90B835;
    BPL .releaseChargedBeam                                              ;90B838;
    BRA .releaseUnchargedBeam                                            ;90B83A;


  + LDA.B $8B                                                            ;90B83C;
    AND.W $09B2                                                          ;90B83E;
    BEQ +                                                                ;90B841;
    LDA.W $0CD0                                                          ;90B843;
    CMP.W #$0078                                                         ;90B846;
    BPL .SBA                                                             ;90B849;
    INC A                                                                ;90B84B;
    STA.W $0CD0                                                          ;90B84C;
    CMP.W #$0001                                                         ;90B84F;
    BNE .return                                                          ;90B852;
    JSR.W ClearFlareAnimationState                                       ;90B854;
    JMP.W Fire_Uncharge_Beam                                             ;90B857;


  + LDA.W $0CD0                                                          ;90B85A;
    BEQ .return                                                          ;90B85D;
    CMP.W #$003C                                                         ;90B85F;
    BPL .releaseChargedBeam                                              ;90B862;

.releaseUnchargedBeam:
    STZ.W $0CD0                                                          ;90B864;
    JSR.W ClearFlareAnimationState                                       ;90B867;
    JMP.W Fire_Uncharge_Beam                                             ;90B86A;


.releaseChargedBeam:
    STZ.W $0CD0                                                          ;90B86D;
    JSR.W ClearFlareAnimationState                                       ;90B870;
    JMP.W FireChargeBeam                                                 ;90B873;


.SBA:
    JSR.W FireSBA                                                        ;90B876;
    BCC .return                                                          ;90B879;
    STZ.W $0CD0                                                          ;90B87B;
    JSR.W ClearFlareAnimationState                                       ;90B87E;
    JSL.L LoadSamusSuitPalette                                           ;90B881;

.return:
    PLP                                                                  ;90B885;
    RTS                                                                  ;90B886;


Fire_Uncharge_Beam:
    LDA.W $0A76                                                          ;90B887;
    BEQ .notHyper                                                        ;90B88A;
    JMP.W FireHyperBeam                                                  ;90B88C;


.notHyper:
    JSR.W Check_if_Samus_Can_Fire_Beam                                   ;90B88F;
    BCS .fire                                                            ;90B892;

.cannotFire:
    LDA.W $0DC2                                                          ;90B894;
    CMP.W #$0010                                                         ;90B897;
    BPL +                                                                ;90B89A;
    PLP                                                                  ;90B89C;
    RTS                                                                  ;90B89D;


  + STZ.W $0DC0                                                          ;90B89E;
    LDA.W #$0002                                                         ;90B8A1;
    JSL.L QueueSound                                                     ;90B8A4;
    PLP                                                                  ;90B8A8;
    RTS                                                                  ;90B8A9;


.fire:
    LDX.W #$0000                                                         ;90B8AA;

.loop:
    LDA.W $0C2C,X                                                        ;90B8AD;
    BEQ .zeroDamage                                                      ;90B8B0;
    INX                                                                  ;90B8B2;
    INX                                                                  ;90B8B3;
    CPX.W #$000A                                                         ;90B8B4;
    BMI .loop                                                            ;90B8B7;
    DEX                                                                  ;90B8B9;
    DEX                                                                  ;90B8BA;

.zeroDamage:
    STX.B $14                                                            ;90B8BB;
    JSR.W InitializeProjectilePositionDirection                          ;90B8BD;
    BCS .cannotFire                                                      ;90B8C0;
    LDA.W #$000A                                                         ;90B8C2;
    STA.W $18AC                                                          ;90B8C5;
    LDX.B $14                                                            ;90B8C8;
    LDA.W #$0004                                                         ;90B8CA;
    STA.W $0C90,X                                                        ;90B8CD;
    LDA.W $09A6                                                          ;90B8D0;
    ORA.W #$8000                                                         ;90B8D3;
    STA.W $0C18,X                                                        ;90B8D6;
    AND.W #$000F                                                         ;90B8D9;
    ASL A                                                                ;90B8DC;
    TAY                                                                  ;90B8DD;
    LDA.W ProjectileSFX_Uncharged,Y                                      ;90B8DE;
    JSL.L QueueSound                                                     ;90B8E1;
    STZ.W $0DC0                                                          ;90B8E5;
    JSL.L InitializeProjectile                                           ;90B8E8;
    LDA.W $09A6                                                          ;90B8EC;
    BIT.W #$1000                                                         ;90B8EF;
    BNE .chargeEquippedOrPreviouslyPressedShot                           ;90B8F2;
    LDA.B $8F                                                            ;90B8F4;
    BIT.W $09B2                                                          ;90B8F6;
    BNE .chargeEquippedOrPreviouslyPressedShot                           ;90B8F9;
    LDA.W $0E00                                                          ;90B8FB;
    BIT.W $09B2                                                          ;90B8FE;
    BNE .chargeEquippedOrPreviouslyPressedShot                           ;90B901;
    LDA.W $0C18,X                                                        ;90B903;
    PHA                                                                  ;90B906;
    AND.W #$003F                                                         ;90B907;
    TAY                                                                  ;90B90A;
    LDA.W BeamAutoFireCooldowns,Y                                        ;90B90B;
    AND.W #$00FF                                                         ;90B90E;
    STA.W $0CCC                                                          ;90B911;
    PLA                                                                  ;90B914;
    BIT.W #$0001                                                         ;90B915;
    BNE .waveBeam                                                        ;90B918;
    BRA +                                                                ;90B91A;


.chargeEquippedOrPreviouslyPressedShot:
    LDA.W $0C18,X                                                        ;90B91C;
    PHA                                                                  ;90B91F;
    AND.W #$003F                                                         ;90B920;
    TAY                                                                  ;90B923;
    LDA.W ProjectileCooldowns_Uncharged,Y                                ;90B924;
    AND.W #$00FF                                                         ;90B927;
    STA.W $0CCC                                                          ;90B92A;
    PLA                                                                  ;90B92D;
    BIT.W #$0001                                                         ;90B92E;
    BNE .waveBeam                                                        ;90B931;

  + STZ.W $0BDC,X                                                        ;90B933;
    STZ.W $0BF0,X                                                        ;90B936;
    STX.W $0DDE                                                          ;90B939;
    JSR.W InitialBeamBlockCollision_NoWaveBeam                           ;90B93C;
    LDX.W $0DDE                                                          ;90B93F;
    LDA.W $0C18,X                                                        ;90B942;
    BIT.W #$0F00                                                         ;90B945;
    BNE .return                                                          ;90B948;
    BRA .merge                                                           ;90B94A;


.waveBeam:
    STZ.W $0BDC,X                                                        ;90B94C;
    STZ.W $0BF0,X                                                        ;90B94F;
    STX.W $0DDE                                                          ;90B952;
    JSR.W InitialWaveBeamBlockCollision                                  ;90B955;

.merge:
    STX.B $14                                                            ;90B958;
    LDA.W $0C18,X                                                        ;90B95A;
    AND.W #$000F                                                         ;90B95D;
    ASL A                                                                ;90B960;
    TAY                                                                  ;90B961;
    LDA.W .pointers,Y                                                    ;90B962;
    STA.W $0C68,X                                                        ;90B965;
    JSL.L InitializeBeamVelocities                                       ;90B968;

.return:
    PLP                                                                  ;90B96C;
    RTS                                                                  ;90B96D;


.pointers:
; Projectile pre-instruction pointers
    dw Beam_NoWaveBeam                                                   ;90B96E; 0: Power
    dw ProjectilePreInstruction_Beam_UnchargedIceWave                    ;90B970; 1: Wave
    dw Beam_NoWaveBeam                                                   ;90B972; 2: Ice
    dw ProjectilePreInstruction_Beam_UnchargedIceWave                    ;90B974; 3: Ice + wave
    dw Beam_NoWaveBeam                                                   ;90B976; 4: Spazer
    dw ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave      ;90B978; 5: Spazer + wave
    dw Beam_NoWaveBeam                                                   ;90B97A; 6: Spazer + ice
    dw ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave      ;90B97C; 7: Spazer + ice + wave
    dw Beam_NoWaveBeam                                                   ;90B97E; 8: Plasma
    dw ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave      ;90B980; 9: Plasma + wave
    dw Beam_NoWaveBeam                                                   ;90B982; Ah: Plasma + ice
    dw ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave      ;90B984; Bh: Plasma + ice + wave

FireChargeBeam:
    JSR.W Check_if_Samus_Can_Fire_Beam                                   ;90B986;
    BCS .fire                                                            ;90B989;

.cannotFire:
    LDA.W $0DC2                                                          ;90B98B;
    CMP.W #$0010                                                         ;90B98E;
    BPL +                                                                ;90B991;
    PLP                                                                  ;90B993;
    RTS                                                                  ;90B994;


  + STZ.W $0DC0                                                          ;90B995;
    LDA.W #$0002                                                         ;90B998;
    JSL.L QueueSound                                                     ;90B99B;
    PLP                                                                  ;90B99F;
    RTS                                                                  ;90B9A0;


.fire:
    LDX.W #$0000                                                         ;90B9A1;

.loop:
    LDA.W $0C2C,X                                                        ;90B9A4;
    BEQ .zeroDamage                                                      ;90B9A7;
    INX                                                                  ;90B9A9;
    INX                                                                  ;90B9AA;
    CPX.W #$000A                                                         ;90B9AB;
    BMI .loop                                                            ;90B9AE;
    DEX                                                                  ;90B9B0;
    DEX                                                                  ;90B9B1;

.zeroDamage:
    STX.B $14                                                            ;90B9B2;
    JSR.W InitializeProjectilePositionDirection                          ;90B9B4;
    BCS .cannotFire                                                      ;90B9B7;
    LDA.W #$000A                                                         ;90B9B9;
    STA.W $18AC                                                          ;90B9BC;
    LDX.B $14                                                            ;90B9BF;
    LDA.W #$0004                                                         ;90B9C1;
    STA.W $0C90,X                                                        ;90B9C4;
    LDA.W $09A6                                                          ;90B9C7;
    AND.W #$100F                                                         ;90B9CA;
    ORA.W #$8010                                                         ;90B9CD;
    STA.W $0C18,X                                                        ;90B9D0;
    AND.W #$000F                                                         ;90B9D3;
    ASL A                                                                ;90B9D6;
    TAY                                                                  ;90B9D7;
    LDA.W ProjectileSFX_Charged,Y                                        ;90B9D8;
    JSL.L QueueSound                                                     ;90B9DB;
    STZ.W $0DC0                                                          ;90B9DF;
    JSL.L InitializeProjectile                                           ;90B9E2;
    LDA.W $0C18,X                                                        ;90B9E6;
    PHA                                                                  ;90B9E9;
    AND.W #$003F                                                         ;90B9EA;
    TAY                                                                  ;90B9ED;
    LDA.W ProjectileCooldowns_Uncharged,Y                                ;90B9EE;
    AND.W #$00FF                                                         ;90B9F1;
    STA.W $0CCC                                                          ;90B9F4;
    PLA                                                                  ;90B9F7;
    BIT.W #$0001                                                         ;90B9F8;
    BNE .waveBeam                                                        ;90B9FB;
    STZ.W $0BDC,X                                                        ;90B9FD;
    STZ.W $0BF0,X                                                        ;90BA00;
    STX.W $0DDE                                                          ;90BA03;
    JSR.W InitialBeamBlockCollision_NoWaveBeam                           ;90BA06;
    LDX.W $0DDE                                                          ;90BA09;
    LDA.W $0C18,X                                                        ;90BA0C;
    BIT.W #$0F00                                                         ;90BA0F;
    BNE .return                                                          ;90BA12;
    BRA +                                                                ;90BA14;


.waveBeam:
    STZ.W $0BDC,X                                                        ;90BA16;
    STZ.W $0BF0,X                                                        ;90BA19;
    STX.W $0DDE                                                          ;90BA1C;
    JSR.W InitialWaveBeamBlockCollision                                  ;90BA1F;

  + STX.B $14                                                            ;90BA22;
    LDA.W $0C18,X                                                        ;90BA24;
    AND.W #$000F                                                         ;90BA27;
    ASL A                                                                ;90BA2A;
    TAY                                                                  ;90BA2B;
    LDA.W SamusBeamPreInstructionPointers,Y                              ;90BA2C;
    STA.W $0C68,X                                                        ;90BA2F;
    JSL.L InitializeBeamVelocities                                       ;90BA32;

.return:
    LDA.W #$0004                                                         ;90BA36;
    STA.W $0B18                                                          ;90BA39;
    PLP                                                                  ;90BA3C;
    RTS                                                                  ;90BA3D;


SamusBeamPreInstructionPointers:
; Projectile pre-instruction pointers
    dw Beam_NoWaveBeam                                                   ;90BA3E; 0: Power
    dw ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave      ;90BA40; 1: Wave
    dw Beam_NoWaveBeam                                                   ;90BA42; 2: Ice
    dw ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave      ;90BA44; 3: Ice + wave
    dw Beam_NoWaveBeam                                                   ;90BA46; 4: Spazer
    dw ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave      ;90BA48; 5: Spazer + wave
    dw Beam_NoWaveBeam                                                   ;90BA4A; 6: Spazer + ice
    dw ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave      ;90BA4C; 7: Spazer + ice + wave
    dw Beam_NoWaveBeam                                                   ;90BA4E; 8: Plasma
    dw ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave      ;90BA50; 9: Plasma + wave
    dw Beam_NoWaveBeam                                                   ;90BA52; Ah: Plasma + ice
    dw ProjectilePreInstruction_Beam_WavePlasmaSpazer_ChargeIceWave      ;90BA54; Bh: Plasma + ice + wave

InitializeProjectilePositionDirection:
    LDA.W $0A1C                                                          ;90BA56;
    ASL A                                                                ;90BA59;
    ASL A                                                                ;90BA5A;
    ASL A                                                                ;90BA5B;
    TAX                                                                  ;90BA5C;
    LDY.B $14                                                            ;90BA5D;
    LDA.W $0B5E                                                          ;90BA5F;
    BEQ .zero                                                            ;90BA62;
    AND.W #$00FF                                                         ;90BA64;
    STZ.W $0B5E                                                          ;90BA67;
    BRA .initialize                                                      ;90BA6A;


.zero:
    LDA.L PoseDefinitions_directionShotsFired,X                          ;90BA6C;
    AND.W #$00FF                                                         ;90BA70;
    BIT.W #$00F0                                                         ;90BA73;
    BEQ .initialize                                                      ;90BA76;
    CMP.W #$0010                                                         ;90BA78;
    BEQ .unused                                                          ;90BA7B;
    JMP.W .returnNoFire                                                  ;90BA7D;


.initialize:
    STA.W $0C04,Y                                                        ;90BA80;
    LDA.L PoseDefinitions_YOffset,X                                      ;90BA83;
    AND.W #$00FF                                                         ;90BA87;
    STA.B $16                                                            ;90BA8A;
    LDA.W $0C04,Y                                                        ;90BA8C;
    AND.W #$000F                                                         ;90BA8F;
    ASL A                                                                ;90BA92;
    TAX                                                                  ;90BA93;
    LDA.W $0A1C                                                          ;90BA94;
    CMP.W #$0075                                                         ;90BA97;
    BEQ .notMoonwalk                                                     ;90BA9A;
    CMP.W #$0076                                                         ;90BA9C;
    BEQ .notMoonwalk                                                     ;90BA9F;
    LDA.W $0A1F                                                          ;90BAA1;
    AND.W #$00FF                                                         ;90BAA4;
    CMP.W #$0001                                                         ;90BAA7;
    BEQ .notMoonwalk                                                     ;90BAAA;
    LDA.W ProjectileOriginOffsetsByDirection_ProjectileX_Default,X       ;90BAAC;
    CLC                                                                  ;90BAAF;
    ADC.W $0AF6                                                          ;90BAB0;
    STA.W $0B64,Y                                                        ;90BAB3;
    LDA.W ProjectileOriginOffsetsByDirection_ProjectileY_Default,X       ;90BAB6;
    CLC                                                                  ;90BAB9;
    ADC.W $0AFA                                                          ;90BABA;
    SEC                                                                  ;90BABD;
    SBC.B $16                                                            ;90BABE;
    STA.W $0B78,Y                                                        ;90BAC0;
    CLC                                                                  ;90BAC3;
    RTS                                                                  ;90BAC4;


.notMoonwalk:
    LDA.W ProjectileOriginOffsetsByDirection_ProjX_Moonwalk_Running,X    ;90BAC5;
    CLC                                                                  ;90BAC8;
    ADC.W $0AF6                                                          ;90BAC9;
    STA.W $0B64,Y                                                        ;90BACC;
    LDA.W ProjectileOriginOffsetsByDirection_ProjY_Moonwalk_Running,X    ;90BACF;
    CLC                                                                  ;90BAD2;
    ADC.W $0AFA                                                          ;90BAD3;
    SEC                                                                  ;90BAD6;
    SBC.B $16                                                            ;90BAD7;
    STA.W $0B78,Y                                                        ;90BAD9;
    CLC                                                                  ;90BADC;
    RTS                                                                  ;90BADD;


.unused:
    PHX                                                                  ;90BADE;
    LDA.W $0A24                                                          ;90BADF;
    ASL A                                                                ;90BAE2;
    ASL A                                                                ;90BAE3;
    ASL A                                                                ;90BAE4;
    TAX                                                                  ;90BAE5;
    LDA.L PoseDefinitions_directionShotsFired,X                          ;90BAE6;
    BIT.W #$00F0                                                         ;90BAEA;
    BNE +                                                                ;90BAED;
    AND.W #$00FF                                                         ;90BAEF;
    PLX                                                                  ;90BAF2;
    JMP.W .initialize                                                    ;90BAF3;


  + PLX                                                                  ;90BAF6;

.returnNoFire:
    DEC.W $0CCE                                                          ;90BAF7;
    SEC                                                                  ;90BAFA;
    RTS                                                                  ;90BAFB;


HandleChargingBeamGraphicsAudio:
    PHP                                                                  ;90BAFC;
    REP #$30                                                             ;90BAFD;
    LDA.W $0A76                                                          ;90BAFF;
    BNE .gotoHyperBeam                                                   ;90BB02;
    LDA.W $0CD0                                                          ;90BB04;
    BEQ .returnUpper                                                     ;90BB07;
    BPL .chargeBeam                                                      ;90BB09;

.returnUpper:
    PLP                                                                  ;90BB0B;
    RTS                                                                  ;90BB0C;


.gotoHyperBeam:
    JMP.W .hyperBeam                                                     ;90BB0D;


.chargeBeam:
    CMP.W #$0001                                                         ;90BB10;
    BNE .notOne                                                          ;90BB13;
    STZ.W $0CD6                                                          ;90BB15;
    STZ.W $0CD8                                                          ;90BB18;
    STZ.W $0CDA                                                          ;90BB1B;
    LDA.W #$0003                                                         ;90BB1E;
    STA.W $0CDC                                                          ;90BB21;
    LDA.W #$0005                                                         ;90BB24;
    STA.W $0CDE                                                          ;90BB27;
    LDA.W #$0004                                                         ;90BB2A;
    STA.W $0CE0                                                          ;90BB2D;

.notOne:
    LDA.W $0CD0                                                          ;90BB30;
    CMP.W #$000F                                                         ;90BB33;
    BPL +                                                                ;90BB36;
    JMP.W .returnMiddle                                                  ;90BB38;


  + CMP.W #$0010                                                         ;90BB3B;
    BNE .zeroIndex                                                       ;90BB3E;
    LDA.W #$0008                                                         ;90BB40;
    JSL.L QueueSound_Lib1_Max9                                           ;90BB43;

.zeroIndex:
    LDX.W #$0000                                                         ;90BB47;

.loopChargeBeam:
    SEP #$20                                                             ;90BB4A;
    LDA.B #$90                                                           ;90BB4C;
    STA.B $02                                                            ;90BB4E;
    REP #$20                                                             ;90BB50;
    LDA.W $0CDC,X                                                        ;90BB52;
    DEC A                                                                ;90BB55;
    STA.W $0CDC,X                                                        ;90BB56;
    BPL .chargeBeamAnimationUpdateEnd                                    ;90BB59;
    LDA.W $0CD6,X                                                        ;90BB5B;
    INC A                                                                ;90BB5E;
    STA.W $0CD6,X                                                        ;90BB5F;
    TAY                                                                  ;90BB62;
    LDA.W FlareAnimationDelays_Pointers,X                                ;90BB63;
    STA.B $00                                                            ;90BB66;
    LDA.B [$00],Y                                                        ;90BB68;
    AND.W #$00FF                                                         ;90BB6A;
    CMP.W #$00FF                                                         ;90BB6D;
    BEQ .restart                                                         ;90BB70;
    CMP.W #$00FE                                                         ;90BB72;
    BEQ .goBack                                                          ;90BB75;
    BRA .merge                                                           ;90BB77;


.restart:
    LDA.W #$0000                                                         ;90BB79;
    STA.W $0CD6,X                                                        ;90BB7C;
    TAY                                                                  ;90BB7F;
    BRA .merge                                                           ;90BB80;


.goBack:
    INY                                                                  ;90BB82;
    LDA.B [$00],Y                                                        ;90BB83;
    AND.W #$00FF                                                         ;90BB85;
    STA.B $12                                                            ;90BB88;
    LDA.W $0CD6,X                                                        ;90BB8A;
    SEC                                                                  ;90BB8D;
    SBC.B $12                                                            ;90BB8E;
    STA.W $0CD6,X                                                        ;90BB90;
    TAY                                                                  ;90BB93;

.merge:
    LDA.B [$00],Y                                                        ;90BB94;
    AND.W #$00FF                                                         ;90BB96;
    STA.W $0CDC,X                                                        ;90BB99;

.chargeBeamAnimationUpdateEnd:
    PHX                                                                  ;90BB9C;
    JSR.W DrawFlareAnimationComponent                                    ;90BB9D;
    PLX                                                                  ;90BBA0;
    LDA.W $0CD0                                                          ;90BBA1;
    CMP.W #$001E                                                         ;90BBA4;
    BMI .returnMiddle                                                    ;90BBA7;
    INX                                                                  ;90BBA9;
    INX                                                                  ;90BBAA;
    CPX.W #$0006                                                         ;90BBAB;
    BMI .loopChargeBeam                                                  ;90BBAE;

.returnMiddle:
    PLP                                                                  ;90BBB0;
    RTS                                                                  ;90BBB1;


.hyperBeam:
    LDA.W $0CD0                                                          ;90BBB2;
    BEQ .returnLower                                                     ;90BBB5;
    LDX.W #$0004                                                         ;90BBB7;

.loopHyperBeam:
    DEC.W $0CDC,X                                                        ;90BBBA;
    BEQ .timerExpired                                                    ;90BBBD;
    BPL .hyperBeamAnimationUpdateEnd                                     ;90BBBF;

.timerExpired:
    DEC.W $0CD6,X                                                        ;90BBC1;
    BNE .nonZeroAnimationFrame                                           ;90BBC4;
    CPX.W #$0004                                                         ;90BBC6;
    BNE .hyperBeamAnimationUpdateEnd                                     ;90BBC9;
    STZ.W $0CD0                                                          ;90BBCB;
    BRA .hyperBeamAnimationUpdateEnd                                     ;90BBCE;


.nonZeroAnimationFrame:
    LDA.W #$0003                                                         ;90BBD0;
    STA.W $0CDC,X                                                        ;90BBD3;

.hyperBeamAnimationUpdateEnd:
    PHX                                                                  ;90BBD6;
    JSR.W DrawFlareAnimationComponent                                    ;90BBD7;
    PLX                                                                  ;90BBDA;
    DEX                                                                  ;90BBDB;
    DEX                                                                  ;90BBDC;
    BPL .loopHyperBeam                                                   ;90BBDD;

.returnLower:
    PLP                                                                  ;90BBDF;
    RTS                                                                  ;90BBE0;


DrawFlareAnimationComponent:
    PHP                                                                  ;90BBE1;
    SEP #$20                                                             ;90BBE2;
    LDA.B #$93                                                           ;90BBE4;
    STA.B $02                                                            ;90BBE6;
    REP #$30                                                             ;90BBE8;
    LDA.W $0CD6,X                                                        ;90BBEA;
    AND.W #$00FF                                                         ;90BBED;
    STA.B $12                                                            ;90BBF0;
    LDA.W $0A1E                                                          ;90BBF2;
    AND.W #$00FF                                                         ;90BBF5;
    CMP.W #$0004                                                         ;90BBF8;
    BEQ .facingLeft                                                      ;90BBFB;
    LDA.L FlareSpritemapTable_IndexOffsets_facingRight,X                 ;90BBFD;
    CLC                                                                  ;90BC01;
    ADC.B $12                                                            ;90BC02;
    STA.B $16                                                            ;90BC04;
    BRA +                                                                ;90BC06;


.facingLeft:
    LDA.L FlareSpritemapTable_IndexOffsets_facingLeft,X                  ;90BC08;
    CLC                                                                  ;90BC0C;
    ADC.B $12                                                            ;90BC0D;
    STA.B $16                                                            ;90BC0F;

  + LDA.W $0A1C                                                          ;90BC11;
    ASL A                                                                ;90BC14;
    ASL A                                                                ;90BC15;
    ASL A                                                                ;90BC16;
    TAX                                                                  ;90BC17;
    LDA.L PoseDefinitions_YOffset,X                                      ;90BC18;
    AND.W #$00FF                                                         ;90BC1C;
    STA.B $18                                                            ;90BC1F;
    LDA.L PoseDefinitions_directionShotsFired,X                          ;90BC21;
    AND.W #$00FF                                                         ;90BC25;
    CMP.W #$00FF                                                         ;90BC28;
    BEQ .returnUpper                                                     ;90BC2B;
    CMP.W #$0010                                                         ;90BC2D;
    BEQ .returnUpper                                                     ;90BC30;
    CMP.W #$0010                                                         ;90BC32;
    BNE .continue                                                        ;90BC35;

.returnUpper:
    PLP                                                                  ;90BC37;
    RTS                                                                  ;90BC38;


.continue:
    AND.W #$000F                                                         ;90BC39;
    ASL A                                                                ;90BC3C;
    TAX                                                                  ;90BC3D;
    LDA.W $093F                                                          ;90BC3E;
    BPL .notRotating                                                     ;90BC41;
    LDA.W $0AF6                                                          ;90BC43;
    STA.W $0D82                                                          ;90BC46;
    LDA.W $0AFA                                                          ;90BC49;
    STA.W $0D84                                                          ;90BC4C;
    JSL.L Calculate_SamusPosition_InRotatingElevatorRoom                 ;90BC4F;

.notRotating:
    LDA.W $0A1F                                                          ;90BC53;
    AND.W #$00FF                                                         ;90BC56;
    CMP.W #$0001                                                         ;90BC59;
    BEQ .running                                                         ;90BC5C;
    LDA.W ProjectileOriginOffsetsByDirection_FlareX_Default,X            ;90BC5E;
    CLC                                                                  ;90BC61;
    ADC.W $0AF6                                                          ;90BC62;
    SEC                                                                  ;90BC65;
    SBC.W $0911                                                          ;90BC66;
    STA.B $14                                                            ;90BC69;
    LDA.W ProjectileOriginOffsetsByDirection_FlareY_Default,X            ;90BC6B;
    CLC                                                                  ;90BC6E;
    ADC.W $0AFA                                                          ;90BC6F;
    SEC                                                                  ;90BC72;
    SBC.B $18                                                            ;90BC73;
    SBC.W $0915                                                          ;90BC75;
    STA.B $12                                                            ;90BC78;
    BRA +                                                                ;90BC7A;


.running:
    LDA.W ProjectileOriginOffsetsByDirection_FlareX_Running,X            ;90BC7C;
    CLC                                                                  ;90BC7F;
    ADC.W $0AF6                                                          ;90BC80;
    SEC                                                                  ;90BC83;
    SBC.W $0911                                                          ;90BC84;
    STA.B $14                                                            ;90BC87;
    LDA.W ProjectileOriginOffsetsByDirection_FlareY_Running,X            ;90BC89;
    CLC                                                                  ;90BC8C;
    ADC.W $0AFA                                                          ;90BC8D;
    SEC                                                                  ;90BC90;
    SBC.B $18                                                            ;90BC91;
    SBC.W $0915                                                          ;90BC93;
    STA.B $12                                                            ;90BC96;

  + AND.W #$FF00                                                         ;90BC98;
    BNE .greaterThanEqualTo100                                           ;90BC9B;
    LDA.B $16                                                            ;90BC9D;
    JSL.L AddSpritemapFrom_93A1A1_TableToOAM                             ;90BC9F;
    BRA +                                                                ;90BCA3;


.greaterThanEqualTo100:
    LDA.B $16                                                            ;90BCA5;
    JSL.L RTL_818AB7                                                     ;90BCA7;

  + LDA.W $093F                                                          ;90BCAB;
    BPL .returnLower                                                     ;90BCAE;
    LDA.W $0D84                                                          ;90BCB0;
    STA.W $0AFA                                                          ;90BCB3;
    LDA.W $0D82                                                          ;90BCB6;
    STA.W $0AF6                                                          ;90BCB9;

.returnLower:
    PLP                                                                  ;90BCBC;
    RTS                                                                  ;90BCBD;


ClearFlareAnimationState:
    STZ.W $0CD6                                                          ;90BCBE;
    STZ.W $0CD8                                                          ;90BCC1;
    STZ.W $0CDA                                                          ;90BCC4;
    STZ.W $0CDC                                                          ;90BCC7;
    STZ.W $0CDE                                                          ;90BCCA;
    STZ.W $0CE0                                                          ;90BCCD;
    RTS                                                                  ;90BCD0;


FireHyperBeam:
    JSR.W Check_if_Samus_Can_Fire_Beam                                   ;90BCD1;
    BCS .canFire                                                         ;90BCD4;
    PLP                                                                  ;90BCD6;
    RTS                                                                  ;90BCD7;


.canFire:
    LDX.W #$0000                                                         ;90BCD8;

.loop:
    LDA.W $0C2C,X                                                        ;90BCDB;
    BEQ .zeroDamage                                                      ;90BCDE;
    INX                                                                  ;90BCE0;
    INX                                                                  ;90BCE1;
    CPX.W #$000A                                                         ;90BCE2;
    BMI .loop                                                            ;90BCE5;
    DEX                                                                  ;90BCE7;
    DEX                                                                  ;90BCE8;

.zeroDamage:
    STX.B $14                                                            ;90BCE9;
    JSR.W InitializeProjectilePositionDirection                          ;90BCEB;
    BCS .return                                                          ;90BCEE;
    LDA.W #$000A                                                         ;90BCF0;
    STA.W $18AC                                                          ;90BCF3;
    LDX.B $14                                                            ;90BCF6;
    PHX                                                                  ;90BCF8;
    LDA.W #$9018                                                         ;90BCF9; Projectile type = live charged plasma beam | 1000h
    STA.W $0C18,X                                                        ;90BCFC;
    AND.W #$000F                                                         ;90BCFF;
    ASL A                                                                ;90BD02;
    TAX                                                                  ;90BD03;
    LDA.W ProjectileSFX_Charged,X                                        ;90BD04;
    JSL.L QueueSound                                                     ;90BD07;
    STZ.W $0DC0                                                          ;90BD0B;
    PLX                                                                  ;90BD0E;
    JSL.L InitializeProjectile                                           ;90BD0F;
    STZ.W $0BDC,X                                                        ;90BD13;
    STZ.W $0BF0,X                                                        ;90BD16;
    STX.W $0DDE                                                          ;90BD19;
    JSR.W InitialWaveBeamBlockCollision                                  ;90BD1C;
    LDX.W $0DDE                                                          ;90BD1F;
    LDA.L HyperBeamDamageValue                                           ;90BD22;
    STA.W $0C2C,X                                                        ;90BD26;
    LDA.W #ProjectilePreInstruction_HyperBeam                            ;90BD29;
    STA.W $0C68,X                                                        ;90BD2C;
    STX.B $14                                                            ;90BD2F;
    JSL.L InitializeBeamVelocities                                       ;90BD31;
    LDA.W #$0015                                                         ;90BD35;
    STA.W $0CCC                                                          ;90BD38;
    LDA.W #$8014                                                         ;90BD3B; Charged shot glow timer = 20
    STA.W $0B18                                                          ;90BD3E;
    LDA.W #$001D                                                         ;90BD41;
    STA.W $0CD6                                                          ;90BD44;
    LDA.W #$0005                                                         ;90BD47;
    STA.W $0CD8                                                          ;90BD4A;
    STA.W $0CDA                                                          ;90BD4D;
    LDA.W #$0003                                                         ;90BD50;
    STA.W $0CDC                                                          ;90BD53;
    STA.W $0CDE                                                          ;90BD56;
    STA.W $0CE0                                                          ;90BD59;
    LDA.W #$8000                                                         ;90BD5C;
    STA.W $0CD0                                                          ;90BD5F;

.return:
    PLP                                                                  ;90BD62;
    RTS                                                                  ;90BD63;


InitialBeamBlockCollision_NoWaveBeam:
    PHX                                                                  ;90BD64;
    LDA.W $0C04,X                                                        ;90BD65;
    AND.W #$000F                                                         ;90BD68;
    ASL A                                                                ;90BD6B;
    TAX                                                                  ;90BD6C;
    JSR.W (.pointers,X)                                                  ;90BD6D;
    PLX                                                                  ;90BD70;
    RTS                                                                  ;90BD71;


.pointers:
    dw InitialBeamBlockCollision_NoWaveBeam_Vertical                     ;90BD72; 0: Up, facing right
    dw InitialBeamBlockCollision_NoWaveBeam_Diagonal                     ;90BD74; 1: Up-right
    dw InitialBeamBlockCollision_NoWaveBeam_Right                        ;90BD76; 2: Right
    dw InitialBeamBlockCollision_NoWaveBeam_Diagonal                     ;90BD78; 3: Down-right
    dw InitialBeamBlockCollision_NoWaveBeam_Vertical                     ;90BD7A; 4: Down, facing right
    dw InitialBeamBlockCollision_NoWaveBeam_Vertical                     ;90BD7C; 5: Down, facing left
    dw InitialBeamBlockCollision_NoWaveBeam_Diagonal                     ;90BD7E; 6: Down-left
    dw InitialBeamBlockCollision_NoWaveBeam_Left                         ;90BD80; 7: Left
    dw InitialBeamBlockCollision_NoWaveBeam_Diagonal                     ;90BD82; 8: Up-left
    dw InitialBeamBlockCollision_NoWaveBeam_Vertical                     ;90BD84; 9: Up, facing left

InitialBeamBlockCollision_NoWaveBeam_Vertical:
    LDX.W $0DDE                                                          ;90BD86;
    JSL.L MoveBeamVertically_NoWaveBeam                                  ;90BD89;
    RTS                                                                  ;90BD8D;


InitialBeamBlockCollision_NoWaveBeam_Diagonal:
    LDX.W $0DDE                                                          ;90BD8E;
    JSL.L MoveBeamHorizontally_NoWaveBeam                                ;90BD91;
    BCS .return                                                          ;90BD95;
    JSL.L MoveBeamVertically_NoWaveBeam                                  ;90BD97;

.return:
    RTS                                                                  ;90BD9B;


InitialBeamBlockCollision_NoWaveBeam_Right:
    LDX.W $0DDE                                                          ;90BD9C;
    JSL.L MoveBeamHorizontally_NoWaveBeam                                ;90BD9F;
    RTS                                                                  ;90BDA3;


InitialBeamBlockCollision_NoWaveBeam_Left:
    LDX.W $0DDE                                                          ;90BDA4;
    LDA.W #$FFFF                                                         ;90BDA7;
    STA.W $0BDC,X                                                        ;90BDAA;
    JSL.L MoveBeamHorizontally_NoWaveBeam                                ;90BDAD;
    RTS                                                                  ;90BDB1;


InitialWaveBeamBlockCollision:
    PHX                                                                  ;90BDB2;
    LDA.W $0C04,X                                                        ;90BDB3;
    AND.W #$000F                                                         ;90BDB6;
    ASL A                                                                ;90BDB9;
    TAX                                                                  ;90BDBA;
    JSR.W (.pointers,X)                                                  ;90BDBB;
    PLX                                                                  ;90BDBE;
    RTS                                                                  ;90BDBF;


.pointers:
    dw InitialWaveBeamBlockCollision_Vertical                            ;90BDC0; 0: Up, facing right
    dw InitialWaveBeamBlockCollision_Diagonal                            ;90BDC2; 1: Up-right
    dw InitialWaveBeamBlockCollision_Right                               ;90BDC4; 2: Right
    dw InitialWaveBeamBlockCollision_Diagonal                            ;90BDC6; 3: Down-right
    dw InitialWaveBeamBlockCollision_Vertical                            ;90BDC8; 4: Down, facing right
    dw InitialWaveBeamBlockCollision_Vertical                            ;90BDCA; 5: Down, facing left
    dw InitialWaveBeamBlockCollision_Diagonal                            ;90BDCC; 6: Down-left
    dw InitialWaveBeamBlockCollision_Left                                ;90BDCE; 7: Left
    dw InitialWaveBeamBlockCollision_Diagonal                            ;90BDD0; 8: Up-left
    dw InitialWaveBeamBlockCollision_Vertical                            ;90BDD2; 9: Up, facing left

InitialWaveBeamBlockCollision_Vertical:
    LDX.W $0DDE                                                          ;90BDD4;
    JSL.L MoveBeamVertically_WaveBeam                                    ;90BDD7;
    RTS                                                                  ;90BDDB;


InitialWaveBeamBlockCollision_Diagonal:
    LDX.W $0DDE                                                          ;90BDDC;
    JSL.L MoveBeamHorizontally_WaveBeam                                  ;90BDDF;
    BCS .return                                                          ;90BDE3;
    JSL.L MoveBeamVertically_WaveBeam                                    ;90BDE5;

.return:
    RTS                                                                  ;90BDE9;


InitialWaveBeamBlockCollision_Right:
    LDX.W $0DDE                                                          ;90BDEA;
    JSL.L MoveBeamHorizontally_WaveBeam                                  ;90BDED;
    RTS                                                                  ;90BDF1;


InitialWaveBeamBlockCollision_Left:
    LDX.W $0DDE                                                          ;90BDF2;
    LDA.W #$FFFF                                                         ;90BDF5;
    STA.W $0BDC,X                                                        ;90BDF8;
    JSL.L MoveBeamHorizontally_WaveBeam                                  ;90BDFB;
    RTS                                                                  ;90BDFF;


ProjectileReflection:
    PHP                                                                  ;90BE00;
    PHB                                                                  ;90BE01;
    PHK                                                                  ;90BE02;
    PLB                                                                  ;90BE03;
    REP #$30                                                             ;90BE04;
    PHX                                                                  ;90BE06;
    LDX.B $14                                                            ;90BE07;
    LDA.W $0C18,X                                                        ;90BE09;
    BIT.W #$0100                                                         ;90BE0C;
    BNE .missile                                                         ;90BE0F;
    BIT.W #$0200                                                         ;90BE11;
    BNE .super                                                           ;90BE14;
    JSL.L InitializeBeamVelocities                                       ;90BE16;
    JSL.L InitializeProjectile                                           ;90BE1A;
    LDA.W $0C18,X                                                        ;90BE1E;
    AND.W #$000F                                                         ;90BE21;
    ASL A                                                                ;90BE24;
    TAY                                                                  ;90BE25;
    LDA.W SamusBeamPreInstructionPointers,Y                              ;90BE26;
    STA.W $0C68,X                                                        ;90BE29;
    TXY                                                                  ;90BE2C;
    BRA .return                                                          ;90BE2D;


.missile:
    JSL.L InitializeProjectile                                           ;90BE2F;
    LDA.W #ProjectilePreInstruction_Missile                              ;90BE33;
    STA.W $0C68,X                                                        ;90BE36;
    LDA.W #$00F0                                                         ;90BE39;
    STA.W $0C7C,X                                                        ;90BE3C;
    BRA .return                                                          ;90BE3F;


.super:
    PHX                                                                  ;90BE41;
    LDA.W $0C7C,X                                                        ;90BE42;
    AND.W #$00FF                                                         ;90BE45;
    TAX                                                                  ;90BE48;
    JSL.L Clear_Projectile                                               ;90BE49;
    PLX                                                                  ;90BE4D;
    JSL.L InitializeProjectile                                           ;90BE4E;
    LDA.W #ProjectilePreInstruction_SuperMissile                         ;90BE52;
    STA.W $0C68,X                                                        ;90BE55;
    LDA.W #$00F0                                                         ;90BE58;
    STA.W $0C7C,X                                                        ;90BE5B;

.return:
    PLX                                                                  ;90BE5E;
    PLB                                                                  ;90BE5F;
    PLP                                                                  ;90BE60;
    RTL                                                                  ;90BE61;


HUDSelectionHandler_Missiles_SuperMissiles:
    PHP                                                                  ;90BE62;
    REP #$30                                                             ;90BE63;
    LDA.B $8F                                                            ;90BE65;
    BIT.W $09B2                                                          ;90BE67;
    BNE .checkIfCanFire                                                  ;90BE6A;
    LDA.W $0E00                                                          ;90BE6C;
    BIT.W $09B2                                                          ;90BE6F;
    BNE .checkIfCanFire                                                  ;90BE72;
    PLP                                                                  ;90BE74;
    RTS                                                                  ;90BE75;


.checkIfCanFire:
    JSR.W Check_if_Samus_Can_Fire_Missile                                ;90BE76;
    BCS .fire                                                            ;90BE79;

.returnUpper:
    PLP                                                                  ;90BE7B;
    RTS                                                                  ;90BE7C;


.cannotFire:
    DEC.W $0CCE                                                          ;90BE7D;
    PLP                                                                  ;90BE80;
    RTS                                                                  ;90BE81;


.fire:
    LDA.W $09D2                                                          ;90BE82;
    CMP.W #$0002                                                         ;90BE85;
    BEQ .selectedSupers                                                  ;90BE88;
    LDA.W $09C6                                                          ;90BE8A;
    BEQ .cannotFire                                                      ;90BE8D;
    BRA .zeroIndex                                                       ;90BE8F;


.selectedSupers:
    LDA.W $09CA                                                          ;90BE91;
    BEQ .cannotFire                                                      ;90BE94;

.zeroIndex:
    LDX.W #$0000                                                         ;90BE96;

.loop:
    LDA.W $0C2C,X                                                        ;90BE99;
    BEQ +                                                                ;90BE9C;
    INX                                                                  ;90BE9E;
    INX                                                                  ;90BE9F;
    CPX.W #$000A                                                         ;90BEA0;
    BMI .loop                                                            ;90BEA3;
    BRA .cannotFire                                                      ;90BEA5;


  + STX.B $14                                                            ;90BEA7;
    JSR.W InitializeProjectilePositionDirection                          ;90BEA9;
    BCC +                                                                ;90BEAC;
    JMP.W .returnUpper                                                   ;90BEAE;


  + LDA.W #$0014                                                         ;90BEB1;
    STA.W $18AC                                                          ;90BEB4;
    LDA.W $09D2                                                          ;90BEB7;
    CMP.W #$0002                                                         ;90BEBA;
    BEQ .decSuperCount                                                   ;90BEBD;
    DEC.W $09C6                                                          ;90BEBF;
    BRA +                                                                ;90BEC2;


.decSuperCount:
    DEC.W $09CA                                                          ;90BEC4;

  + LDX.B $14                                                            ;90BEC7;
    LDA.W #$0004                                                         ;90BEC9;
    STA.W $0C90,X                                                        ;90BECC;
    LDA.W $09D2                                                          ;90BECF;
    PHA                                                                  ;90BED2;
    XBA                                                                  ;90BED3;
    STA.B $12                                                            ;90BED4;
    LDA.W $0C18,X                                                        ;90BED6;
    ORA.B $12                                                            ;90BED9;
    ORA.W #$8000                                                         ;90BEDB;
    STA.W $0C18,X                                                        ;90BEDE;
    PLA                                                                  ;90BEE1;
    AND.W #$000F                                                         ;90BEE2;
    ASL A                                                                ;90BEE5;
    TAX                                                                  ;90BEE6;
    LDA.W $1F51                                                          ;90BEE7;
    BNE .init                                                            ;90BEEA;
    LDA.W ProjectileSFX_NonBeamProjectiles,X                             ;90BEEC;
    JSL.L QueueSound_Lib1_Max6                                           ;90BEEF;

.init:
    JSR.W InitializeMissileVelocities                                    ;90BEF3;
    JSL.L InitializeProjectile                                           ;90BEF6;
    LDA.W $0C18,X                                                        ;90BEFA;
    PHA                                                                  ;90BEFD;
    BIT.W #$0200                                                         ;90BEFE;
    BNE .superMissile                                                    ;90BF01;
    LDA.W #ProjectilePreInstruction_Missile                              ;90BF03;
    STA.W $0C68,X                                                        ;90BF06;
    BRA +                                                                ;90BF09;


.superMissile:
    LDA.W #ProjectilePreInstruction_SuperMissile                         ;90BF0B;
    STA.W $0C68,X                                                        ;90BF0E;

  + PLA                                                                  ;90BF11;
    XBA                                                                  ;90BF12;
    AND.W #$000F                                                         ;90BF13;
    TAY                                                                  ;90BF16;
    LDA.W ProjectileCooldowns_NonBeamProjectiles,Y                       ;90BF17;
    AND.W #$00FF                                                         ;90BF1A;
    STA.W $0CCC                                                          ;90BF1D;
    LDA.W $0A04                                                          ;90BF20;
    BEQ +                                                                ;90BF23;
    STZ.W $09D2                                                          ;90BF25;
    STZ.W $0A04                                                          ;90BF28;
    BRA .returnLower                                                     ;90BF2B;


  + LDA.W $09D2                                                          ;90BF2D;
    CMP.W #$0002                                                         ;90BF30;
    BEQ .supersSelected                                                  ;90BF33;
    LDA.W $09C6                                                          ;90BF35;
    BNE .returnLower                                                     ;90BF38;
    BRA .clearHUDSelection                                               ;90BF3A;


.supersSelected:
    LDA.W $09CA                                                          ;90BF3C;
    BNE .returnLower                                                     ;90BF3F;

.clearHUDSelection:
    STZ.W $09D2                                                          ;90BF41;

.returnLower:
    PLP                                                                  ;90BF44;
    RTS                                                                  ;90BF45;


Spawn_SuperMissileLink:
    LDX.W #$0000                                                         ;90BF46;

.loop:
    LDA.W $0C2C,X                                                        ;90BF49;
    BEQ .zeroDamage                                                      ;90BF4C;
    INX                                                                  ;90BF4E;
    INX                                                                  ;90BF4F;
    CPX.W #$000A                                                         ;90BF50;
    BMI .loop                                                            ;90BF53;
    BRA .return                                                          ;90BF55;


.zeroDamage:
    STX.B $14                                                            ;90BF57;
    TXY                                                                  ;90BF59;
    LDA.W $0C18,Y                                                        ;90BF5A;
    ORA.W #$8200                                                         ;90BF5D;
    STA.W $0C18,Y                                                        ;90BF60;
    LDX.W $0DDE                                                          ;90BF63;
    LDA.W $0B64,X                                                        ;90BF66;
    STA.W $0B64,Y                                                        ;90BF69;
    LDA.W $0B78,X                                                        ;90BF6C;
    STA.W $0B78,Y                                                        ;90BF6F;
    LDA.W $0C04,X                                                        ;90BF72;
    STA.W $0C04,Y                                                        ;90BF75;
    JSR.W InitializeProjectilePositionDirection                          ;90BF78;
    TYX                                                                  ;90BF7B;
    JSL.L InitializeSuperMissileLink                                     ;90BF7C;
    LDA.W #ProjectilePreInstruction_SuperMissileLink                     ;90BF80;
    STA.W $0C68,X                                                        ;90BF83;
    STX.B $12                                                            ;90BF86;
    LDX.W $0DDE                                                          ;90BF88;
    LDA.W $0C7C,X                                                        ;90BF8B;
    AND.W #$FF00                                                         ;90BF8E;
    CLC                                                                  ;90BF91;
    ADC.B $12                                                            ;90BF92;
    STA.W $0C7C,X                                                        ;90BF94;
    INC.W $0CCE                                                          ;90BF97;

.return:
    RTS                                                                  ;90BF9A;


BombTimerResetValue:
    dw $0034                                                             ;90BF9B;

HUDSelectionHandler_MorphBall:
    PHP                                                                  ;90BF9D;
    REP #$30                                                             ;90BF9E;
    LDA.B $8B                                                            ;90BFA0;
    AND.W $09B2                                                          ;90BFA2;
    BEQ .notPressingShot                                                 ;90BFA5;
    LDA.W $09D2                                                          ;90BFA7;
    CMP.W #$0003                                                         ;90BFAA;
    BNE .bomb                                                            ;90BFAD;
    JMP.W .powerBomb                                                     ;90BFAF;


.notPressingShot:
    LDA.W $0CD0                                                          ;90BFB2;
    BEQ .return                                                          ;90BFB5;
    LDA.W #$0002                                                         ;90BFB7;
    JSL.L QueueSound_Lib1_Max9                                           ;90BFBA;
    STZ.W $0CD0                                                          ;90BFBE;
    JSR.W ClearFlareAnimationState                                       ;90BFC1;
    JSL.L LoadSamusSuitPalette                                           ;90BFC4;

.return:
    PLP                                                                  ;90BFC8;
    RTS                                                                  ;90BFC9;


.bomb:
    JSR.W FireBombOrBombSpread                                           ;90BFCA;
    BCC .returnBomb                                                      ;90BFCD;
    LDX.W #$000A                                                         ;90BFCF;

.loopBomb:
    LDA.W $0C18,X                                                        ;90BFD2;
    BEQ .noProjectileType                                                ;90BFD5;
    INX                                                                  ;90BFD7;
    INX                                                                  ;90BFD8;
    CPX.W #$0014                                                         ;90BFD9;
    BMI .loopBomb                                                        ;90BFDC;
    DEX                                                                  ;90BFDE;
    DEX                                                                  ;90BFDF;

.noProjectileType:
    STX.B $14                                                            ;90BFE0;
    LDA.W #$0500                                                         ;90BFE2;
    STA.W $0C18,X                                                        ;90BFE5;
    PHA                                                                  ;90BFE8;
    LDA.W #$0000                                                         ;90BFE9;
    STA.W $0C04,X                                                        ;90BFEC;
    LDA.W $0AF6                                                          ;90BFEF;
    STA.W $0B64,X                                                        ;90BFF2;
    LDA.W $0AFA                                                          ;90BFF5;
    STA.W $0B78,X                                                        ;90BFF8;
    LDA.W BombTimerResetValue                                            ;90BFFB;
    STA.W $0C7C,X                                                        ;90BFFE;
    JSL.L InitializeBomb                                                 ;90C001;
    LDA.W #ProjectilePreInstruction_Bomb                                 ;90C005;
    STA.W $0C68,X                                                        ;90C008;
    PLA                                                                  ;90C00B;
    XBA                                                                  ;90C00C;
    AND.W #$000F                                                         ;90C00D;
    TAY                                                                  ;90C010;
    LDA.W ProjectileCooldowns_NonBeamProjectiles,Y                       ;90C011;
    AND.W #$00FF                                                         ;90C014;
    STA.W $0CCC                                                          ;90C017;

.returnBomb:
    PLP                                                                  ;90C01A;
    RTS                                                                  ;90C01B;


.powerBomb:
    LDA.W $0CEE                                                          ;90C01C;
    BPL .inactive                                                        ;90C01F;

.returnPowerBomb:
    PLP                                                                  ;90C021;
    RTS                                                                  ;90C022;


.inactive:
    JSR.W FireBomb                                                       ;90C023;
    BCC .returnPowerBomb                                                 ;90C026;
    LDA.W $09CE                                                          ;90C028;
    BEQ .returnFinal                                                     ;90C02B;
    DEC A                                                                ;90C02D;
    STA.W $09CE                                                          ;90C02E;
    BMI .returnFinal                                                     ;90C031;
    LDA.W #$FFFF                                                         ;90C033;
    STA.W $0CEE                                                          ;90C036;
    LDX.W #$000A                                                         ;90C039;

.loopPowerBomb:
    LDA.W $0C18,X                                                        ;90C03C;
    BEQ +                                                                ;90C03F;
    INX                                                                  ;90C041;
    INX                                                                  ;90C042;
    CPX.W #$0014                                                         ;90C043;
    BMI .loopPowerBomb                                                   ;90C046;
    DEX                                                                  ;90C048;
    DEX                                                                  ;90C049;

  + STX.B $14                                                            ;90C04A;
    LDA.W $09D2                                                          ;90C04C;
    XBA                                                                  ;90C04F;
    STA.B $12                                                            ;90C050;
    LDA.W $0C18,X                                                        ;90C052;
    ORA.B $12                                                            ;90C055;
    STA.W $0C18,X                                                        ;90C057;
    PHA                                                                  ;90C05A;
    LDA.W #$0000                                                         ;90C05B;
    STA.W $0C04,X                                                        ;90C05E;
    LDA.W $0AF6                                                          ;90C061;
    STA.W $0B64,X                                                        ;90C064;
    LDA.W $0AFA                                                          ;90C067;
    STA.W $0B78,X                                                        ;90C06A;
    LDA.W BombTimerResetValue                                            ;90C06D;
    STA.W $0C7C,X                                                        ;90C070;
    JSL.L InitializeBomb                                                 ;90C073;
    LDA.W #ProjectilePreInstruction_PowerBomb                            ;90C077;
    STA.W $0C68,X                                                        ;90C07A;
    PLA                                                                  ;90C07D;
    XBA                                                                  ;90C07E;
    AND.W #$000F                                                         ;90C07F;
    TAY                                                                  ;90C082;
    LDA.W ProjectileCooldowns_NonBeamProjectiles,Y                       ;90C083;
    AND.W #$00FF                                                         ;90C086;
    STA.W $0CCC                                                          ;90C089;
    LDA.W $0A04                                                          ;90C08C;
    BEQ +                                                                ;90C08F;
    STZ.W $09D2                                                          ;90C091;
    STZ.W $0A04                                                          ;90C094;
    BRA .returnFinal                                                     ;90C097;


  + LDA.W $09D2                                                          ;90C099;
    CMP.W #$0003                                                         ;90C09C;
    BNE .returnFinal                                                     ;90C09F;
    LDA.W $09CE                                                          ;90C0A1;
    BNE .returnFinal                                                     ;90C0A4;
    STZ.W $09D2                                                          ;90C0A6;

.returnFinal:
    PLP                                                                  ;90C0A9;
    RTS                                                                  ;90C0AA;


FireBombOrBombSpread:
    LDA.W $09A2                                                          ;90C0AB;
    BIT.W #$1000                                                         ;90C0AE;
    BEQ .return                                                          ;90C0B1;
    LDA.W $0CD0                                                          ;90C0B3;
    CMP.W #$003C                                                         ;90C0B6;
    BMI FireBomb                                                         ;90C0B9;
    LDA.W $0CD2                                                          ;90C0BB;
    BNE FireBomb                                                         ;90C0BE;
    LDA.B $8B                                                            ;90C0C0;
    BIT.W #$0400                                                         ;90C0C2;
    BEQ .bombSpread                                                      ;90C0C5;
    LDA.W $0CD4                                                          ;90C0C7;
    AND.W #$00C0                                                         ;90C0CA;
    CMP.W #$00C0                                                         ;90C0CD;
    BPL .bombSpread                                                      ;90C0D0;
    INC.W $0CD4                                                          ;90C0D2;
    BRA .return                                                          ;90C0D5;


.bombSpread:
    JSR.W BombSpread                                                     ;90C0D7;
    JSL.L LoadSamusSuitPalette                                           ;90C0DA;
    LDA.W #$0002                                                         ;90C0DE;
    JSL.L QueueSound_Lib1_Max9                                           ;90C0E1;

.return:
    CLC                                                                  ;90C0E5;
    RTS                                                                  ;90C0E6;


FireBomb:
    LDA.B $8F                                                            ;90C0E7;
    BIT.W $09B2                                                          ;90C0E9;
    BEQ .noFire                                                          ;90C0EC;
    LDA.W $0CD2                                                          ;90C0EE;
    BEQ +                                                                ;90C0F1;
    CMP.W #$0005                                                         ;90C0F3;
    BPL .noFire                                                          ;90C0F6;
    LDA.W $0CCC                                                          ;90C0F8;
    AND.W #$00FF                                                         ;90C0FB;
    BNE .noFire                                                          ;90C0FE;

  + LDA.W $0CCC                                                          ;90C100;
    INC A                                                                ;90C103;
    STA.W $0CCC                                                          ;90C104;
    LDA.W $0CD2                                                          ;90C107;
    INC A                                                                ;90C10A;
    STA.W $0CD2                                                          ;90C10B;
    SEC                                                                  ;90C10E;
    RTS                                                                  ;90C10F;


.noFire:
    LDA.W $0CD0                                                          ;90C110;
    BEQ .returnCarryClear                                                ;90C113;
    LDA.W #$0002                                                         ;90C115;
    JSL.L QueueSound_Lib1_Max9                                           ;90C118;
    STZ.W $0CD0                                                          ;90C11C;
    JSR.W ClearFlareAnimationState                                       ;90C11F;
    JSL.L LoadSamusSuitPalette                                           ;90C122;

.returnCarryClear:
    CLC                                                                  ;90C126;
    RTS                                                                  ;90C127;


HandleBomb:
    PHP                                                                  ;90C128;
    REP #$30                                                             ;90C129;
    LDX.W $0DDE                                                          ;90C12B;
    LDA.W $0C7C,X                                                        ;90C12E;
    BEQ .return                                                          ;90C131;
    DEC A                                                                ;90C133;
    STA.W $0C7C,X                                                        ;90C134;
    BEQ .explosion                                                       ;90C137;
    CMP.W #$000F                                                         ;90C139;
    BNE .return                                                          ;90C13C;
    LDA.W $0C40,X                                                        ;90C13E;
    CLC                                                                  ;90C141;
    ADC.W #$001C                                                         ;90C142;
    STA.W $0C40,X                                                        ;90C145;
    BRA .return                                                          ;90C148;


.explosion:
    LDA.W #$0008                                                         ;90C14A;
    JSL.L QueueSound_Lib2_Max6                                           ;90C14D;
    JSL.L Initialize_Bomb_Explosion                                      ;90C151;

.return:
    PLP                                                                  ;90C155;
    RTS                                                                  ;90C156;


HandlePowerBomb:
    PHP                                                                  ;90C157;
    REP #$30                                                             ;90C158;
    LDX.W $0DDE                                                          ;90C15A;
    LDA.W $0C7C,X                                                        ;90C15D;
    BEQ .zero                                                            ;90C160;
    DEC A                                                                ;90C162;
    STA.W $0C7C,X                                                        ;90C163;
    BEQ .explosion                                                       ;90C166;
    CMP.W #$000F                                                         ;90C168;
    BNE .return                                                          ;90C16B;
    LDA.W $0C40,X                                                        ;90C16D;
    CLC                                                                  ;90C170;
    ADC.W #$001C                                                         ;90C171;
    STA.W $0C40,X                                                        ;90C174;
    BRA .return                                                          ;90C177;


.explosion:
    LDA.W $0B64,X                                                        ;90C179;
    STA.W $0CE2                                                          ;90C17C;
    LDA.W $0B78,X                                                        ;90C17F;
    STA.W $0CE4                                                          ;90C182;
    PHX                                                                  ;90C185;
    PHY                                                                  ;90C186;
    PHP                                                                  ;90C187;
    PHB                                                                  ;90C188;
    JSL.L Enable_HDMAObjects                                             ;90C189;
    JSL.L Spawn_PowerBombExplosion                                       ;90C18D;
    PLB                                                                  ;90C191;
    PLP                                                                  ;90C192;
    PLY                                                                  ;90C193;
    PLX                                                                  ;90C194;
    LDA.W #$FFFF                                                         ;90C195;
    STA.W $0C7C,X                                                        ;90C198;
    BRA .return                                                          ;90C19B;


.zero:
    LDA.W $0CEE                                                          ;90C19D;
    BNE .return                                                          ;90C1A0;
    JSL.L Clear_Projectile                                               ;90C1A2;

.return:
    PLP                                                                  ;90C1A6;
    RTS                                                                  ;90C1A7;

;        _________________________________________________________ 0: Up, facing right
;       |      ___________________________________________________ 1: Up-right
;       |     |      _____________________________________________ 2: Right
;       |     |     |      _______________________________________ 3: Down-right
;       |     |     |     |      _________________________________ 4: Down, facing right
;       |     |     |     |     |      ___________________________ 5: Down, facing left
;       |     |     |     |     |     |      _____________________ 6: Down-left
;       |     |     |     |     |     |     |      _______________ 7: Left
;       |     |     |     |     |     |     |     |      _________ 8: Up-left
;       |     |     |     |     |     |     |     |     |      ___ 9: Up, facing left
;       |     |     |     |     |     |     |     |     |     |       _______________ Ah: Turning - aiming up / up-left / up-right
;       |     |     |     |     |     |     |     |     |     |      |      _________ Bh: Turning - neutral aim
;       |     |     |     |     |     |     |     |     |     |      |     |      ___ Ch: Turning - aiming down / down-left / down-right
;       |     |     |     |     |     |     |     |     |     |      |     |     |
ProjectileOriginOffsetsByDirection:
  .FlareX_Default:                                                       ;90C1A8;
    dw $0002,$0012,$000F,$0011,$0003,$FFFC,$FFEF,$FFF1,$FFEE,$FFFE, $FFFC,$FFFC,$FFFC
  .FlareY_Default:                                                       ;90C1C2;
    dw $FFE4,$FFED,$0001,$0006,$0011,$0011,$0006,$0001,$FFEC,$FFE4, $FFEC,$FFFE,$0008

  .FlareX_Running:                                                       ;90C1DC;
    dw $0002,$0013,$0014,$0012,$0003,$FFFC,$FFEE,$FFEC,$FFED,$FFFE
  .FlareY_Running:                                                       ;90C1F0;
    dw $FFE0,$FFEA,$FFFD,$0006,$0019,$0019,$0006,$FFFD,$FFEC,$FFE0

  .ProjectileX_Default:                                                  ;90C204;
    dw $0002,$000D,$000B,$000D,$0002,$FFFB,$FFF2,$FFF5,$FFED,$FFFE
  .ProjectileY_Default:                                                  ;90C218;
    dw $FFF8,$FFF3,$0001,$0004,$000D,$000D,$0004,$0001,$FFED,$FFF8

  .ProjX_Moonwalk_Running:                                               ;90C22C;
    dw $0002,$000F,$000F,$000D,$0002,$FFFB,$FFF3,$FFF3,$FFF1,$FFFE
  .ProjY_Moonwalk_Running:                                               ;90C240;
    dw $FFF8,$FFF0,$FFFE,$0001,$000D,$000D,$0001,$FFFE,$FFF0,$FFF8

ProjectileCooldowns_Uncharged:                                           ;90C254;
    db $0F ; 0: Power
    db $0F ; 1: Wave
    db $0F ; 2: Ice
    db $0F ; 3: Ice + wave
    db $0F ; 4: Spazer
    db $0F ; 5: Spazer + wave
    db $0F ; 6: Spazer + ice
    db $0F ; 7: Spazer + ice + wave
    db $0F ; 8: Plasma
    db $0F ; 9: Plasma + wave
    db $0C ; Ah: Plasma + ice <-- !
    db $0F ; Bh: Plasma + ice + wave
    db $00,$00,$00,$00

ProjectileCooldowns_Charged:                                             ;90C264;
    db $1E ; 0: Power
    db $1E ; 1: Wave
    db $1E ; 2: Ice
    db $1E ; 3: Ice + wave
    db $1E ; 4: Spazer
    db $1E ; 5: Spazer + wave
    db $1E ; 6: Spazer + ice
    db $1E ; 7: Spazer + ice + wave
    db $1E ; 8: Plasma
    db $1E ; 9: Plasma + wave
    db $1E ; Ah: Plasma + ice
    db $1E ; Bh: Plasma + ice + wave
    db $00,$00,$00,$00

if !FEATURE_KEEP_UNREFERENCED
UNUSED_Padding_90C274:
; Useless padding?
    db $00,$00,$00,$00,$00,$00                                           ;90C274;
endif ; !FEATURE_KEEP_UNREFERENCED

ProjectileCooldowns_NonBeamProjectiles:                                  ;90C27A;
    db $00
    db $0A ; Missile
    db $14 ; Super missile
    db $28 ; Power bomb
    db $00
    db $0C ; Bomb
    db $00
    db $00
    db $00

BeamAutoFireCooldowns:
    db $19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19                   ;90C283;

ProjectileSFX_Uncharged:                                                 ;90C28F;
    dw $000B ; 0: Power
    dw $000D ; 1: Wave
    dw $000C ; 2: Ice
    dw $000E ; 3: Ice + wave
    dw $000F ; 4: Spazer
    dw $0012 ; 5: Spazer + wave
    dw $0010 ; 6: Spazer + ice
    dw $0011 ; 7: Spazer + ice + wave
    dw $0013 ; 8: Plasma
    dw $0016 ; 9: Plasma + wave
    dw $0014 ; Ah: Plasma + ice
    dw $0015 ; Bh: Plasma + ice + wave

ProjectileSFX_Charged:                                                   ;90C2A7;
    dw $0017 ; 0: Power
    dw $0019 ; 1: Wave
    dw $0018 ; 2: Ice
    dw $001A ; 3: Ice + wave
    dw $001B ; 4: Spazer
    dw $001E ; 5: Spazer + wave
    dw $001C ; 6: Spazer + ice
    dw $001D ; 7: Spazer + ice + wave
    dw $001F ; 8: Plasma
    dw $0022 ; 9: Plasma + wave
    dw $0020 ; Ah: Plasma + ice
    dw $0021 ; Bh: Plasma + ice + wave

ProjectileSFX_NonBeamProjectiles:
;              _________ Missiles
;             |      ___ Super missiles
;             |     |
    dw $0000,$0003,$0004,$0000,$0000,$0000,$0000,$0000,$0000             ;90C2BF;

;        _________ Speed for horizontal / vertical direction
;       |      ___ Speed for diagonal direction
;       |     |
BeamSpeeds_Horizontal_Vertical:                                          ;90C2D1;
    dw $04CC
BeamSpeeds_Diagonal:                                                     ;90C2D3;
    dw       $0333 ; 0: Power
    dw $04CC,$0333 ; 1: Wave
    dw $04CC,$0333 ; 2: Ice
    dw $04CC,$0333 ; 3: Ice + wave
    dw $04CC,$0333 ; 4: Spazer
    dw $04CC,$0333 ; 5: Spazer + wave
    dw $04CC,$0333 ; 6: Spazer + ice
    dw $04CC,$0333 ; 7: Spazer + ice + wave
    dw $04CC,$0333 ; 8: Plasma
    dw $04CC,$0333 ; 9: Plasma + wave
    dw $04CC,$0333 ; Ah: Plasma + ice
    dw $04CC,$0333 ; Bh: Plasma + ice + wave

MissileInitializedBitset:
; This gets added to projectile $0C7C to indicate that it's been initialised
    dw $0100                                                             ;90C301;

MissileAccelerations:                                                    ;90C303;
;        _________ X acceleration. Unit 1/100h px/frame²
;       |      ___ Y acceleration. Unit 1/100h px/frame²
;       |     |
    dw $0000,$FFB4 ; 0: Up, facing right
    dw $0040,$FFC0 ; 1: Up-right
    dw $004C,$0000 ; 2: Right
    dw $0040,$0040 ; 3: Down-right
    dw $0000,$004C ; 4: Down, facing right
    dw $0000,$004C ; 5: Down, facing left
    dw $FFC0,$0040 ; 6: Down-left
    dw $FFB4,$0000 ; 7: Left
    dw $FFC0,$FFC0 ; 8: Up-left
    dw $0000,$FFB4 ; 9: Up, facing left

SuperMissileAccelerations:                                               ;90C32B;
;        _________ X acceleration. Unit 1/100h px/frame²
;       |      ___ Y acceleration. Unit 1/100h px/frame²
;       |     |
    dw $0000,$FF00 ; 0: Up, facing right
    dw $00B6,$FF4A ; 1: Up-right
    dw $0100,$0000 ; 2: Right
    dw $00B6,$00B6 ; 3: Down-right
    dw $0000,$0100 ; 4: Down, facing right
    dw $0000,$0100 ; 5: Down, facing left
    dw $FF4A,$00B6 ; 6: Down-left
    dw $FF00,$0000 ; 7: Left
    dw $FF4A,$FF4A ; 8: Up-left
    dw $0000,$FF00 ; 9: Up, facing left

ProjectileAccelerations_X:                                               ;90C353;
; X acceleration. Unit 1/100h px/frame²
    dw $0000 ; 0: Up, facing right
    dw $0013 ; 1: Up-right
    dw $0013 ; 2: Right
    dw $0013 ; 3: Down-right
    dw $0000 ; 4: Down, facing right
    dw $0000 ; 5: Down, facing left
    dw $FFED ; 6: Down-left
    dw $FFED ; 7: Left
    dw $FFED ; 8: Up-left
    dw $0000 ; 9: Up, facing left

ProjectileAccelerations_Y:                                               ;90C367;
; Y acceleration. Unit 1/100h px/frame²
    dw $FFED ; 0: Up, facing right
    dw $FFED ; 1: Up-right
    dw $0000 ; 2: Right
    dw $0013 ; 3: Down-right
    dw $0013 ; 4: Down, facing right
    dw $0013 ; 5: Down, facing left
    dw $0013 ; 6: Down-left
    dw $0000 ; 7: Left
    dw $FFED ; 8: Up-left
    dw $FFED ; 9: Up, facing left

ProtoWeaponConstants_Beams:                                              ;90C37B;
; Used only by $94:9C73 to set $0DD2 as part of bomb explosion block collision detection
; Highly likely that these tables were supposed to be abandoned entirely and that one check was left over
;        _________ Unused. Uncharged damage?
;       |    _____ Unused. Charged damage?
;       |   |    _ Projectile proto type
;       |   |   |
    db $03,$14,$00 ; 0: Power
    db $0A,$28,$01 ; 1: Wave
    db $05,$1E,$00 ; 2: Ice
    db $0A,$28,$01 ; 3: Ice + wave
    db $14,$50,$00 ; 4: Spazer
    db $14,$50,$01 ; 5: Spazer + wave
    db $14,$50,$00 ; 6: Spazer + ice
    db $14,$50,$01 ; 7: Spazer + ice + wave
    db $1E,$64,$00 ; 8: Plasma
    db $1E,$64,$01 ; 9: Plasma + wave
    db $1E,$64,$00 ; Ah: Plasma + ice
    db $1E,$64,$01 ; Bh: Plasma + ice + wave

ProtoWeaponConstants_NonBeams:                                           ;90C39F;
;        _____ Unused. Damage?
;       |    _ Projectile proto type
;       |   |
    db $00,$00
    db $0A,$00 ; Missile
    db $32,$00 ; Super missile
    db $32,$03 ; Power bomb
    db $00,$FF
    db $0A,$02 ; Bomb
    db $00,$FF
    db $00,$FF   
    db $00,$FF

BeamTilesPointers:
    dw Tiles_PowerBeam                                                   ;90C3B1; 0: Power
    dw Tiles_WaveBeam                                                    ;90C3B3; 1: Wave
    dw Tiles_IceBeam                                                     ;90C3B5; 2: Ice
    dw Tiles_WaveBeam                                                    ;90C3B7; 3: Ice + wave
    dw Tiles_Spazer                                                      ;90C3B9; 4: Spazer
    dw Tiles_Spazer                                                      ;90C3BB; 5: Spazer + wave
    dw Tiles_Spazer                                                      ;90C3BD; 6: Spazer + ice
    dw Tiles_Spazer                                                      ;90C3BF; 7: Spazer + ice + wave
    dw Tiles_PlasmaBeam                                                  ;90C3C1; 8: Plasma
    dw Tiles_PlasmaBeam                                                  ;90C3C3; 9: Plasma + wave
    dw Tiles_PlasmaBeam                                                  ;90C3C5; Ah: Plasma + ice
    dw Tiles_PlasmaBeam                                                  ;90C3C7; Bh: Plasma + ice + wave

BeamPalettePointers:
    dw BeamPalettes_Power                                                ;90C3C9; 0: Power
    dw BeamPalettes_Wave                                                 ;90C3CB; 1: Wave
    dw BeamPalettes_Ice                                                  ;90C3CD; 2: Ice
    dw BeamPalettes_Ice                                                  ;90C3CF; 3: Ice + wave
    dw BeamPalettes_Spazer                                               ;90C3D1; 4: Spazer
    dw BeamPalettes_Wave                                                 ;90C3D3; 5: Spazer + wave
    dw BeamPalettes_Ice                                                  ;90C3D5; 6: Spazer + ice
    dw BeamPalettes_Ice                                                  ;90C3D7; 7: Spazer + ice + wave
    dw BeamPalettes_Plasma                                               ;90C3D9; 8: Plasma
    dw BeamPalettes_Plasma                                               ;90C3DB; 9: Plasma + wave
    dw BeamPalettes_Ice                                                  ;90C3DD; Ah: Plasma + ice
    dw BeamPalettes_Ice                                                  ;90C3DF; Bh: Plasma + ice + wave

BeamPalettes_Power:
    dw $3800,$7FFF,$19FF,$1D55,$10AD,$53FF,$039E,$295F                   ;90C3E1;
    dw $18DF,$0000,$0000,$0000,$0000,$0000,$0000,$104A                   ;90C3F1;

BeamPalettes_Ice:
    dw $3800,$7FFF,$7EC0,$6DE0,$54E0,$7F6E,$730A,$6665                   ;90C401;
    dw $5E22,$7FA0,$7B60,$7720,$72A0,$6E60,$7F91,$20C0                   ;90C411;

BeamPalettes_Wave:
    dw $3800,$7FFF,$7C1F,$5816,$300C,$7EDF,$7DDF,$7CDF                   ;90C421;
    dw $681A,$0000,$0000,$0000,$0000,$0000,$0000,$2409                   ;90C431;

BeamPalettes_Plasma:
    dw $3800,$7FFF,$3BE0,$2680,$1580,$6BFA,$4BF2,$2BEA                   ;90C441;
    dw $03E0,$0000,$0000,$0000,$0000,$0000,$0000,$0920                   ;90C451;

BeamPalettes_Spazer:
    dw $3800,$7FFF,$03FF,$0216,$00EE,$6BFF,$4BFF,$2BFF                   ;90C461;
    dw $037B,$0000,$0000,$0000,$0000,$0000,$0000,$00AD                   ;90C471;

FlareAnimationDelays_Pointers:
    dw FlareAnimationDelays_MainFlare                                    ;90C481;
    dw FlareAnimationDelays_FlareSlowSparks                              ;90C483;
    dw FlareAnimationDelays_FlareFastSparks                              ;90C485;

FlareAnimationDelays_MainFlare:
    db $03,$02,$03,$02,$03,$02,$03,$02,$03,$02,$03,$02,$03,$02,$03,$02   ;90C487;
    db $03,$02,$03,$02,$03,$02,$03,$02,$03,$02,$03,$02,$03,$02,$FE,$0E   ;90C497;

FlareAnimationDelays_FlareSlowSparks:
    db $04,$03,$02,$03,$02,$03,$FF                                       ;90C4A7;

FlareAnimationDelays_FlareFastSparks:
    db $03,$02,$02,$02,$02,$02,$FF                                       ;90C4AE;

HandleSwitchingHUDSelection:
    PHP                                                                  ;90C4B5;
    REP #$30                                                             ;90C4B6;
    LDA.W $09D2                                                          ;90C4B8;
    STA.B $12                                                            ;90C4BB;
    LDA.B $8F                                                            ;90C4BD;
    BIT.W $09B8                                                          ;90C4BF;
    BEQ .notItemCancel                                                   ;90C4C2;
    STZ.W $0A04                                                          ;90C4C4;
    BRA .itemCancel                                                      ;90C4C7;


.notItemCancel:
    LDA.B $8B                                                            ;90C4C9;
    BIT.W $09B8                                                          ;90C4CB;
    BNE +                                                                ;90C4CE;
    STZ.B $16                                                            ;90C4D0;
    BRA .checkItemSelect                                                 ;90C4D2;


  + LDA.W #$0001                                                         ;90C4D4;
    STA.B $16                                                            ;90C4D7;

.checkItemSelect:
    LDA.B $8F                                                            ;90C4D9;
    BIT.W $09BA                                                          ;90C4DB;
    BEQ .itemSelectEnd                                                   ;90C4DE;
    LDA.W $09D2                                                          ;90C4E0;
    INC A                                                                ;90C4E3;
    CMP.W #$0006                                                         ;90C4E4;
    BMI .itemCancelEnd                                                   ;90C4E7;

.itemCancel:
    LDA.W #$0000                                                         ;90C4E9;

.itemCancelEnd:
    STA.W $09D2                                                          ;90C4EC;

.loop:
    ASL A                                                                ;90C4EF;
    TAX                                                                  ;90C4F0;
    JSR.W (.pointers,X)                                                  ;90C4F1;
    BCC .checkHoldingItemCancel                                          ;90C4F4;
    LDA.W $09D2                                                          ;90C4F6;
    INC A                                                                ;90C4F9;
    STA.W $09D2                                                          ;90C4FA;
    CMP.W #$0006                                                         ;90C4FD;
    BMI .loop                                                            ;90C500;
    LDA.W #$0000                                                         ;90C502;
    STA.W $09D2                                                          ;90C505;
    BRA .loop                                                            ;90C508;


.checkHoldingItemCancel:
    LDA.B $16                                                            ;90C50A;
    BEQ .resetAutoCancel                                                 ;90C50C;
    LDA.W $09D2                                                          ;90C50E;
    STA.W $0A04                                                          ;90C511;
    BRA .itemSelectEnd                                                   ;90C514;


.resetAutoCancel:
    STZ.W $0A04                                                          ;90C516;

.itemSelectEnd:
    LDA.W $09D2                                                          ;90C519;
    CMP.B $12                                                            ;90C51C;
    BNE .itemChanged                                                     ;90C51E;
    LDA.W $0AAA                                                          ;90C520;
    INC A                                                                ;90C523;
    CMP.W #$0003                                                         ;90C524;
    BMI .toggleArmCannon                                                 ;90C527;
    LDA.W #$0002                                                         ;90C529;

.toggleArmCannon:
    STA.W $0AAA                                                          ;90C52C;
    BRA .return                                                          ;90C52F;


.itemChanged:
    LDA.W #$0001                                                         ;90C531;
    STA.W $0AAA                                                          ;90C534;

.return:
    PLP                                                                  ;90C537;
    RTS                                                                  ;90C538;


.pointers:
    dw SwitchedToHUDItemHandler_Nothing                                  ;90C539; Nothing
    dw SwitchedToHUDItemHandler_Missiles                                 ;90C53B; Missiles
    dw SwitchedToHUDItemHandler_SuperMissiles                            ;90C53D; Super missiles
    dw SwitchedToHUDItemHandler_PowerBombs                               ;90C53F; Power bombs
    dw SwitchedToHUDItemHandler_GrappleBeam                              ;90C541; Grapple
    dw SwitchedToHUDItemHandler_XrayScope                                ;90C543; X-ray

SwitchedToHUDItemHandler_Nothing:
    STZ.W $0CD0                                                          ;90C545;
    JSR.W ClearFlareAnimationState                                       ;90C548;
    JSL.L LoadSamusSuitPalette                                           ;90C54B;
    CLC                                                                  ;90C54F;
    RTS                                                                  ;90C550;


SwitchedToHUDItemHandler_Missiles:
    LDA.W $09C6                                                          ;90C551;
    BNE .hasMissiles                                                     ;90C554;
    SEC                                                                  ;90C556;
    RTS                                                                  ;90C557;


.hasMissiles:
    STZ.W $0CD0                                                          ;90C558;
    JSR.W ClearFlareAnimationState                                       ;90C55B;
    JSL.L LoadSamusSuitPalette                                           ;90C55E;
    CLC                                                                  ;90C562;
    RTS                                                                  ;90C563;


SwitchedToHUDItemHandler_SuperMissiles:
    LDA.W $09CA                                                          ;90C564;
    BNE .hasSupers                                                       ;90C567;
    SEC                                                                  ;90C569;
    RTS                                                                  ;90C56A;


.hasSupers:
    STZ.W $0CD0                                                          ;90C56B;
    JSR.W ClearFlareAnimationState                                       ;90C56E;
    JSL.L LoadSamusSuitPalette                                           ;90C571;
    CLC                                                                  ;90C575;
    RTS                                                                  ;90C576;


SwitchedToHUDItemHandler_PowerBombs:
    LDA.W $09CE                                                          ;90C577;
    BNE .hasPowerBombs                                                   ;90C57A;
    SEC                                                                  ;90C57C;
    RTS                                                                  ;90C57D;


.hasPowerBombs:
    STZ.W $0CD0                                                          ;90C57E;
    JSR.W ClearFlareAnimationState                                       ;90C581;
    JSL.L LoadSamusSuitPalette                                           ;90C584;
    CLC                                                                  ;90C588;
    RTS                                                                  ;90C589;


SwitchedToHUDItemHandler_GrappleBeam:
    LDA.W $09A2                                                          ;90C58A;
    BIT.W #$4000                                                         ;90C58D;
    BNE .hasGrappleBeam                                                  ;90C590;
    SEC                                                                  ;90C592;
    RTS                                                                  ;90C593;


.hasGrappleBeam:
    LDA.W $0D32                                                          ;90C594;
    CMP.W #GrappleBeamFunction_Inactive                                  ;90C597;
    BNE .returnCarryClear                                                ;90C59A;
    JSL.L LoadSamusSuitPalette                                           ;90C59C;
    STZ.W $0CD0                                                          ;90C5A0;
    JSR.W ClearFlareAnimationState                                       ;90C5A3;
    LDA.W #GrappleBeamFunction_Inactive                                  ;90C5A6;
    STA.W $0D32                                                          ;90C5A9;

.returnCarryClear:
    CLC                                                                  ;90C5AC;
    RTS                                                                  ;90C5AD;


SwitchedToHUDItemHandler_XrayScope:
    LDA.W $09A2                                                          ;90C5AE;
    BIT.W #$8000                                                         ;90C5B1;
    BNE .hasXrayScope                                                    ;90C5B4;
    SEC                                                                  ;90C5B6;
    RTS                                                                  ;90C5B7;


.hasXrayScope:
    STZ.W $0CD0                                                          ;90C5B8;
    JSR.W ClearFlareAnimationState                                       ;90C5BB;
    JSL.L LoadSamusSuitPalette                                           ;90C5BE;
    CLC                                                                  ;90C5C2;
    RTS                                                                  ;90C5C3;


HandleArmCannonOpenState:
    PHP                                                                  ;90C5C4;
    REP #$30                                                             ;90C5C5;
    LDA.W $0AA7                                                          ;90C5C7;
    AND.W #$00FF                                                         ;90C5CA;
    BNE .advanceArmCannonFrame                                           ;90C5CD;
    JSR.W UpdateArmCannonIsOpenState                                     ;90C5CF;
    BCC .noChange                                                        ;90C5D2;

.advanceArmCannonFrame:
    JSR.W AdvanceArmCannonFrame                                          ;90C5D4;

.noChange:
    LDA.W $0A1C                                                          ;90C5D7;
    ASL A                                                                ;90C5DA;
    TAX                                                                  ;90C5DB;
    LDA.W ArmCannonDrawingData,X                                         ;90C5DC;
    TAY                                                                  ;90C5DF;
    LDA.W $0001,Y                                                        ;90C5E0;
    AND.W #$00FF                                                         ;90C5E3;
    STA.W $0AAC                                                          ;90C5E6;
    PLP                                                                  ;90C5E9;
    RTS                                                                  ;90C5EA;


UpdateArmCannonIsOpenState:
    LDA.W $0AAA                                                          ;90C5EB;
    CMP.W #$0002                                                         ;90C5EE;
    BMI .returnCarryClear                                                ;90C5F1;
    LDA.W $09D2                                                          ;90C5F3;
    TAX                                                                  ;90C5F6;
    LDA.W ArmCannonOpenFlags,X                                           ;90C5F7;
    AND.W #$00FF                                                         ;90C5FA;
    STA.B $12                                                            ;90C5FD;
    LDA.W $0AA6                                                          ;90C5FF;
    AND.W #$00FF                                                         ;90C602;
    CMP.B $12                                                            ;90C605;
    BEQ .returnCarryClear                                                ;90C607;
    LDA.B $12                                                            ;90C609;
    BEQ .closed                                                          ;90C60B;
    LDA.W #$0000                                                         ;90C60D;
    STA.W $0AA8                                                          ;90C610;
    BRA .toggleArmCannon                                                 ;90C613;


.closed:
    LDA.W #$0004                                                         ;90C615;
    STA.W $0AA8                                                          ;90C618;

.toggleArmCannon:
    LDA.B $12                                                            ;90C61B;
    ORA.W #$0100                                                         ;90C61D;
    STA.W $0AA6                                                          ;90C620;
    SEC                                                                  ;90C623;
    RTS                                                                  ;90C624;


.returnCarryClear:
    CLC                                                                  ;90C625;
    RTS                                                                  ;90C626;


AdvanceArmCannonFrame:
    PHP                                                                  ;90C627;
    REP #$30                                                             ;90C628;
    LDA.W $0AA6                                                          ;90C62A;
    AND.W #$00FF                                                         ;90C62D;
    BNE .open                                                            ;90C630;
    LDA.W $0AA8                                                          ;90C632;
    DEC A                                                                ;90C635;
    BEQ .fullyClosed                                                     ;90C636;
    BMI .fullyClosed                                                     ;90C638;
    STA.W $0AA8                                                          ;90C63A;
    BRA .return                                                          ;90C63D;


.open:
    LDA.W $0AA8                                                          ;90C63F;
    INC A                                                                ;90C642;
    CMP.W #$0003                                                         ;90C643;
    BPL .fullyOpen                                                       ;90C646;
    STA.W $0AA8                                                          ;90C648;
    BRA .return                                                          ;90C64B;


.fullyClosed:
    STZ.W $0AA8                                                          ;90C64D;
    BRA .fullyTransitioned                                               ;90C650;


.fullyOpen:
    LDA.W #$0003                                                         ;90C652;
    STA.W $0AA8                                                          ;90C655;

.fullyTransitioned:
    LDA.W $0AA6                                                          ;90C658;
    AND.W #$00FF                                                         ;90C65B;
    STA.W $0AA6                                                          ;90C65E;

.return:
    PLP                                                                  ;90C661;
    RTS                                                                  ;90C662;


DrawArmCannon:
    PHP                                                                  ;90C663;
    REP #$30                                                             ;90C664;
    LDA.W $0AA8                                                          ;90C666;
    BEQ .return                                                          ;90C669;
    LDA.W $18A8                                                          ;90C66B;
    BEQ .draw                                                            ;90C66E;
    LDA.W $05B6                                                          ;90C670;
    AND.W #$0001                                                         ;90C673;
    BEQ .draw                                                            ;90C676;

.return:
    PLP                                                                  ;90C678;
    RTS                                                                  ;90C679;


.draw:
    LDA.W $0A1C                                                          ;90C67A;
    ASL A                                                                ;90C67D;
    TAX                                                                  ;90C67E;
    LDA.W ArmCannonDrawingData,X                                         ;90C67F;
    TAY                                                                  ;90C682;
    LDA.W $0000,Y                                                        ;90C683;
    AND.W #$00FF                                                         ;90C686;
    BIT.W #$0080                                                         ;90C689;
    BEQ .spritePositive                                                  ;90C68C;
    LDA.W $0A96                                                          ;90C68E;
    BNE +                                                                ;90C691;
    LDA.W $0000,Y                                                        ;90C693;
    AND.W #$007F                                                         ;90C696;
    ASL A                                                                ;90C699;
    TAX                                                                  ;90C69A;
    TYA                                                                  ;90C69B;
    CLC                                                                  ;90C69C;
    ADC.W #$0004                                                         ;90C69D;
    STA.B $16                                                            ;90C6A0;
    BRA .merge                                                           ;90C6A2;


  + LDA.W $0002,Y                                                        ;90C6A4;
    AND.W #$007F                                                         ;90C6A7;
    ASL A                                                                ;90C6AA;
    TAX                                                                  ;90C6AB;
    TYA                                                                  ;90C6AC;
    CLC                                                                  ;90C6AD;
    ADC.W #$0004                                                         ;90C6AE;
    STA.B $16                                                            ;90C6B1;
    BRA .merge                                                           ;90C6B3;


.spritePositive:
    ASL A                                                                ;90C6B5;
    TAX                                                                  ;90C6B6;
    TYA                                                                  ;90C6B7;
    INC A                                                                ;90C6B8;
    INC A                                                                ;90C6B9;
    STA.B $16                                                            ;90C6BA;

.merge:
    LDA.W .spriteValues,X                                                ;90C6BC;
    STA.B $18                                                            ;90C6BF;
    LDA.W $0A96                                                          ;90C6C1;
    ASL A                                                                ;90C6C4;
    CLC                                                                  ;90C6C5;
    ADC.B $16                                                            ;90C6C6;
    TAY                                                                  ;90C6C8;
    LDA.W $0000,Y                                                        ;90C6C9;
    AND.W #$00FF                                                         ;90C6CC;
    BIT.W #$0080                                                         ;90C6CF;
    BEQ +                                                                ;90C6D2;
    ORA.W #$FF00                                                         ;90C6D4;

  + STA.B $12                                                            ;90C6D7;
    LDA.W $0001,Y                                                        ;90C6D9;
    AND.W #$00FF                                                         ;90C6DC;
    BIT.W #$0080                                                         ;90C6DF;
    BEQ +                                                                ;90C6E2;
    ORA.W #$FF00                                                         ;90C6E4;

  + STA.B $14                                                            ;90C6E7;
    LDA.W $0A1C                                                          ;90C6E9;
    ASL A                                                                ;90C6EC;
    ASL A                                                                ;90C6ED;
    ASL A                                                                ;90C6EE;
    TAX                                                                  ;90C6EF;
    LDA.L PoseDefinitions_YOffset,X                                      ;90C6F0;
    AND.W #$00FF                                                         ;90C6F4;
    STA.B $16                                                            ;90C6F7;
    LDX.W $0590                                                          ;90C6F9;
    LDA.W $0AF6                                                          ;90C6FC;
    CLC                                                                  ;90C6FF;
    ADC.B $12                                                            ;90C700;
    SEC                                                                  ;90C702;
    SBC.W $0911                                                          ;90C703;
    BMI +                                                                ;90C706;
    CMP.W #$0100                                                         ;90C708;
    BPL +                                                                ;90C70B;
    STA.W $0370,X                                                        ;90C70D;
    LDA.W $0AFA                                                          ;90C710;
    CLC                                                                  ;90C713;
    ADC.B $14                                                            ;90C714;
    SEC                                                                  ;90C716;
    SBC.B $16                                                            ;90C717;
    SBC.W $0915                                                          ;90C719;
    BMI +                                                                ;90C71C;
    CMP.W #$0100                                                         ;90C71E;
    BPL +                                                                ;90C721;
    STA.W $0371,X                                                        ;90C723;
    LDA.B $18                                                            ;90C726;
    STA.W $0372,X                                                        ;90C728;
    TXA                                                                  ;90C72B;
    CLC                                                                  ;90C72C;
    ADC.W #$0004                                                         ;90C72D;
    STA.W $0590                                                          ;90C730;

  + LDA.W $0A1C                                                          ;90C733;
    ASL A                                                                ;90C736;
    TAX                                                                  ;90C737;
    LDA.W ArmCannonDrawingData,X                                         ;90C738;
    TAY                                                                  ;90C73B;
    LDA.W $0000,Y                                                        ;90C73C;
    AND.W #$00FF                                                         ;90C73F;
    BIT.W #$0080                                                         ;90C742;
    BEQ .tilesPositive                                                   ;90C745;
    LDA.W $0A96                                                          ;90C747;
    BNE .nonZeroAnimFrame                                                ;90C74A;
    LDA.W $0000,Y                                                        ;90C74C;
    AND.W #$007F                                                         ;90C74F;
    BRA .tilesPositive                                                   ;90C752;


.nonZeroAnimFrame:
    INY                                                                  ;90C754;
    INY                                                                  ;90C755;
    LDA.W $0000,Y                                                        ;90C756;
    AND.W #$007F                                                         ;90C759;

.tilesPositive:
    ASL A                                                                ;90C75C;
    TAX                                                                  ;90C75D;
    LDA.W .pointers,X                                                    ;90C75E;
    STA.B $16                                                            ;90C761;
    LDA.W $0AA8                                                          ;90C763;
    ASL A                                                                ;90C766;
    CLC                                                                  ;90C767;
    ADC.B $16                                                            ;90C768;
    TAY                                                                  ;90C76A;
    LDX.W $0330                                                          ;90C76B;
    LDA.W #$0020                                                         ;90C76E;
    STA.B $D0,X                                                          ;90C771;
    INX                                                                  ;90C773;
    INX                                                                  ;90C774;
    LDA.W $0000,Y                                                        ;90C775;
    STA.B $D0,X                                                          ;90C778;
    INX                                                                  ;90C77A;
    INX                                                                  ;90C77B;
    SEP #$20                                                             ;90C77C;
    LDA.B #$9A                                                           ;90C77E;
    STA.B $D0,X                                                          ;90C780;
    REP #$20                                                             ;90C782;
    INX                                                                  ;90C784;
    LDA.W #$61F0                                                         ;90C785;
    STA.B $D0,X                                                          ;90C788;
    INX                                                                  ;90C78A;
    INX                                                                  ;90C78B;
    STX.W $0330                                                          ;90C78C;
    PLP                                                                  ;90C78F;
    RTS                                                                  ;90C790;


.spriteValues:
; Indexed by direction (see $0C04)
    dw $281F,$281F,$281F,$681F,$A81F,$E81F,$281F,$681F,$681F,$681F       ;90C791; Sprite tile number and attributes

.pointers:
; Pointers to below table
    dw .armCannonTiles_0                                                 ;90C7A5;
    dw .armCannonTiles_3                                                 ;90C7A7;
    dw .armCannonTiles_1                                                 ;90C7A9;
    dw .armCannonTiles_2                                                 ;90C7AB;
    dw .armCannonTiles_0                                                 ;90C7AD;
    dw .armCannonTiles_0                                                 ;90C7AF;
    dw .armCannonTiles_2                                                 ;90C7B1;
    dw .armCannonTiles_1                                                 ;90C7B3;
    dw .armCannonTiles_3                                                 ;90C7B5;
    dw .armCannonTiles_0                                                 ;90C7B7;

; Pointers to tiles in bank $9A, indexed by arm cannon frame
.armCannonTiles_0:
    dw $0000                                                             ;90C7B9;
    dw Tiles_NonClosed_ArmCannon_Vertical_0                              ;90C7BB;
    dw Tiles_NonClosed_ArmCannon_Vertical_1                              ;90C7BD;
    dw Tiles_NonClosed_ArmCannon_Vertical_2                              ;90C7BF;
.armCannonTiles_1:
    dw $0000                                                             ;90C7C1;
    dw Tiles_NonClosed_ArmCannon_Horizontal_0                            ;90C7C3;
    dw Tiles_NonClosed_ArmCannon_Horizontal_1                            ;90C7C5;
    dw Tiles_NonClosed_ArmCannon_Horizontal_2                            ;90C7C7;
.armCannonTiles_2:
    dw $0000                                                             ;90C7C9;
    dw Tiles_NonClosed_ArmCannon_DownwardsDiagonal_0                     ;90C7CB;
    dw Tiles_NonClosed_ArmCannon_DownwardsDiagonal_1                     ;90C7CD;
    dw Tiles_NonClosed_ArmCannon_DownwardsDiagonal_2                     ;90C7CF;
.armCannonTiles_3:
    dw $0000                                                             ;90C7D1;
    dw Tiles_NonClosed_ArmCannon_UpwardsDiagonal_0                       ;90C7D3;
    dw Tiles_NonClosed_ArmCannon_UpwardsDiagonal_1                       ;90C7D5;
    dw Tiles_NonClosed_ArmCannon_UpwardsDiagonal_2                       ;90C7D7;

ArmCannonOpenFlags:
; Indexed by HUD item index. 1 for open arm cannon
    db $00,$01,$01,$00,$01,$00                                           ;90C7D9;

ArmCannonDrawingData:
    dw ArmCannonDrawingData_FacingForward                                ;90C7DF;
    dw ArmCannonDrawingData_FacingRight                                  ;90C7E1;
    dw ArmCannonDrawingData_FacingLeft                                   ;90C7E3;
    dw ArmCannonDrawingData_FacingRight_AimingUp                         ;90C7E5;
    dw ArmCannonDrawingData_FacingLeft_AimingUp                          ;90C7E7;
    dw ArmCannonDrawingData_FacingRight_AimingUpRight                    ;90C7E9;
    dw ArmCannonDrawingData_FacingLeft_AimingUpLeft                      ;90C7EB;
    dw ArmCannonDrawingData_FacingRight_AimingDownRight                  ;90C7ED;
    dw ArmCannonDrawingData_FacingLeft_AimingDownLeft                    ;90C7EF;
    dw ArmCannonDrawingData_Default                                      ;90C7F1;
    dw ArmCannonDrawingData_Default                                      ;90C7F3;
    dw ArmCannonDrawingData_MovingRight_GunExtended                      ;90C7F5;
    dw ArmCannonDrawingData_MovingLeft_GunExtended                       ;90C7F7;
    dw ArmCannonDrawingData_Default                                      ;90C7F9;
    dw ArmCannonDrawingData_Default                                      ;90C7FB;
    dw ArmCannonDrawingData_MovingRight_AimingUpRight                    ;90C7FD;
    dw ArmCannonDrawingData_MovingLeft_AimingUpLeft                      ;90C7FF;
    dw ArmCannonDrawingData_MovingRight_AimingDownRight                  ;90C801;
    dw ArmCannonDrawingData_MovingLeft_AimingDownLeft                    ;90C803;
    dw ArmCannonDrawingData_FacingRight_NormalJump_NotMoving_GunExt      ;90C805;
    dw ArmCannonDrawingData_FacingLeft_NormalJump_NotMoving_GunExt       ;90C807;
    dw ArmCannonDrawingData_FacingRight_NormalJump_AimingUp              ;90C809;
    dw ArmCannonDrawingData_FacingLeft_NormalJump_AimingUp               ;90C80B;
    dw ArmCannonDrawingData_FacingRight_NormalJump_AimingDown            ;90C80D;
    dw ArmCannonDrawingData_FacingLeft_NormalJump_AimingDown             ;90C80F;
    dw ArmCannonDrawingData_Default                                      ;90C811;
    dw ArmCannonDrawingData_Default                                      ;90C813;
    dw ArmCannonDrawingData_Default                                      ;90C815;
    dw ArmCannonDrawingData_Default                                      ;90C817;
    dw ArmCannonDrawingData_Default                                      ;90C819;
    dw ArmCannonDrawingData_Default                                      ;90C81B;
    dw ArmCannonDrawingData_Default                                      ;90C81D;
    dw ArmCannonDrawingData_Default                                      ;90C81F;
    dw ArmCannonDrawingData_Default                                      ;90C821;
    dw ArmCannonDrawingData_Default                                      ;90C823;
    dw ArmCannonDrawingData_Default                                      ;90C825;
    dw ArmCannonDrawingData_Default                                      ;90C827;
    dw ArmCannonDrawingData_Default                                      ;90C829;
    dw ArmCannonDrawingData_Default                                      ;90C82B;
    dw ArmCannonDrawingData_FacingRight_Crouching                        ;90C82D;
    dw ArmCannonDrawingData_FacingLeft_Crouching                         ;90C82F;
    dw ArmCannonDrawingData_Default                                      ;90C831;
    dw ArmCannonDrawingData_Default                                      ;90C833;
    dw ArmCannonDrawingData_FacingRight_Falling_AimingUp                 ;90C835;
    dw ArmCannonDrawingData_FacingLeft_Falling_AimingUp                  ;90C837;
    dw ArmCannonDrawingData_FacingRight_Falling_AimingDown               ;90C839;
    dw ArmCannonDrawingData_FacingLeft_Falling_AimingDown                ;90C83B;
    dw ArmCannonDrawingData_Default                                      ;90C83D;
    dw ArmCannonDrawingData_Default                                      ;90C83F;
    dw ArmCannonDrawingData_Default                                      ;90C841;
    dw ArmCannonDrawingData_Default                                      ;90C843;
    dw ArmCannonDrawingData_Default                                      ;90C845;
    dw ArmCannonDrawingData_Default                                      ;90C847;
    dw ArmCannonDrawingData_Default                                      ;90C849;
    dw ArmCannonDrawingData_Default                                      ;90C84B;
    dw ArmCannonDrawingData_Default                                      ;90C84D;
    dw ArmCannonDrawingData_Default                                      ;90C84F;
    dw ArmCannonDrawingData_Default                                      ;90C851;
    dw ArmCannonDrawingData_Default                                      ;90C853;
    dw ArmCannonDrawingData_Default                                      ;90C855;
    dw ArmCannonDrawingData_Default                                      ;90C857;
    dw ArmCannonDrawingData_Default                                      ;90C859;
    dw ArmCannonDrawingData_Default                                      ;90C85B;
    dw ArmCannonDrawingData_Default                                      ;90C85D;
    dw ArmCannonDrawingData_Default                                      ;90C85F;
    dw ArmCannonDrawingData_Default                                      ;90C861;
    dw ArmCannonDrawingData_Default                                      ;90C863;
    dw ArmCannonDrawingData_Default                                      ;90C865;
    dw ArmCannonDrawingData_Default                                      ;90C867;
    dw ArmCannonDrawingData_Default                                      ;90C869;
    dw ArmCannonDrawingData_Default                                      ;90C86B;
    dw ArmCannonDrawingData_FacingRight                                  ;90C86D;
    dw ArmCannonDrawingData_FacingLeft                                   ;90C86F;
    dw ArmCannonDrawingData_FacingLeft_Moonwalk                          ;90C871;
    dw ArmCannonDrawingData_FacingRight_Moonwalk                         ;90C873;
    dw ArmCannonDrawingData_FacingRight_NormalJumpTransition             ;90C875;
    dw ArmCannonDrawingData_Default                                      ;90C877;
    dw ArmCannonDrawingData_Default                                      ;90C879;
    dw ArmCannonDrawingData_Default                                      ;90C87B;
    dw ArmCannonDrawingData_Default                                      ;90C87D;
    dw ArmCannonDrawingData_Default                                      ;90C87F;
    dw ArmCannonDrawingData_FacingRight_NormalJump_MovingForward         ;90C881;
    dw ArmCannonDrawingData_FacingLeft_NormalJump_MovingForward          ;90C883;
    dw ArmCannonDrawingData_Default                                      ;90C885;
    dw ArmCannonDrawingData_Default                                      ;90C887;
    dw ArmCannonDrawingData_FacingRight_Transition_AimingUp              ;90C889;
    dw ArmCannonDrawingData_FacingLeft_Transition_AimingUp               ;90C88B;
    dw ArmCannonDrawingData_FacingRight_AimingUpRight                    ;90C88D;
    dw ArmCannonDrawingData_FacingLeft_AimingUpLeft                      ;90C88F;
    dw ArmCannonDrawingData_FacingRight_AimingDownRight                  ;90C891;
    dw ArmCannonDrawingData_FacingLeft_AimingDownLeft                    ;90C893;
    dw ArmCannonDrawingData_Default                                      ;90C895;
    dw ArmCannonDrawingData_Default                                      ;90C897;
    dw ArmCannonDrawingData_Default                                      ;90C899;
    dw ArmCannonDrawingData_Default                                      ;90C89B;
    dw ArmCannonDrawingData_Default                                      ;90C89D;
    dw ArmCannonDrawingData_Default                                      ;90C89F;
    dw ArmCannonDrawingData_Default                                      ;90C8A1;
    dw ArmCannonDrawingData_Default                                      ;90C8A3;
    dw ArmCannonDrawingData_Default                                      ;90C8A5;
    dw ArmCannonDrawingData_Default                                      ;90C8A7;
    dw ArmCannonDrawingData_Default                                      ;90C8A9;
    dw ArmCannonDrawingData_Default                                      ;90C8AB;
    dw ArmCannonDrawingData_FacingRight_Falling_GunExtended              ;90C8AD;
    dw ArmCannonDrawingData_FacingLeft_Falling_GunExtended               ;90C8AF;
    dw ArmCannonDrawingData_FacingRight_NormalJump_AimingUpRight         ;90C8B1;
    dw ArmCannonDrawingData_FacingLeft_NormalJump_AimingUpLeft           ;90C8B3;
    dw ArmCannonDrawingData_FacingRight_NormalJump_AimingDownRight       ;90C8B5;
    dw ArmCannonDrawingData_FacingLeft_NormalJump_AimingDownLeft         ;90C8B7;
    dw ArmCannonDrawingData_FacingRight_Falling_AimingUpRight            ;90C8B9;
    dw ArmCannonDrawingData_FacingLeft_Falling_AimingUpLeft              ;90C8BB;
    dw ArmCannonDrawingData_FacingRight_Falling_AimingDownRight          ;90C8BD;
    dw ArmCannonDrawingData_FacingLeft_Falling_AimingDownLeft            ;90C8BF;
    dw ArmCannonDrawingData_FacingRight_Crouching_AimingUpRight          ;90C8C1;
    dw ArmCannonDrawingData_FacingLeft_Crouching_AimingUpLeft            ;90C8C3;
    dw ArmCannonDrawingData_FacingRight_Crouching_AimingDownRight        ;90C8C5;
    dw ArmCannonDrawingData_FacingLeft_Crouching_AimingDownLeft          ;90C8C7;
    dw ArmCannonDrawingData_FacingLeft_Moonwalk_AimingUpLeft             ;90C8C9;
    dw ArmCannonDrawingData_FacingRight_Moonwalk_AimingUpRight           ;90C8CB;
    dw ArmCannonDrawingData_FacingLeft_Moonwalk_AimingDownLeft           ;90C8CD;
    dw ArmCannonDrawingData_FacingRight_Moonwalk_AimingDownRight         ;90C8CF;
    dw ArmCannonDrawingData_Default                                      ;90C8D1;
    dw ArmCannonDrawingData_Default                                      ;90C8D3;
    dw ArmCannonDrawingData_Default                                      ;90C8D5;
    dw ArmCannonDrawingData_Default                                      ;90C8D7;
    dw ArmCannonDrawingData_Default                                      ;90C8D9;
    dw ArmCannonDrawingData_Default                                      ;90C8DB;
    dw ArmCannonDrawingData_Default                                      ;90C8DD;
    dw ArmCannonDrawingData_Default                                      ;90C8DF;
    dw ArmCannonDrawingData_Default                                      ;90C8E1;
    dw ArmCannonDrawingData_Default                                      ;90C8E3;
    dw ArmCannonDrawingData_Default                                      ;90C8E5;
    dw ArmCannonDrawingData_Default                                      ;90C8E7;
    dw ArmCannonDrawingData_FacingRight_Crouching_AimingUp               ;90C8E9;
    dw ArmCannonDrawingData_FacingLeft_Crouching_AimingUp                ;90C8EB;
    dw ArmCannonDrawingData_Default                                      ;90C8ED;
    dw ArmCannonDrawingData_Default                                      ;90C8EF;
    dw ArmCannonDrawingData_FacingRight                                  ;90C8F1;
    dw ArmCannonDrawingData_FacingLeft                                   ;90C8F3;
    dw ArmCannonDrawingData_Default                                      ;90C8F5;
    dw ArmCannonDrawingData_Default                                      ;90C8F7;
    dw ArmCannonDrawingData_Default                                      ;90C8F9;
    dw ArmCannonDrawingData_Default                                      ;90C8FB;
    dw ArmCannonDrawingData_Default                                      ;90C8FD;
    dw ArmCannonDrawingData_Default                                      ;90C8FF;
    dw ArmCannonDrawingData_Default                                      ;90C901;
    dw ArmCannonDrawingData_Default                                      ;90C903;
    dw ArmCannonDrawingData_Default                                      ;90C905;
    dw ArmCannonDrawingData_Default                                      ;90C907;
    dw ArmCannonDrawingData_Default                                      ;90C909;
    dw ArmCannonDrawingData_Default                                      ;90C90B;
    dw ArmCannonDrawingData_Default                                      ;90C90D;
    dw ArmCannonDrawingData_Default                                      ;90C90F;
    dw ArmCannonDrawingData_Default                                      ;90C911;
    dw ArmCannonDrawingData_Default                                      ;90C913;
    dw ArmCannonDrawingData_FacingForward                                ;90C915;
    dw ArmCannonDrawingData_Default                                      ;90C917;
    dw ArmCannonDrawingData_Default                                      ;90C919;
    dw ArmCannonDrawingData_Default                                      ;90C91B;
    dw ArmCannonDrawingData_Default                                      ;90C91D;
    dw ArmCannonDrawingData_Default                                      ;90C91F;
    dw ArmCannonDrawingData_Default                                      ;90C921;
    dw ArmCannonDrawingData_Default                                      ;90C923;
    dw ArmCannonDrawingData_Default                                      ;90C925;
    dw ArmCannonDrawingData_FacingRight_LandingFromNormalJump            ;90C927;
    dw ArmCannonDrawingData_Default                                      ;90C929;
    dw ArmCannonDrawingData_FacingRight_LandingFromSpinJump              ;90C92B;
    dw ArmCannonDrawingData_Default                                      ;90C92D;
    dw ArmCannonDrawingData_FacingRight                                  ;90C92F;
    dw ArmCannonDrawingData_FacingLeft                                   ;90C931;
    dw ArmCannonDrawingData_FacingRight_AimingDownRight                  ;90C933;
    dw ArmCannonDrawingData_FacingLeft_AimingDownLeft                    ;90C935;
    dw ArmCannonDrawingData_FacingRight_NormalJump_NotMoving_GunExt      ;90C937;
    dw ArmCannonDrawingData_FacingLeft_NormalJump_NotMoving_GunExt       ;90C939;
    dw ArmCannonDrawingData_FacingRight_NormalJump_AimingDown            ;90C93B;
    dw ArmCannonDrawingData_FacingLeft_NormalJump_AimingDown             ;90C93D;
    dw ArmCannonDrawingData_FacingRight_NormalJump_AimingDownRight       ;90C93F;
    dw ArmCannonDrawingData_FacingLeft_NormalJump_AimingDownLeft         ;90C941;
    dw ArmCannonDrawingData_Default                                      ;90C943;
    dw ArmCannonDrawingData_Default                                      ;90C945;
    dw ArmCannonDrawingData_FacingRight_Crouching                        ;90C947;
    dw ArmCannonDrawingData_FacingLeft_Crouching                         ;90C949;
    dw ArmCannonDrawingData_FacingRight_Crouching_AimingDownRight        ;90C94B;
    dw ArmCannonDrawingData_FacingLeft_Crouching_AimingDownLeft          ;90C94D;
    dw ArmCannonDrawingData_Default                                      ;90C94F;
    dw ArmCannonDrawingData_Default                                      ;90C951;
    dw ArmCannonDrawingData_Default                                      ;90C953;
    dw ArmCannonDrawingData_FacingLeft_AimingUpLeft                      ;90C955;
    dw ArmCannonDrawingData_FacingLeft                                   ;90C957;
    dw ArmCannonDrawingData_FacingLeft_AimingDownLeft                    ;90C959;
    dw ArmCannonDrawingData_Default                                      ;90C95B;
    dw ArmCannonDrawingData_Default                                      ;90C95D;
    dw ArmCannonDrawingData_Default                                      ;90C95F;
    dw ArmCannonDrawingData_Default                                      ;90C961;
    dw ArmCannonDrawingData_Default                                      ;90C963;
    dw ArmCannonDrawingData_Default                                      ;90C965;
    dw ArmCannonDrawingData_Default                                      ;90C967;
    dw ArmCannonDrawingData_Default                                      ;90C969;
    dw ArmCannonDrawingData_Default                                      ;90C96B;
    dw ArmCannonDrawingData_Default                                      ;90C96D;
    dw ArmCannonDrawingData_Default                                      ;90C96F;
    dw ArmCannonDrawingData_Default                                      ;90C971;
    dw ArmCannonDrawingData_Default                                      ;90C973;
    dw ArmCannonDrawingData_Default                                      ;90C975;
    dw ArmCannonDrawingData_Default                                      ;90C977;
    dw ArmCannonDrawingData_Default                                      ;90C979;
    dw ArmCannonDrawingData_Default                                      ;90C97B;
    dw ArmCannonDrawingData_FacingRight_AimingUpRight                    ;90C97D;
    dw ArmCannonDrawingData_FacingLeft_AimingUpLeft                      ;90C97F;
    dw ArmCannonDrawingData_FacingRight_AimingDownRight                  ;90C981;
    dw ArmCannonDrawingData_FacingLeft_AimingDownLeft                    ;90C983;
    dw ArmCannonDrawingData_Default                                      ;90C985;
    dw ArmCannonDrawingData_Default                                      ;90C987;
    dw ArmCannonDrawingData_Default                                      ;90C989;
    dw ArmCannonDrawingData_Default                                      ;90C98B;
    dw ArmCannonDrawingData_Default                                      ;90C98D;
    dw ArmCannonDrawingData_Default                                      ;90C98F;
    dw ArmCannonDrawingData_Default                                      ;90C991;
    dw ArmCannonDrawingData_Default                                      ;90C993;
    dw ArmCannonDrawingData_Default                                      ;90C995;
    dw ArmCannonDrawingData_Default                                      ;90C997;
    dw ArmCannonDrawingData_Default                                      ;90C999;
    dw ArmCannonDrawingData_Default                                      ;90C99B;
    dw ArmCannonDrawingData_Default                                      ;90C99D;
    dw ArmCannonDrawingData_FacingRight_Transition_AimingUp              ;90C99F;
    dw ArmCannonDrawingData_FacingLeft_Transition_AimingUp               ;90C9A1;
    dw ArmCannonDrawingData_FacingRight_AimingUpRight                    ;90C9A3;
    dw ArmCannonDrawingData_FacingLeft_AimingUpLeft                      ;90C9A5;
    dw ArmCannonDrawingData_FacingRight_AimingDownRight                  ;90C9A7;
    dw ArmCannonDrawingData_FacingLeft_AimingDownLeft                    ;90C9A9;
    dw ArmCannonDrawingData_FacingRight                                  ;90C9AB;
    dw ArmCannonDrawingData_FacingLeft                                   ;90C9AD;
    dw ArmCannonDrawingData_Default                                      ;90C9AF;
    dw ArmCannonDrawingData_Default                                      ;90C9B1;
    dw ArmCannonDrawingData_Default                                      ;90C9B3;
    dw ArmCannonDrawingData_Default                                      ;90C9B5;
    dw ArmCannonDrawingData_Default                                      ;90C9B7;
    dw ArmCannonDrawingData_FacingRight_AimingUpRight                    ;90C9B9;
    dw ArmCannonDrawingData_FacingRight                                  ;90C9BB;
    dw ArmCannonDrawingData_FacingRight_AimingDownRight                  ;90C9BD;
    dw ArmCannonDrawingData_Default                                      ;90C9BF;
    dw ArmCannonDrawingData_FacingRight_Transition_AimingUp              ;90C9C1;
    dw ArmCannonDrawingData_FacingLeft_Transition_AimingUp               ;90C9C3;
    dw ArmCannonDrawingData_FacingRight_AimingUpRight                    ;90C9C5;
    dw ArmCannonDrawingData_FacingLeft_AimingUpLeft                      ;90C9C7;
    dw ArmCannonDrawingData_FacingRight_AimingDownRight                  ;90C9C9;
    dw ArmCannonDrawingData_FacingLeft_AimingDownLeft                    ;90C9CB;
    dw ArmCannonDrawingData_FacingRight_Transition_AimingUp              ;90C9CD;
    dw ArmCannonDrawingData_FacingLeft_Transition_AimingUp               ;90C9CF;
    dw ArmCannonDrawingData_FacingRight_AimingUpRight                    ;90C9D1;
    dw ArmCannonDrawingData_FacingLeft_AimingUpLeft                      ;90C9D3;
    dw ArmCannonDrawingData_FacingRight_AimingDownRight                  ;90C9D5;
    dw ArmCannonDrawingData_FacingLeft_AimingDownLeft                    ;90C9D7;


; Format:
;     dd aa
;     [DD aa] ; If d & 80h != 0
;     [xx yy]...
;
; where
;     d: Direction
;     D: Direction if [Samus animation frame] != 0
;     {
;         0: Up, facing right
;         1: Up-right
;         2: Right
;         3: Down-right
;         4: Down, facing right
;         5: Down, facing left
;         6: Down-left
;         7: Left
;         8: Up-left
;         9: Up, facing left
;     }
;     a: Arm cannon drawing mode
;     {
;         0: Arm cannon isn't drawn
;         1: Arm cannon is drawn normally
;         2: Samus is facing forward (same as 0?)
;     }
;     x/y: X/Y offsets, indexed by [Samus animation frame]
ArmCannonDrawingData_Default:
; All other poses
    db $00,$00                                                           ;90C9D9;

ArmCannonDrawingData_FacingForward:
; 0: Facing forward - power suit
; 9Bh: Facing forward - varia/gravity suit
    db $00,$02                                                           ;90C9DB;

ArmCannonDrawingData_FacingRight:
; 1: Facing right - normal
; 47h: Unused
; 89h: Facing right - ran into a wall
; A8h: Unused
; E6h: Facing right - landing from normal jump - firing
; EEh: Facing right - grabbed by Draygon - firing
    db $02,$01,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD   ;90C9DD;
    db $0B,$FD,$0B,$FD                                                   ;90C9ED;

ArmCannonDrawingData_FacingLeft:
; 2: Facing left  - normal
; 48h: Unused
; 8Ah: Facing left  - ran into a wall
; A9h: Unused
; BCh: Facing left  - grabbed by Draygon - firing
; E7h: Facing left  - landing from normal jump - firing
    db $07,$01,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD   ;90C9F1;
    db $ED,$FD,$ED,$FD                                                   ;90CA01;

ArmCannonDrawingData_FacingRight_AimingUp:
; 3: Facing right - aiming up
    db $81,$01,$80,$01,$0E,$EA,$FE,$E1                                   ;90CA05;

ArmCannonDrawingData_FacingLeft_AimingUp:
; 4: Facing left  - aiming up
    db $88,$01,$89,$01,$EA,$E9,$FA,$E1                                   ;90CA0D;

ArmCannonDrawingData_FacingRight_AimingUpRight:
; 5: Facing right - aiming up-right
; 57h: Facing right - normal jump transition - aiming up-right
; CFh: Facing right - ran into a wall - aiming up-right
; E2h: Facing right - landing from normal jump - aiming up-right
; EDh: Facing right - grabbed by Draygon - not moving - aiming up-right
; F3h: Facing right - crouching transition - aiming up-right
; F9h: Facing right - standing transition - aiming up-right
    db $01,$01,$0D,$EA                                                   ;90CA15;

ArmCannonDrawingData_FacingLeft_AimingUpLeft:
; 6: Facing left  - aiming up-left
; 58h: Facing left  - normal jump transition - aiming up-left
; BBh: Facing left  - grabbed by Draygon - not moving - aiming up-left
; D0h: Facing left  - ran into a wall - aiming up-left
; E3h: Facing left  - landing from normal jump - aiming up-left
; F4h: Facing left  - crouching transition - aiming up-left
; FAh: Facing left  - standing transition - aiming up-left
    db $08,$01,$EB,$E9                                                   ;90CA19;

ArmCannonDrawingData_FacingRight_AimingDownRight:
; 7: Facing right - aiming down-right
; 59h: Facing right - normal jump transition - aiming down-right
; AAh: Unused
; D1h: Facing right - ran into a wall - aiming down-right
; E4h: Facing right - landing from normal jump - aiming down-right
; EFh: Facing right - grabbed by Draygon - not moving - aiming down-right
; F5h: Facing right - crouching transition - aiming down-right
; FBh: Facing right - standing transition - aiming down-right
    db $03,$01,$0D,$02                                                   ;90CA1D;

ArmCannonDrawingData_FacingLeft_AimingDownLeft:
; 8: Facing left  - aiming down-left
; 5Ah: Facing left  - normal jump transition - aiming down-left
; ABh: Unused
; BDh: Facing left  - grabbed by Draygon - not moving - aiming down-left
; D2h: Facing left  - ran into a wall - aiming down-left
; E5h: Facing left  - landing from normal jump - aiming down-left
; F6h: Facing left  - crouching transition - aiming down-left
; FCh: Facing left  - standing transition - aiming down-left
    db $06,$01,$EB,$02                                                   ;90CA21;

ArmCannonDrawingData_MovingRight_GunExtended:
; Bh: Moving right - gun extended
    db $02,$01,$11,$FA,$11,$FA,$11,$F9,$11,$F8,$11,$F9,$11,$FA,$11,$F9   ;90CA25;
    db $11,$F9,$11,$F8,$11,$F9                                           ;90CA35;

ArmCannonDrawingData_MovingLeft_GunExtended:
; Ch: Moving left  - gun extended
    db $07,$01,$E7,$FA,$E7,$FA,$E7,$F8,$E7,$F9,$E7,$F9,$E7,$FA,$E7,$F9   ;90CA3B;
    db $E7,$F8,$E7,$F9,$E7,$F9                                           ;90CA4B;

ArmCannonDrawingData_MovingRight_AimingUpRight:
; Fh: Moving right - aiming up-right
    db $01,$01,$0C,$EA,$0C,$EA,$0C,$E9,$0C,$E8,$0C,$E9,$0C,$EA,$0C,$EA   ;90CA51;
    db $0C,$E9,$0C,$E8,$0C,$E9                                           ;90CA61;

ArmCannonDrawingData_MovingLeft_AimingUpLeft:
; 10h: Moving left  - aiming up-left
    db $08,$01,$EC,$EA,$EC,$EA,$EC,$E9,$EC,$E8,$EC,$E9,$EC,$EA,$EC,$EA   ;90CA67;
    db $EC,$E9,$EC,$E8,$EC,$E9                                           ;90CA77;

ArmCannonDrawingData_MovingRight_AimingDownRight:
; 11h: Moving right - aiming down-right
    db $03,$01,$0B,$01,$0B,$01,$0B,$00,$0B,$FF,$0B,$00,$0B,$01,$0B,$01   ;90CA7D;
    db $0B,$00,$0B,$FF,$0B,$00                                           ;90CA8D;

ArmCannonDrawingData_MovingLeft_AimingDownLeft:
; 12h: Moving left  - aiming down-left
    db $06,$01,$ED,$01,$ED,$01,$ED,$00,$ED,$FF,$ED,$00,$ED,$01,$ED,$01   ;90CA93;
    db $ED,$00,$ED,$FF,$ED,$00                                           ;90CAA3;

ArmCannonDrawingData_FacingRight_NormalJump_NotMoving_GunExt:
; 13h: Facing right - normal jump - not aiming - not moving - gun extended
; ACh: Unused
    db $02,$01,$0B,$FD,$0B,$FD                                           ;90CAA9;

ArmCannonDrawingData_FacingLeft_NormalJump_NotMoving_GunExt:
; 14h: Facing left  - normal jump - not aiming - not moving - gun extended
; ADh: Unused
    db $07,$01,$ED,$FD,$ED,$FD                                           ;90CAAF;

ArmCannonDrawingData_FacingRight_NormalJump_AimingUp:
; 15h: Facing right - normal jump - aiming up
    db $81,$01,$80,$01,$0E,$E9,$FE,$E0                                   ;90CAB5;

ArmCannonDrawingData_FacingLeft_NormalJump_AimingUp:
; 16h: Facing left  - normal jump - aiming up
    db $88,$01,$89,$01,$EA,$E8,$FA,$E0                                   ;90CABD;

ArmCannonDrawingData_FacingRight_NormalJump_AimingDown:
; 17h: Facing right - normal jump - aiming down
; AEh: Unused
    db $04,$01,$00,$0D,$00,$0D                                           ;90CAC5;

ArmCannonDrawingData_FacingLeft_NormalJump_AimingDown:
; 18h: Facing left  - normal jump - aiming down
; AFh: Unused
    db $05,$01,$F7,$0D,$F7,$0D                                           ;90CACB;

ArmCannonDrawingData_FacingRight_NormalJumpTransition:
; 4Bh: Facing right - normal jump transition
    db $03,$01,$FB,$00,$06,$02,$ED,$FE                                   ;90CAD1;

ArmCannonDrawingData_FacingRight_NormalJump_MovingForward:
; 51h: Facing right - normal jump - not aiming - moving forward
    db $02,$01,$0B,$FD,$0B,$FD                                           ;90CAD9;

ArmCannonDrawingData_FacingLeft_NormalJump_MovingForward:
; 52h: Facing left  - normal jump - not aiming - moving forward
    db $07,$01,$ED,$FD,$ED,$FD                                           ;90CADF;

ArmCannonDrawingData_FacingRight_NormalJump_AimingUpRight:
; 69h: Facing right - normal jump - aiming up-right
    db $01,$01,$0C,$EA,$0C,$EA                                           ;90CAE5;

ArmCannonDrawingData_FacingLeft_NormalJump_AimingUpLeft:
; 6Ah: Facing left  - normal jump - aiming up-left
    db $08,$01,$EC,$EA,$EC,$EA                                           ;90CAEB;

ArmCannonDrawingData_FacingRight_NormalJump_AimingDownRight:
; 6Bh: Facing right - normal jump - aiming down-right
; B0h: Unused
    db $03,$01,$0B,$01,$0B,$01                                           ;90CAF1;

ArmCannonDrawingData_FacingLeft_NormalJump_AimingDownLeft:
; 6Ch: Facing left  - normal jump - aiming down-left
; B1h: Unused
    db $06,$01,$ED,$01,$ED,$01                                           ;90CAF7;

ArmCannonDrawingData_FacingRight_Falling_GunExtended:
; 67h: Facing right - falling - gun extended
    db $02,$01,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD   ;90CAFD;

ArmCannonDrawingData_FacingLeft_Falling_GunExtended:
; 68h: Facing left  - falling - gun extended
    db $07,$01,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD   ;90CB0D;

ArmCannonDrawingData_FacingRight_Falling_AimingUp:
; 2Bh: Facing right - falling - aiming up
    db $81,$01,$80,$01,$0E,$E9,$FE,$E0,$FE,$E0                           ;90CB1D;

ArmCannonDrawingData_FacingLeft_Falling_AimingUp:
; 2Ch: Facing left  - falling - aiming up
    db $88,$01,$89,$01,$EA,$E8,$FA,$E4,$FA,$E4                           ;90CB27;

ArmCannonDrawingData_FacingRight_Falling_AimingDown:
; 2Dh: Facing right - falling - aiming down
    db $04,$01,$00,$09,$00,$09                                           ;90CB31;

ArmCannonDrawingData_FacingLeft_Falling_AimingDown:
; 2Eh: Facing left  - falling - aiming down
    db $05,$01,$F7,$09,$F7,$09                                           ;90CB37;

ArmCannonDrawingData_FacingRight_Falling_AimingUpRight:
; 6Dh: Facing right - falling - aiming up-right
    db $01,$01,$0C,$EA,$0C,$EA,$0C,$EA                                   ;90CB3D;

ArmCannonDrawingData_FacingLeft_Falling_AimingUpLeft:
; 6Eh: Facing left  - falling - aiming up-left
    db $08,$01,$EC,$EA,$EC,$EA,$EC,$EA                                   ;90CB45;

ArmCannonDrawingData_FacingRight_Falling_AimingDownRight:
; 6Fh: Facing right - falling - aiming down-right
    db $03,$01,$0B,$01,$0B,$01,$0B,$01                                   ;90CB4D;

ArmCannonDrawingData_FacingLeft_Falling_AimingDownLeft:
; 70h: Facing left  - falling - aiming down-left
    db $06,$01,$ED,$01,$ED,$01,$ED,$01                                   ;90CB55;

ArmCannonDrawingData_FacingRight_Crouching:
; 27h: Facing right - crouching
; B4h: Unused
    db $02,$01,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD,$0B,$FD   ;90CB5D;
    db $0B,$FD,$0B,$FD                                                   ;90CB6D;

ArmCannonDrawingData_FacingLeft_Crouching:
; 28h: Facing left  - crouching
; B5h: Unused
    db $07,$01,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD,$ED,$FD   ;90CB71;
    db $ED,$FD,$ED,$FD                                                   ;90CB81;

ArmCannonDrawingData_FacingRight_Crouching_AimingUpRight:
; 71h: Facing right - crouching - aiming up-right
    db $01,$01,$0E,$E9                                                   ;90CB85;

ArmCannonDrawingData_FacingLeft_Crouching_AimingUpLeft:
; 72h: Facing left  - crouching - aiming up-left
    db $08,$01,$EA,$E8                                                   ;90CB89;

ArmCannonDrawingData_FacingRight_Crouching_AimingDownRight:
; 73h: Facing right - crouching - aiming down-right
    db $03,$01,$0D,$02                                                   ;90CB8D;

ArmCannonDrawingData_FacingLeft_Crouching_AimingDownLeft:
; 74h: Facing left  - crouching - aiming down-left
; B7h: Unused
    db $06,$01,$EB,$02                                                   ;90CB91;

ArmCannonDrawingData_FacingRight_Crouching_AimingUp:
; 85h: Facing right - crouching - aiming up
    db $81,$01,$80,$01,$0E,$E9,$FE,$E0                                   ;90CB95;

ArmCannonDrawingData_FacingLeft_Crouching_AimingUp:
; 86h: Facing left  - crouching - aiming up
    db $88,$01,$89,$01,$EA,$E8,$FA,$E0                                   ;90CB9D;

ArmCannonDrawingData_FacingLeft_Moonwalk:
; 49h: Facing left  - moonwalk
    db $02,$01,$F1,$FD,$F1,$FC,$F1,$FC,$F1,$FD,$F1,$FC,$F1,$FC           ;90CBA5;

ArmCannonDrawingData_FacingRight_Moonwalk:
; 4Ah: Facing right - moonwalk
    db $07,$01,$07,$FD,$07,$FC,$07,$FC,$07,$FD,$07,$FC,$07,$FC           ;90CBB3;

ArmCannonDrawingData_FacingLeft_Moonwalk_AimingUpLeft:
; 75h: Facing left  - moonwalk - aiming up-left
    db $08,$01,$EC,$EA,$EC,$E9,$EC,$E9,$EC,$EA,$EC,$E9,$EC,$E9           ;90CBC1;

ArmCannonDrawingData_FacingRight_Moonwalk_AimingUpRight:
; 76h: Facing right - moonwalk - aiming up-right
    db $01,$01,$0C,$EA,$0C,$E9,$0C,$E9,$0C,$EA,$0C,$E9,$0C,$E9           ;90CBCF;

ArmCannonDrawingData_FacingLeft_Moonwalk_AimingDownLeft:
; 77h: Facing left  - moonwalk - aiming down-left
    db $06,$01,$ED,$01,$ED,$00,$ED,$00,$ED,$01,$ED,$00,$ED,$00           ;90CBDD;

ArmCannonDrawingData_FacingRight_Moonwalk_AimingDownRight:
; 78h: Facing right - moonwalk - aiming down-right
    db $03,$01,$0B,$01,$0B,$00,$0B,$00,$0B,$01,$0B,$00,$0B,$00           ;90CBEB;

ArmCannonDrawingData_FacingRight_LandingFromNormalJump:
; A4h: Facing right - landing from normal jump
    db $03,$01,$FB,$00,$FB,$00,$06,$02,$ED,$FE,$ED,$FE                   ;90CBF9;

ArmCannonDrawingData_FacingRight_LandingFromSpinJump:
; A6h: Facing right - landing from spin jump
    db $03,$01,$FB,$00,$FB,$00,$FB,$00,$06,$02,$ED,$FE,$ED,$FE,$ED,$FE   ;90CC05;

ArmCannonDrawingData_FacingRight_Transition_AimingUp:
; 55h: Facing right - normal jump transition - aiming up
; E0h: Facing right - landing from normal jump - aiming up
; F1h: Facing right - crouching transition - aiming up
; F7h: Facing right - standing transition - aiming up
    db $00,$01,$FE,$E1,$FE,$E1                                           ;90CC15;

ArmCannonDrawingData_FacingLeft_Transition_AimingUp:
; 56h: Facing left  - normal jump transition - aiming up
; E1h: Facing left  - landing from normal jump - aiming up
; F2h: Facing left  - crouching transition - aiming up
; F8h: Facing left  - standing transition - aiming up
    db $09,$01,$FA,$E1,$FA,$E1                                           ;90CC1B;

CostOfSBAsInPowerBombs:                                                  ;90CC21;
; Obviously only the pure beams have non-zero values, and obviously they're all 1
; This table sucks
    dw $0000 ; 0: Power
    dw $0001 ; 1: Wave
    dw $0001 ; 2: Ice
    dw $0000 ; 3: Ice + wave
    dw $0001 ; 4: Spazer
    dw $0000 ; 5: Spazer + wave
    dw $0000 ; 6: Spazer + ice
    dw $0000 ; 7: Spazer + ice + wave
    dw $0001 ; 8: Plasma
    dw $0000 ; 9: Plasma + wave
    dw $0000 ; Ah: Plasma + ice
    dw $0000 ; Bh: Plasma + ice + wave

Math_90CC39:
    PHP                                                                  ;90CC39;
    REP #$30                                                             ;90CC3A;
    PHX                                                                  ;90CC3C;
    STA.B $18                                                            ;90CC3D;
    TYA                                                                  ;90CC3F;
    STA.B $1A                                                            ;90CC40;
    CMP.W #$0080                                                         ;90CC42;
    BPL .greaterThanEqualTo80                                            ;90CC45;
    ASL A                                                                ;90CC47;
    TAX                                                                  ;90CC48;
    JSR.W Math_90CC8A                                                    ;90CC49;
    BRA +                                                                ;90CC4C;


.greaterThanEqualTo80:
    SEC                                                                  ;90CC4E;
    SBC.W #$0080                                                         ;90CC4F;
    AND.W #$00FF                                                         ;90CC52;
    ASL A                                                                ;90CC55;
    TAX                                                                  ;90CC56;
    JSR.W Math_90CC8A                                                    ;90CC57;
    EOR.W #$FFFF                                                         ;90CC5A;
    INC A                                                                ;90CC5D;

  + STA.B $14                                                            ;90CC5E;
    LDA.B $1A                                                            ;90CC60;
    SEC                                                                  ;90CC62;
    SBC.W #$0040                                                         ;90CC63;
    AND.W #$00FF                                                         ;90CC66;
    CMP.W #$0080                                                         ;90CC69;
    BPL .AGreaterThanEqualTo80                                           ;90CC6C;
    ASL A                                                                ;90CC6E;
    TAX                                                                  ;90CC6F;
    JSR.W Math_90CC8A                                                    ;90CC70;
    BRA +                                                                ;90CC73;


.AGreaterThanEqualTo80:
    SEC                                                                  ;90CC75;
    SBC.W #$0080                                                         ;90CC76;
    AND.W #$00FF                                                         ;90CC79;
    ASL A                                                                ;90CC7C;
    TAX                                                                  ;90CC7D;
    JSR.W Math_90CC8A                                                    ;90CC7E;
    EOR.W #$FFFF                                                         ;90CC81;
    INC A                                                                ;90CC84;

  + STA.B $16                                                            ;90CC85;
    PLX                                                                  ;90CC87;
    PLP                                                                  ;90CC88;
    RTS                                                                  ;90CC89;


Math_90CC8A:
    SEP #$20                                                             ;90CC8A;
    LDA.L SineCosineTables_8bitSine_SignExtended,X                       ;90CC8C;
    STA.W $4202                                                          ;90CC90;
    LDA.B $18                                                            ;90CC93;
    STA.W $4203                                                          ;90CC95;
    NOP                                                                  ;90CC98;
    NOP                                                                  ;90CC99;
    NOP                                                                  ;90CC9A;
    REP #$20                                                             ;90CC9B;
    LDA.W $4216                                                          ;90CC9D;
    XBA                                                                  ;90CCA0;
    AND.W #$00FF                                                         ;90CCA1;
    STA.B $12                                                            ;90CCA4;
    SEP #$20                                                             ;90CCA6;
    LDA.L SineCosineTables_8bitSine_SignExtended+1,X                     ;90CCA8;
    STA.W $4202                                                          ;90CCAC;
    LDA.B $18                                                            ;90CCAF;
    STA.W $4203                                                          ;90CCB1;
    NOP                                                                  ;90CCB4;
    NOP                                                                  ;90CCB5;
    NOP                                                                  ;90CCB6;
    REP #$20                                                             ;90CCB7;
    LDA.W $4216                                                          ;90CCB9;
    CLC                                                                  ;90CCBC;
    ADC.B $12                                                            ;90CCBD;
    RTS                                                                  ;90CCBF;


FireSBA:
    LDA.W $09D2                                                          ;90CCC0;
    CMP.W #$0003                                                         ;90CCC3;
    BEQ .powerBombsSelected                                              ;90CCC6;
    CLC                                                                  ;90CCC8;
    RTS                                                                  ;90CCC9;


.powerBombsSelected:
    LDA.W $09A6                                                          ;90CCCA;
    AND.W #$000F                                                         ;90CCCD;
    ASL A                                                                ;90CCD0;
    TAX                                                                  ;90CCD1;
    LDA.W $09CE                                                          ;90CCD2;
    SEC                                                                  ;90CCD5;
    SBC.W CostOfSBAsInPowerBombs,X                                       ;90CCD6;
    BPL +                                                                ;90CCD9;
    LDA.W #$0000                                                         ;90CCDB;

  + STA.W $09CE                                                          ;90CCDE;
    JSR.W (.pointers,X)                                                  ;90CCE1;
    LDA.W $09CE                                                          ;90CCE4;
    BNE .return                                                          ;90CCE7;
    STZ.W $09D2                                                          ;90CCE9;
    STZ.W $0A04                                                          ;90CCEC;

.return:
    RTS                                                                  ;90CCEF;


.pointers:
    dw CLCRTS_90CD18                                                     ;90CCF0; 0: Power
    dw FireWaveSBA                                                       ;90CCF2; 1: Wave
    dw FireIceSBA                                                        ;90CCF4; 2: Ice
    dw CLCRTS_90CD18                                                     ;90CCF6; 3: Ice + wave
    dw FireSpazerSBA                                                     ;90CCF8; 4: Spazer
    dw CLCRTS_90CD18                                                     ;90CCFA; 5: Spazer + wave
    dw CLCRTS_90CD18                                                     ;90CCFC; 6: Spazer + ice
    dw CLCRTS_90CD18                                                     ;90CCFE; 7: Spazer + ice + wave
    dw FirePlasmaSBA                                                     ;90CD00; 8: Plasma
    dw CLCRTS_90CD18                                                     ;90CD02; 9: Plasma + wave
    dw CLCRTS_90CD18                                                     ;90CD04; Ah: Plasma + ice
    dw CLCRTS_90CD18                                                     ;90CD06; Bh: Plasma + ice + wave

IcePlasmaSBAProjectileOriginAngles:                                      ;90CD08;
; Angle of projectiles from Samus (2pi / 100h radians clockwise, 0 = up) for ice/plasma SBA
    dw $0000
    dw $0040
    dw $0080
    dw $00C0
    dw $0020 ; Unused
    dw $0060 ; Unused
    dw $00A0 ; Unused
    dw $00E0 ; Unused

CLCRTS_90CD18:
    CLC                                                                  ;90CD18;
    RTS                                                                  ;90CD19;


FireWaveSBA:
    LDX.W #$0006                                                         ;90CD1A;

.loop:
    LDA.W #$0004                                                         ;90CD1D;
    STA.W $0C90,X                                                        ;90CD20;
    LDA.W $09A6                                                          ;90CD23;
    AND.W #$100F                                                         ;90CD26;
    ORA.W #$8010                                                         ;90CD29;
    STA.W $0C18,X                                                        ;90CD2C;
    STZ.W $0C04,X                                                        ;90CD2F;
    LDA.W #ProjectilePreInstruction_WaveSBA                              ;90CD32;
    STA.W $0C68,X                                                        ;90CD35;
    LDA.W #$01E0                                                         ;90CD38;
    STA.W $0BF0,X                                                        ;90CD3B;
    STZ.W $0BDC,X                                                        ;90CD3E;
    STZ.W $0C7C,X                                                        ;90CD41;
    STZ.W $0B8C,X                                                        ;90CD44;
    STZ.W $0BA0,X                                                        ;90CD47;
    LDA.W $0AF6                                                          ;90CD4A;
    CLC                                                                  ;90CD4D;
    ADC.W .XOffsets,X                                                    ;90CD4E;
    STA.W $0B64,X                                                        ;90CD51;
    LDA.W $0AFA                                                          ;90CD54;
    CLC                                                                  ;90CD57;
    ADC.W .YOffsets,X                                                    ;90CD58;
    STA.W $0B78,X                                                        ;90CD5B;
    JSL.L InitializeSBAProjectile                                        ;90CD5E;
    DEX                                                                  ;90CD62;
    DEX                                                                  ;90CD63;
    BPL .loop                                                            ;90CD64;
    LDA.W #$0004                                                         ;90CD66;
    STA.W $0CCE                                                          ;90CD69;
    LDA.W $0C18                                                          ;90CD6C;
    AND.W #$003F                                                         ;90CD6F;
    TAY                                                                  ;90CD72;
    LDA.W ProjectileCooldowns_Uncharged,Y                                ;90CD73;
    AND.W #$00FF                                                         ;90CD76;
    STA.W $0CCC                                                          ;90CD79;
    LDA.W #$0004                                                         ;90CD7C;
    STA.W $0B60                                                          ;90CD7F;
    LDA.W #$0028                                                         ;90CD82;
    JSL.L QueueSound_Lib1_Max6                                           ;90CD85;
    SEC                                                                  ;90CD89;
    RTS                                                                  ;90CD8A;


.XOffsets:
; X offsets from Samus
    dw $0080,$0080,$FF80,$FF80                                           ;90CD8B;

.YOffsets:
; y offsets from Samus
    dw $0080,$FF80,$FF80,$0080                                           ;90CD93;

FireIceSBA:
    LDA.W $0C68                                                          ;90CD9B;
    CMP.W #ProjectilePreInstruction_IceSBA_End                           ;90CD9E;
    BEQ .returnCarryClear                                                ;90CDA1;
    CMP.W #ProjectilePreInstruction_IceSBA_Main                          ;90CDA3;
    BNE .fire                                                            ;90CDA6;

.returnCarryClear:
    CLC                                                                  ;90CDA8;
    RTS                                                                  ;90CDA9;


.fire:
    LDX.W #$0006                                                         ;90CDAA;

.loop:
    LDA.W #$0004                                                         ;90CDAD;
    STA.W $0C90,X                                                        ;90CDB0;
    LDA.W $09A6                                                          ;90CDB3;
    AND.W #$100F                                                         ;90CDB6;
    ORA.W #$8010                                                         ;90CDB9;
    STA.W $0C18,X                                                        ;90CDBC;
    STZ.W $0C04,X                                                        ;90CDBF;
    LDA.W #ProjectilePreInstruction_IceSBA_Main                          ;90CDC2;
    STA.W $0C68,X                                                        ;90CDC5;
    LDA.W IcePlasmaSBAProjectileOriginAngles,X                           ;90CDC8;
    STA.W $0C7C,X                                                        ;90CDCB;
    LDA.W #$01E0                                                         ;90CDCE;
    STA.W $0BF0,X                                                        ;90CDD1;
    JSL.L InitializeProjectile                                           ;90CDD4;
    DEX                                                                  ;90CDD8;
    DEX                                                                  ;90CDD9;
    BPL .loop                                                            ;90CDDA;
    LDA.W #$0004                                                         ;90CDDC;
    STA.W $0CCE                                                          ;90CDDF;
    LDA.W $0C18                                                          ;90CDE2;
    AND.W #$003F                                                         ;90CDE5;
    TAY                                                                  ;90CDE8;
    LDA.W ProjectileCooldowns_Uncharged,Y                                ;90CDE9;
    AND.W #$00FF                                                         ;90CDEC;
    STA.W $0CCC                                                          ;90CDEF;
    LDA.W $0A1E                                                          ;90CDF2;
    AND.W #$00FF                                                         ;90CDF5;
    CMP.W #$0004                                                         ;90CDF8;
    BEQ .facingLeft                                                      ;90CDFB;
    LDA.W #$0004                                                         ;90CDFD;
    STA.W $0B60                                                          ;90CE00;
    BRA .finish                                                          ;90CE03;


.facingLeft:
    LDA.W #$FFFC                                                         ;90CE05;
    STA.W $0B60                                                          ;90CE08;

.finish:
    LDA.W #$0023                                                         ;90CE0B;
    JSL.L QueueSound_Lib1_Max6                                           ;90CE0E;
    SEC                                                                  ;90CE12;
    RTS                                                                  ;90CE13;


FireSpazerSBA:
    LDX.W #$0006                                                         ;90CE14;

.loop:
    LDA.W .initialTrailTimers,X                                          ;90CE17;
    STA.W $0C90,X                                                        ;90CE1A;
    LDA.W #$0005                                                         ;90CE1D;
    STA.W $0C04,X                                                        ;90CE20;
    LDA.W #ProjectilePreInstruction_SpazerSBA                            ;90CE23;
    STA.W $0C68,X                                                        ;90CE26;
    LDA.W #$0028                                                         ;90CE29;
    STA.W $0BDC,X                                                        ;90CE2C;
    LDA.W .angleDeltas,X                                                 ;90CE2F;
    STA.W $0BF0,X                                                        ;90CE32;
    STZ.W $0C7C,X                                                        ;90CE35;
    STZ.W $0CA4,X                                                        ;90CE38;
    STZ.W $0B8C,X                                                        ;90CE3B;
    STZ.W $0BA0,X                                                        ;90CE3E;
    CPX.W #$0004                                                         ;90CE41;
    BPL .greaterThanEqualTo4                                             ;90CE44;
    LDA.W $09A6                                                          ;90CE46;
    AND.W #$100F                                                         ;90CE49;
    ORA.W #$8010                                                         ;90CE4C;
    STA.W $0C18,X                                                        ;90CE4F;
    JSL.L InitializeSBAProjectile                                        ;90CE52;
    BRA .next                                                            ;90CE56;


.greaterThanEqualTo4:
    LDA.W #$8024                                                         ;90CE58;
    STA.W $0C18,X                                                        ;90CE5B;
    JSL.L Initialize_ShinesparkEcho_or_SpazerSBATrailProjectile          ;90CE5E;

.next:
    DEX                                                                  ;90CE62;
    DEX                                                                  ;90CE63;
    BPL .loop                                                            ;90CE64;
    LDA.W #$0004                                                         ;90CE66;
    STA.W $0CCE                                                          ;90CE69;
    LDA.W $0C18                                                          ;90CE6C;
    AND.W #$003F                                                         ;90CE6F;
    TAY                                                                  ;90CE72;
    LDA.W ProjectileCooldowns_Uncharged,Y                                ;90CE73;
    AND.W #$00FF                                                         ;90CE76;
    STA.W $0CCC                                                          ;90CE79;
    STZ.W $0B60                                                          ;90CE7C;
    LDA.W #$0025                                                         ;90CE7F;
    JSL.L QueueSound_Lib1_Max6                                           ;90CE82;
    SEC                                                                  ;90CE86;
    RTS                                                                  ;90CE87;


.initialTrailTimers:
    dw $0000,$0000,$0004,$0004                                           ;90CE88;

.angleDeltas:
    dw $0004,$FFFC,$0004,$FFFC                                           ;90CE90;

FirePlasmaSBA:
    LDA.W $0C68                                                          ;90CE98;
    CMP.W #ProjectilePreInstruction_PlasmaSBA                            ;90CE9B;
    BNE +                                                                ;90CE9E;
    CLC                                                                  ;90CEA0;
    RTS                                                                  ;90CEA1;


  + LDX.W #$0006                                                         ;90CEA2;

.loop:
    LDA.W $09A6                                                          ;90CEA5;
    AND.W #$100F                                                         ;90CEA8;
    ORA.W #$8010                                                         ;90CEAB;
    STA.W $0C18,X                                                        ;90CEAE;
    STZ.W $0C04,X                                                        ;90CEB1;
    LDA.W #ProjectilePreInstruction_PlasmaSBA                            ;90CEB4;
    STA.W $0C68,X                                                        ;90CEB7;
    LDA.W IcePlasmaSBAProjectileOriginAngles,X                           ;90CEBA;
    STA.W $0C7C,X                                                        ;90CEBD;
    LDA.W #$0028                                                         ;90CEC0;
    STA.W $0BDC,X                                                        ;90CEC3;
    STZ.W $0BF0,X                                                        ;90CEC6;
    JSL.L InitializeSBAProjectile                                        ;90CEC9;
    DEX                                                                  ;90CECD;
    DEX                                                                  ;90CECE;
    BPL .loop                                                            ;90CECF;
    LDA.W #$0004                                                         ;90CED1;
    STA.W $0CCE                                                          ;90CED4;
    LDA.W $0C18                                                          ;90CED7;
    AND.W #$003F                                                         ;90CEDA;
    TAY                                                                  ;90CEDD;
    LDA.W ProjectileCooldowns_Uncharged,Y                                ;90CEDE;
    AND.W #$00FF                                                         ;90CEE1;
    STA.W $0CCC                                                          ;90CEE4;
    LDA.W $0A1E                                                          ;90CEE7;
    AND.W #$00FF                                                         ;90CEEA;
    CMP.W #$0004                                                         ;90CEED;
    BEQ .facingLeft                                                      ;90CEF0;
    LDA.W #$0004                                                         ;90CEF2;
    STA.W $0B60                                                          ;90CEF5;
    BRA .playSFX                                                         ;90CEF8;


.facingLeft:
    LDA.W #$FFFC                                                         ;90CEFA;
    STA.W $0B60                                                          ;90CEFD;

.playSFX:
    LDA.W #$0027                                                         ;90CF00;
    JSL.L QueueSound_Lib1_Max6                                           ;90CF03;
    SEC                                                                  ;90CF07;
    RTS                                                                  ;90CF08;


ProjectilePreInstruction_IceSBA_Main:
    LDA.W $0C04,X                                                        ;90CF09;
    AND.W #$00F0                                                         ;90CF0C;
    BEQ .trail                                                           ;90CF0F;
    LDA.W #$0024                                                         ;90CF11;
    JSL.L QueueSound_Lib1_Max6                                           ;90CF14;
    JSL.L Clear_Projectile                                               ;90CF18;
    RTS                                                                  ;90CF1C;


.trail:
    DEC.W $0C90,X                                                        ;90CF1D;
    BNE +                                                                ;90CF20;
    LDA.W #$0004                                                         ;90CF22;
    STA.W $0C90,X                                                        ;90CF25;
    JSL.L Spawn_ProjectileTrail                                          ;90CF28;
    LDX.W $0DDE                                                          ;90CF2C;

  + LDA.W $0C7C,X                                                        ;90CF2F;
    TAY                                                                  ;90CF32;
    LDA.W #$0020                                                         ;90CF33;
    JSR.W Math_90CC39                                                    ;90CF36;
    LDA.W $0AF6                                                          ;90CF39;
    CLC                                                                  ;90CF3C;
    ADC.B $14                                                            ;90CF3D;
    STA.W $0B64,X                                                        ;90CF3F;
    LDA.W $0AFA                                                          ;90CF42;
    CLC                                                                  ;90CF45;
    ADC.B $16                                                            ;90CF46;
    STA.W $0B78,X                                                        ;90CF48;
    LDA.W $0C7C,X                                                        ;90CF4B;
    CLC                                                                  ;90CF4E;
    ADC.W $0B60                                                          ;90CF4F;
    AND.W #$00FF                                                         ;90CF52;
    STA.W $0C7C,X                                                        ;90CF55;
    DEC.W $0BF0,X                                                        ;90CF58;
    BNE .done                                                            ;90CF5B;
    LDA.W #ProjectilePreInstruction_IceSBA_End                           ;90CF5D;
    STA.W $0C68,X                                                        ;90CF60;
    LDA.W #$0028                                                         ;90CF63;
    STA.W $0BDC,X                                                        ;90CF66;
    LDA.W #$0024                                                         ;90CF69;
    JSL.L QueueSound_Lib1_Max6                                           ;90CF6C;

.done:
    LDA.W #$0002                                                         ;90CF70;
    STA.W $0CCC                                                          ;90CF73;
    STZ.W $0CD0                                                          ;90CF76;
    RTS                                                                  ;90CF79;


ProjectilePreInstruction_IceSBA_End:
    LDA.W $0C04,X                                                        ;90CF7A;
    AND.W #$00F0                                                         ;90CF7D;
    BEQ .notDeleted                                                      ;90CF80;
    JSL.L Clear_Projectile                                               ;90CF82;
    RTS                                                                  ;90CF86;


.notDeleted:
    DEC.W $0C90,X                                                        ;90CF87;
    BNE +                                                                ;90CF8A;
    LDA.W #$0004                                                         ;90CF8C;
    STA.W $0C90,X                                                        ;90CF8F;
    JSL.L Spawn_ProjectileTrail                                          ;90CF92;
    LDX.W $0DDE                                                          ;90CF96;

  + LDA.W $0C7C,X                                                        ;90CF99;
    TAY                                                                  ;90CF9C;
    LDA.W $0BDC,X                                                        ;90CF9D;
    JSR.W Math_90CC39                                                    ;90CFA0;
    LDA.W $0AF6                                                          ;90CFA3;
    CLC                                                                  ;90CFA6;
    ADC.B $14                                                            ;90CFA7;
    STA.W $0B64,X                                                        ;90CFA9;
    SEC                                                                  ;90CFAC;
    SBC.W $0911                                                          ;90CFAD;
    CMP.W #$FFE0                                                         ;90CFB0;
    BMI .clearProjectile                                                 ;90CFB3;
    CMP.W #$0120                                                         ;90CFB5;
    BPL .clearProjectile                                                 ;90CFB8;
    LDA.W $0AFA                                                          ;90CFBA;
    CLC                                                                  ;90CFBD;
    ADC.B $16                                                            ;90CFBE;
    STA.W $0B78,X                                                        ;90CFC0;
    SEC                                                                  ;90CFC3;
    SBC.W $0915                                                          ;90CFC4;
    CMP.W #$0010                                                         ;90CFC7;
    BMI .clearProjectile                                                 ;90CFCA;
    CMP.W #$0100                                                         ;90CFCC;
    BPL .clearProjectile                                                 ;90CFCF;
    LDA.W $0C7C,X                                                        ;90CFD1;
    CLC                                                                  ;90CFD4;
    ADC.W $0B60                                                          ;90CFD5;
    AND.W #$00FF                                                         ;90CFD8;
    STA.W $0C7C,X                                                        ;90CFDB;
    LDA.W $0BDC,X                                                        ;90CFDE;
    CLC                                                                  ;90CFE1;
    ADC.W #$0008                                                         ;90CFE2;
    AND.W #$00FF                                                         ;90CFE5;
    STA.W $0BDC,X                                                        ;90CFE8;
    LDA.W #$0002                                                         ;90CFEB;
    STA.W $0CCC                                                          ;90CFEE;
    STZ.W $0CD0                                                          ;90CFF1;
    RTS                                                                  ;90CFF4;


.clearProjectile:
    JSL.L Clear_Projectile                                               ;90CFF5;
    RTS                                                                  ;90CFF9;


TriggerShinesparkWindup:
    PHP                                                                  ;90CFFA;
    PHB                                                                  ;90CFFB;
    PHK                                                                  ;90CFFC;
    PLB                                                                  ;90CFFD;
    REP #$30                                                             ;90CFFE;
    LDA.W #SamusMovementHandler_ShinesparkWindup                         ;90D000;
    STA.W $0A58                                                          ;90D003;
    LDA.W #$0001                                                         ;90D006;
    STA.W $0B36                                                          ;90D009;
    LDA.W #$0400                                                         ;90D00C;
    STA.W $0B3E                                                          ;90D00F;
    STZ.W $0B2C                                                          ;90D012;
    STZ.W $0B2E                                                          ;90D015;
    STZ.W $0A52                                                          ;90D018;
    LDA.W #$0008                                                         ;90D01B;
    STA.W $0B42                                                          ;90D01E;
    STZ.W $0B44                                                          ;90D021;
    STZ.W $0B46                                                          ;90D024;
    STZ.W $0B48                                                          ;90D027;
    LDA.W #$0007                                                         ;90D02A;
    STA.W $0DEC                                                          ;90D02D;
    STZ.W $0DEE                                                          ;90D030;
    STZ.W $0CCC                                                          ;90D033;
    LDA.W #$001E                                                         ;90D036;
    STA.W $0AA2                                                          ;90D039;
    LDA.W #$003C                                                         ;90D03C;
    STA.W $0A68                                                          ;90D03F;
    LDA.W #$0006                                                         ;90D042;
    STA.W $0ACC                                                          ;90D045;
    STZ.W $0ACE                                                          ;90D048;
    STZ.W $0A56                                                          ;90D04B;
    LDA.W $0CD0                                                          ;90D04E;
    BEQ .return                                                          ;90D051;
    CMP.W #$0010                                                         ;90D053;
    BMI .resetFlare                                                      ;90D056;
    LDA.W #$0002                                                         ;90D058;
    JSL.L QueueSound_Lib1_Max9                                           ;90D05B;

.resetFlare:
    STZ.W $0CD0                                                          ;90D05F;
    JSR.W ClearFlareAnimationState                                       ;90D062;

.return:
    PLB                                                                  ;90D065;
    PLP                                                                  ;90D066;
    RTL                                                                  ;90D067;


SamusMovementHandler_ShinesparkWindup:
    DEC.W $0AA2                                                          ;90D068;
    BEQ .timerExpired                                                    ;90D06B;
    BPL .return                                                          ;90D06D;

.timerExpired:
    LDA.W $0A1E                                                          ;90D06F;
    AND.W #$00FF                                                         ;90D072;
    CMP.W #$0004                                                         ;90D075;
    BEQ .facingLeft                                                      ;90D078;
    LDA.W #$00CB                                                         ;90D07A;
    STA.W $0A2A                                                          ;90D07D;
    BRA +                                                                ;90D080;


.facingLeft:
    LDA.W #$00CC                                                         ;90D082;
    STA.W $0A2A                                                          ;90D085;

  + LDA.W #SamusMovementHandler_VerticalShinespark                       ;90D088;
    STA.W $0A58                                                          ;90D08B;
    LDA.W #RTS_90E90E                                                    ;90D08E;
    STA.W $0A60                                                          ;90D091;
    STZ.W $0AAE                                                          ;90D094;
    STZ.W $0AC0                                                          ;90D097;
    STZ.W $0AC2                                                          ;90D09A;
    STZ.W $0AB0                                                          ;90D09D;
    STZ.W $0AB2                                                          ;90D0A0;
    LDA.W #$000F                                                         ;90D0A3;
    JSL.L QueueSound_Lib3_Max9                                           ;90D0A6;

.return:
    RTS                                                                  ;90D0AA;


SamusMovementHandler_VerticalShinespark:
    LDA.W #$0002                                                         ;90D0AB;
    STA.W $0A6E                                                          ;90D0AE;
    LDA.W #$0008                                                         ;90D0B1;
    STA.W $0A48                                                          ;90D0B4;
    LDX.W #$0004                                                         ;90D0B7;
    LDY.W Unknown_ShinesparkMovementHandler_Unused_90EF20                ;90D0BA; >_<
    JSR.W UpdateSamusEchoPosition                                        ;90D0BD;
    JSR.W Shinespark_Vertical_Movement                                   ;90D0C0;
    JSR.W EndShinesparkIfCollisionDetectedOrLowEnergy                    ;90D0C3;
    LDA.W $09C2                                                          ;90D0C6;
    CMP.W #$001E                                                         ;90D0C9;
    BMI .return                                                          ;90D0CC;
    DEC.W $09C2                                                          ;90D0CE;
    BPL .return                                                          ;90D0D1;
    STZ.W $09C2                                                          ;90D0D3; >_<

.return:
    RTS                                                                  ;90D0D6;


SamusMovementHandler_DiagonalShinespark:
    LDA.W #$0002                                                         ;90D0D7;
    STA.W $0A6E                                                          ;90D0DA;
    LDA.W #$0008                                                         ;90D0DD;
    STA.W $0A48                                                          ;90D0E0;
    LDX.W #$0004                                                         ;90D0E3;
    LDY.W Unknown_ShinesparkMovementHandler_Unused_90EF20                ;90D0E6;
    JSR.W UpdateSamusEchoPosition                                        ;90D0E9; >_<
    JSR.W Shinespark_Horizontal_Movement                                 ;90D0EC;
    JSR.W Shinespark_Vertical_Movement                                   ;90D0EF;
    JSR.W EndShinesparkIfCollisionDetectedOrLowEnergy                    ;90D0F2;
    LDA.W $09C2                                                          ;90D0F5;
    CMP.W #$001E                                                         ;90D0F8;
    BMI .return                                                          ;90D0FB;
    DEC.W $09C2                                                          ;90D0FD;
    BPL .return                                                          ;90D100;
    STZ.W $09C2                                                          ;90D102; >_<

.return:
    RTS                                                                  ;90D105;


SamusMovementHandler_HorizontalShinespark:
    LDA.W #$0002                                                         ;90D106;
    STA.W $0A6E                                                          ;90D109;
    LDA.W #$0008                                                         ;90D10C;
    STA.W $0A48                                                          ;90D10F;
    LDX.W #$0008                                                         ;90D112;
    LDY.W Unknown_ShinesparkMovementHandler_Unused_90EF20                ;90D115; >_<
    JSR.W UpdateSamusEchoPosition                                        ;90D118;
    JSR.W Shinespark_Horizontal_Movement                                 ;90D11B;
    JSR.W EndShinesparkIfCollisionDetectedOrLowEnergy                    ;90D11E;
    LDA.W $09C2                                                          ;90D121;
    CMP.W #$001E                                                         ;90D124;
    BMI .return                                                          ;90D127;
    DEC.W $09C2                                                          ;90D129;
    BPL .return                                                          ;90D12C;
    STZ.W $09C2                                                          ;90D12E; >_<

.return:
    RTS                                                                  ;90D131;


Shinespark_Horizontal_Movement:
    LDA.W #$000F                                                         ;90D132;
    STA.W $0A68                                                          ;90D135;
    LDA.W $0B44                                                          ;90D138;
    CLC                                                                  ;90D13B;
    ADC.W $0B32                                                          ;90D13C;
    STA.W $0B44                                                          ;90D13F;
    LDA.W $0B42                                                          ;90D142;
    ADC.W $0B34                                                          ;90D145;
    STA.W $0B42                                                          ;90D148;
    CMP.W #$000F                                                         ;90D14B;
    BMI +                                                                ;90D14E;
    LDA.W #$000F                                                         ;90D150;
    STA.W $0B42                                                          ;90D153;
    STZ.W $0B44                                                          ;90D156;

  + STZ.B $12                                                            ;90D159;
    STZ.B $14                                                            ;90D15B;
    LDA.W $0A1E                                                          ;90D15D;
    AND.W #$00FF                                                         ;90D160;
    CMP.W #$0004                                                         ;90D163;
    BEQ .left                                                            ;90D166;
    JSR.W CalculateSamusXDisplacement_ForMovingRight                     ;90D168;
    LDA.B $12                                                            ;90D16B;
    CMP.W #$000F                                                         ;90D16D;
    BMI .rightCollision                                                  ;90D170;
    LDA.W #$000F                                                         ;90D172;
    STA.B $12                                                            ;90D175;

.rightCollision:
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;90D177;
    TAX                                                                  ;90D17B;
    BEQ .moveRight                                                       ;90D17C;
    STA.W $0DD0                                                          ;90D17E;
    BRA .merge                                                           ;90D181;


.moveRight:
    JSL.L MoveSamusRight_NoSolidEnemyCollision                           ;90D183;
    JSL.L Align_SamusYPosition_WithNonSquareSlope                        ;90D187;
    BRA .merge                                                           ;90D18B;


.left:
    JSR.W CalculateSamusXDisplacement_ForMovingLeft                      ;90D18D;
    LDA.B $12                                                            ;90D190;
    EOR.W #$FFFF                                                         ;90D192;
    STA.B $12                                                            ;90D195;
    LDA.B $14                                                            ;90D197;
    EOR.W #$FFFF                                                         ;90D199;
    INC A                                                                ;90D19C;
    STA.B $14                                                            ;90D19D;
    BNE +                                                                ;90D19F;
    INC.B $12                                                            ;90D1A1;

  + LDA.B $12                                                            ;90D1A3;
    CMP.W #$000F                                                         ;90D1A5;
    BMI .leftCollision                                                   ;90D1A8;
    LDA.W #$000F                                                         ;90D1AA;
    STA.B $12                                                            ;90D1AD;

.leftCollision:
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;90D1AF;
    TAX                                                                  ;90D1B3;
    BEQ .flipDirection                                                   ;90D1B4;
    STA.W $0DD0                                                          ;90D1B6;
    BRA .merge                                                           ;90D1B9;


.flipDirection:
    LDA.B $12                                                            ;90D1BB;
    EOR.W #$FFFF                                                         ;90D1BD;
    STA.B $12                                                            ;90D1C0;
    LDA.B $14                                                            ;90D1C2;
    EOR.W #$FFFF                                                         ;90D1C4;
    INC A                                                                ;90D1C7;
    STA.B $14                                                            ;90D1C8;
    BNE .moveLeft                                                        ;90D1CA;
    INC.B $12                                                            ;90D1CC;

.moveLeft:
    JSL.L MoveSamusRight_NoSolidEnemyCollision                           ;90D1CE;
    JSL.L Align_SamusYPosition_WithNonSquareSlope                        ;90D1D2;

.merge:
    LDA.W $0AF6                                                          ;90D1D6;
    SEC                                                                  ;90D1D9;
    SBC.W $0B10                                                          ;90D1DA;
    BMI +                                                                ;90D1DD;
    CMP.W #$0010                                                         ;90D1DF;
    BMI .return                                                          ;90D1E2;
    LDA.W $0AF6                                                          ;90D1E4;
    SEC                                                                  ;90D1E7;
    SBC.W #$000F                                                         ;90D1E8;
    STA.W $0B10                                                          ;90D1EB;
    RTS                                                                  ;90D1EE;


  + CMP.W #$FFF1                                                         ;90D1EF;
    BPL .return                                                          ;90D1F2;
    LDA.W $0AF6                                                          ;90D1F4;
    CLC                                                                  ;90D1F7;
    ADC.W #$000F                                                         ;90D1F8;
    STA.W $0B10                                                          ;90D1FB;

.return:
    RTS                                                                  ;90D1FE;


Shinespark_Vertical_Movement:
    LDA.W #$000F                                                         ;90D1FF;
    STA.W $0A68                                                          ;90D202;
    LDA.W $0DEE                                                          ;90D205;
    CLC                                                                  ;90D208;
    ADC.W $0B32                                                          ;90D209;
    STA.W $0DEE                                                          ;90D20C;
    LDA.W $0DEC                                                          ;90D20F;
    ADC.W $0B34                                                          ;90D212;
    STA.W $0DEC                                                          ;90D215;
    LDA.W $0B2C                                                          ;90D218;
    CLC                                                                  ;90D21B;
    ADC.W $0DEE                                                          ;90D21C;
    STA.W $0B2C                                                          ;90D21F;
    STA.B $14                                                            ;90D222;
    LDA.W $0B2E                                                          ;90D224;
    ADC.W $0DEC                                                          ;90D227;
    STA.W $0B2E                                                          ;90D22A;
    STA.B $12                                                            ;90D22D;
    CMP.W #$000E                                                         ;90D22F;
    BMI .flipDirection                                                   ;90D232;
    LDA.W #$000E                                                         ;90D234;
    STA.B $12                                                            ;90D237;

.flipDirection:
    LDA.B $12                                                            ;90D239;
    EOR.W #$FFFF                                                         ;90D23B;
    STA.B $12                                                            ;90D23E;
    LDA.B $14                                                            ;90D240;
    EOR.W #$FFFF                                                         ;90D242;
    INC A                                                                ;90D245;
    STA.B $14                                                            ;90D246;
    BNE +                                                                ;90D248;
    INC.B $12                                                            ;90D24A;

  + LDA.W $0B5A                                                          ;90D24C;
    CLC                                                                  ;90D24F;
    ADC.B $14                                                            ;90D250;
    STA.B $14                                                            ;90D252;
    LDA.W $0B5C                                                          ;90D254;
    ADC.B $12                                                            ;90D257;
    STA.B $12                                                            ;90D259;
    LDA.W #$0002                                                         ;90D25B;
    STA.W $0B02                                                          ;90D25E;
    LDA.B $12                                                            ;90D261;
    EOR.W #$FFFF                                                         ;90D263;
    STA.B $12                                                            ;90D266;
    LDA.B $14                                                            ;90D268;
    EOR.W #$FFFF                                                         ;90D26A;
    INC A                                                                ;90D26D;
    STA.B $14                                                            ;90D26E;
    BNE +                                                                ;90D270;
    INC.B $12                                                            ;90D272;

  + LDA.B $12                                                            ;90D274;
    CMP.W #$000F                                                         ;90D276;
    BMI .collisionDetection                                              ;90D279;
    LDA.W #$000F                                                         ;90D27B;
    STA.B $12                                                            ;90D27E;

.collisionDetection:
    JSL.L Samus_vs_SolidEnemy_CollisionDetection                         ;90D280;
    TAX                                                                  ;90D284;
    BEQ +                                                                ;90D285;
    STA.W $0DD0                                                          ;90D287;
    BRA .noMovement                                                      ;90D28A;


  + LDA.B $12                                                            ;90D28C;
    EOR.W #$FFFF                                                         ;90D28E;
    STA.B $12                                                            ;90D291;
    LDA.B $14                                                            ;90D293;
    EOR.W #$FFFF                                                         ;90D295;
    INC A                                                                ;90D298;
    STA.B $14                                                            ;90D299;
    BNE .moveSamus                                                       ;90D29B;
    INC.B $12                                                            ;90D29D;

.moveSamus:
    JSL.L MoveSamusDown_NoSolidEnemyCollision                            ;90D29F;

.noMovement:
    LDA.W $0AFA                                                          ;90D2A3;
    SEC                                                                  ;90D2A6;
    SBC.W $0B14                                                          ;90D2A7;
    CMP.W #$FFF2                                                         ;90D2AA;
    BPL .return                                                          ;90D2AD;
    LDA.W $0AFA                                                          ;90D2AF;
    CLC                                                                  ;90D2B2;
    ADC.W #$000E                                                         ;90D2B3;
    STA.W $0B14                                                          ;90D2B6;

.return:
    RTS                                                                  ;90D2B9;


EndShinesparkIfCollisionDetectedOrLowEnergy:
    LDA.W $09C2                                                          ;90D2BA;
    CMP.W #$001E                                                         ;90D2BD;
    BMI .endShinespark                                                   ;90D2C0;
    LDA.W $0DD0                                                          ;90D2C2;
    BNE .endShinespark                                                   ;90D2C5;
    CLC                                                                  ;90D2C7;
    RTS                                                                  ;90D2C8;


.endShinespark:
    LDA.W $0A1E                                                          ;90D2C9;
    AND.W #$00FF                                                         ;90D2CC;
    CMP.W #$0004                                                         ;90D2CF;
    BEQ .facingLeft                                                      ;90D2D2;
    LDA.W #$00E0                                                         ;90D2D4;
    STA.W $0AC0                                                          ;90D2D7;
    LDA.W #$0060                                                         ;90D2DA;
    STA.W $0AC2                                                          ;90D2DD;
    LDA.W #$FFFC                                                         ;90D2E0;
    STA.W $0AB4                                                          ;90D2E3;
    BRA +                                                                ;90D2E6;


.facingLeft:
    LDA.W #$0020                                                         ;90D2E8;
    STA.W $0AC0                                                          ;90D2EB;
    LDA.W #$00A0                                                         ;90D2EE;
    STA.W $0AC2                                                          ;90D2F1;
    LDA.W #$0004                                                         ;90D2F4;
    STA.W $0AB4                                                          ;90D2F7;

  + STZ.W $0B2C                                                          ;90D2FA;
    STZ.W $0B2E                                                          ;90D2FD;
    STZ.W $0B42                                                          ;90D300;
    STZ.W $0B44                                                          ;90D303;
    STZ.W $0B3E                                                          ;90D306;
    STZ.W $0B1A                                                          ;90D309;
    STZ.W $0B36                                                          ;90D30C;
    LDA.W #SamusMovementHandler_ShinesparkCrash_EchoesCircleSamus        ;90D30F;
    STA.W $0A58                                                          ;90D312;
    LDA.W #SamusDisplayHandler_ShinesparkCrashCircle                     ;90D315;
    STA.W $0A5C                                                          ;90D318;
    STZ.W $0AAE                                                          ;90D31B;
    LDA.W $0AF6                                                          ;90D31E;
    STA.W $0AB0                                                          ;90D321;
    STA.W $0AB2                                                          ;90D324;
    LDA.W $0AFA                                                          ;90D327;
    STA.W $0AB8                                                          ;90D32A;
    STA.W $0ABA                                                          ;90D32D;
    STZ.W $0AC4                                                          ;90D330;
    STZ.W $0A48                                                          ;90D333;
    LDA.W #$0035                                                         ;90D336;
    JSL.L QueueSound_Lib1_Max6                                           ;90D339;
    LDA.W #$0010                                                         ;90D33D;
    JSL.L QueueSound_Lib3_Max6                                           ;90D340;
    SEC                                                                  ;90D344;
    RTS                                                                  ;90D345;


SamusMovementHandler_ShinesparkCrash_EchoesCircleSamus:
    LDA.W #$000F                                                         ;90D346;
    STA.W $0A68                                                          ;90D349;
    LDA.W $0AAF                                                          ;90D34C;
    AND.W #$00FF                                                         ;90D34F;
    ASL A                                                                ;90D352;
    TAX                                                                  ;90D353;
    JSR.W (.pointers,X)                                                  ;90D354;
    LDX.W #$0002                                                         ;90D357;

.loop:
    LDY.W $0AC0,X                                                        ;90D35A;
    LDA.W $0AAE                                                          ;90D35D;
    AND.W #$00FF                                                         ;90D360;
    JSR.W Math_90CC39                                                    ;90D363;
    LDA.W $0AF6                                                          ;90D366;
    CLC                                                                  ;90D369;
    ADC.B $14                                                            ;90D36A;
    STA.W $0AB0,X                                                        ;90D36C;
    LDA.W $0AFA                                                          ;90D36F;
    CLC                                                                  ;90D372;
    ADC.B $16                                                            ;90D373;
    STA.W $0AB8,X                                                        ;90D375;
    DEX                                                                  ;90D378;
    DEX                                                                  ;90D379;
    BPL .loop                                                            ;90D37A;
    RTS                                                                  ;90D37C;


.pointers:
    dw ShinesparkCrash_EchoesCircleSamus_Phase0                          ;90D37D;
    dw ShinesparkCrash_EchoesCircleSamus_Phase1                          ;90D37F;
    dw ShinesparkCrash_EchoesCircleSamus_Phase2                          ;90D381;

ShinesparkCrash_EchoesCircleSamus_Phase0:
    LDA.W $0AAE                                                          ;90D383;
    CLC                                                                  ;90D386;
    ADC.W #$0004                                                         ;90D387;
    CMP.W #$0010                                                         ;90D38A;
    BMI +                                                                ;90D38D;
    ORA.W #$0100                                                         ;90D38F;

  + STA.W $0AAE                                                          ;90D392;
    RTS                                                                  ;90D395;


ShinesparkCrash_EchoesCircleSamus_Phase1:
    LDA.W $0AC0                                                          ;90D396;
    CLC                                                                  ;90D399;
    ADC.W $0AB4                                                          ;90D39A;
    AND.W #$00FF                                                         ;90D39D;
    STA.W $0AC0                                                          ;90D3A0;
    LDA.W $0AC2                                                          ;90D3A3;
    CLC                                                                  ;90D3A6;
    ADC.W $0AB4                                                          ;90D3A7;
    AND.W #$00FF                                                         ;90D3AA;
    STA.W $0AC2                                                          ;90D3AD;
    LDA.W $0ABC                                                          ;90D3B0;
    CLC                                                                  ;90D3B3;
    ADC.W #$0004                                                         ;90D3B4;
    STA.W $0ABC                                                          ;90D3B7;
    CMP.W #$0080                                                         ;90D3BA;
    BMI .return                                                          ;90D3BD;
    LDA.W $0AAE                                                          ;90D3BF;
    AND.W #$00FF                                                         ;90D3C2;
    ORA.W #$0200                                                         ;90D3C5;
    STA.W $0AAE                                                          ;90D3C8;

.return:
    RTS                                                                  ;90D3CB;


ShinesparkCrash_EchoesCircleSamus_Phase2:
    LDA.W $0AAE                                                          ;90D3CC;
    SEC                                                                  ;90D3CF;
    SBC.W #$0004                                                         ;90D3D0;
    STA.W $0AAE                                                          ;90D3D3;
    AND.W #$00FF                                                         ;90D3D6;
    BEQ .zeroDistance                                                    ;90D3D9;
    BPL .return                                                          ;90D3DB;

.zeroDistance:
    LDA.W #ShinesparkCrash_EchoesFinishedCirclingSamus                   ;90D3DD;
    STA.W $0A58                                                          ;90D3E0;
    LDA.W #$001E                                                         ;90D3E3;
    STA.W $0AA2                                                          ;90D3E6;
    STZ.W $0AAE                                                          ;90D3E9;
    STZ.W $0AC0                                                          ;90D3EC;
    STZ.W $0AC2                                                          ;90D3EF;

.return:
    RTS                                                                  ;90D3F2;


ShinesparkCrash_EchoesFinishedCirclingSamus:
    LDA.W #$000F                                                         ;90D3F3;
    STA.W $0A68                                                          ;90D3F6;
    DEC.W $0AA2                                                          ;90D3F9;
    BEQ .timerExpired                                                    ;90D3FC;
    BPL .return                                                          ;90D3FE;

.timerExpired:
    LDA.W #ShinesparkCrash_Finish                                        ;90D400;
    STA.W $0A58                                                          ;90D403;
    LDA.W #SamusDrawingHandler_Default                                   ;90D406;
    STA.W $0A5C                                                          ;90D409;

.return:
    RTS                                                                  ;90D40C;


ShinesparkCrash_Finish:
    STZ.W $0AAE                                                          ;90D40D;
    LDA.W $0CCE                                                          ;90D410;
    CMP.W #$0005                                                         ;90D413;
    BPL .dontFire                                                        ;90D416;
    CMP.W #$0004                                                         ;90D418;
    BPL .extraEcho                                                       ;90D41B;
    INC.W $0CCE                                                          ;90D41D;
    LDA.W #$0040                                                         ;90D420;
    STA.W $0AC4                                                          ;90D423;
    LDA.W $0AF6                                                          ;90D426;
    STA.W $0AB4                                                          ;90D429;
    LDA.W $0AFA                                                          ;90D42C;
    STA.W $0ABC                                                          ;90D42F;
    LDA.W #$8029                                                         ;90D432;
    STA.W $0C1E                                                          ;90D435;
    LDX.W #$0006                                                         ;90D438;
    JSL.L Initialize_ShinesparkEcho_or_SpazerSBATrailProjectile          ;90D43B;
    LDA.W #ProjectilePreInstruction_SpeedEcho                            ;90D43F;
    STA.W $0C6E                                                          ;90D442;
    LDA.W $0A1C                                                          ;90D445;
    SEC                                                                  ;90D448;
    SBC.W #$00C9                                                         ;90D449;
    ASL A                                                                ;90D44C;
    TAX                                                                  ;90D44D;
    LDA.W .data0,X                                                       ;90D44E;
    AND.W #$00FF                                                         ;90D451;
    STA.W $0C82                                                          ;90D454;
    STZ.W $0BE2                                                          ;90D457;

.extraEcho:
    INC.W $0CCE                                                          ;90D45A;
    LDA.W #$0040                                                         ;90D45D;
    STA.W $0AC6                                                          ;90D460;
    LDA.W $0AF6                                                          ;90D463;
    STA.W $0AB6                                                          ;90D466;
    LDA.W $0AFA                                                          ;90D469;
    STA.W $0ABE                                                          ;90D46C;
    LDA.W #$8029                                                         ;90D46F;
    STA.W $0C20                                                          ;90D472;
    LDX.W #$0008                                                         ;90D475;
    JSL.L Initialize_ShinesparkEcho_or_SpazerSBATrailProjectile          ;90D478;
    LDA.W #ProjectilePreInstruction_SpeedEcho                            ;90D47C;
    STA.W $0C70                                                          ;90D47F;
    LDA.W $0A1C                                                          ;90D482;
    SEC                                                                  ;90D485;
    SBC.W #$00C9                                                         ;90D486;
    ASL A                                                                ;90D489;
    TAX                                                                  ;90D48A;
    LDA.W .data1,X                                                       ;90D48B;
    AND.W #$00FF                                                         ;90D48E;
    STA.W $0C84                                                          ;90D491;
    STZ.W $0BE4                                                          ;90D494;

.dontFire:
    STZ.W $0CCC                                                          ;90D497;
    LDA.W #$0001                                                         ;90D49A;
    STA.W $0A68                                                          ;90D49D;
    LDA.W $0A1E                                                          ;90D4A0;
    AND.W #$00FF                                                         ;90D4A3;
    CMP.W #$0004                                                         ;90D4A6;
    BEQ .facingLeft                                                      ;90D4A9;
    LDA.W #$0001                                                         ;90D4AB;
    STA.W $0A2C                                                          ;90D4AE;
    BRA .finish                                                          ;90D4B1;


.facingLeft:
    LDA.W #$0002                                                         ;90D4B3;
    STA.W $0A2C                                                          ;90D4B6;

.finish:
    LDA.W #$0002                                                         ;90D4B9;
    STA.W $0A32                                                          ;90D4BC;
    STZ.W $0DEC                                                          ;90D4BF;
    STZ.W $0DEE                                                          ;90D4C2;
    RTS                                                                  ;90D4C5;

.data0:                                                                  ;90D4C6;
    db $00                                                               
.data1:                                                                  ;90D4C7;
    db     $80 ; C9h: Facing right - shinespark - horizontal
    db $00,$80 ; CAh: Facing left  - shinespark - horizontal
    db $40,$C0 ; CBh: Facing right - shinespark - vertical
    db $40,$C0 ; CCh: Facing left  - shinespark - vertical
    db $E0,$60 ; CDh: Facing right - shinespark - diagonal
    db $20,$A0 ; CEh: Facing left  - shinespark - diagonal


ProjectilePreInstruction_SpeedEcho:
    LDA.W $0BDC,X                                                        ;90D4D2;
    CLC                                                                  ;90D4D5;
    ADC.W #$0008                                                         ;90D4D6;
    STA.W $0BDC,X                                                        ;90D4D9;
    LDY.W $0C7C,X                                                        ;90D4DC;
    LDA.W $0BDC,X                                                        ;90D4DF;
    AND.W #$00FF                                                         ;90D4E2;
    JSR.W Math_90CC39                                                    ;90D4E5;
    LDA.W $0AF6                                                          ;90D4E8;
    CLC                                                                  ;90D4EB;
    ADC.B $14                                                            ;90D4EC;
    STA.W $0AAE,X                                                        ;90D4EE;
    STA.W $0B64,X                                                        ;90D4F1;
    SEC                                                                  ;90D4F4;
    SBC.W $0911                                                          ;90D4F5;
    BMI .done                                                            ;90D4F8;
    CMP.W #$0100                                                         ;90D4FA;
    BPL .done                                                            ;90D4FD;
    LDA.W $0AFA                                                          ;90D4FF;
    CLC                                                                  ;90D502;
    ADC.B $16                                                            ;90D503;
    STA.W $0AB6,X                                                        ;90D505;
    STA.W $0B78,X                                                        ;90D508;
    SEC                                                                  ;90D50B;
    SBC.W $0915                                                          ;90D50C;
    BMI .done                                                            ;90D50F;
    CMP.W #$0100                                                         ;90D511;
    BPL .done                                                            ;90D514;
    RTS                                                                  ;90D516;


.done:
    STZ.W $0ABE,X                                                        ;90D517;
    STZ.W $0AAE,X                                                        ;90D51A;
    STZ.W $0AB6,X                                                        ;90D51D;
    JSL.L Clear_Projectile                                               ;90D520;
    RTS                                                                  ;90D524;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_GrappleBeam_90D525:
    LDA.B $8B                                                            ;90D525;
    BIT.W $09B2                                                          ;90D527;
    BNE .holdingShot                                                     ;90D52A;

.cancel:
    LDA.W #GrappleBeamFunction_HitNothing_Cancel                         ;90D52C;
    STA.W $0D32                                                          ;90D52F;
    RTS                                                                  ;90D532;


.holdingShot:
    LDA.W $0A9E                                                          ;90D533;
    DEC A                                                                ;90D536;
    STA.W $0A9E                                                          ;90D537;
    BEQ .cancel                                                          ;90D53A;
    BMI .cancel                                                          ;90D53C;
    LDA.W $0D00                                                          ;90D53E;
    BMI .continue                                                        ;90D541;
    LDA.W $0CFE                                                          ;90D543;
    CLC                                                                  ;90D546;
    ADC.W $0D00                                                          ;90D547;
    STA.W $0CFE                                                          ;90D54A;
    CMP.W #$0060                                                         ;90D54D;
    BMI .continue                                                        ;90D550;
    LDA.W #$0010                                                         ;90D552;
    EOR.W #$FFFF                                                         ;90D555;
    INC A                                                                ;90D558;
    STA.W $0D00                                                          ;90D559;
    BRA .continue                                                        ;90D55C;

    LDA.W $0CFE                                                          ;90D55E; dead code
    CLC                                                                  ;90D561;
    ADC.W $0D00                                                          ;90D562;
    STA.W $0CFE                                                          ;90D565;
    BPL .continue                                                        ;90D568;
    STZ.W $0CFE                                                          ;90D56A;
    LDA.W #$0010                                                         ;90D56D;
    STA.W $0D00                                                          ;90D570;

.continue:
    LDA.W $0CFA                                                          ;90D573;
    XBA                                                                  ;90D576;
    AND.W #$00FF                                                         ;90D577;
    TAY                                                                  ;90D57A;
    LDA.W $0CFE                                                          ;90D57B;
    JSR.W Math_90CC39                                                    ;90D57E;
    LDA.W $0D16                                                          ;90D581;
    CLC                                                                  ;90D584;
    ADC.B $14                                                            ;90D585;
    STA.W $0D08                                                          ;90D587;
    LDA.W $0D18                                                          ;90D58A;
    CLC                                                                  ;90D58D;
    ADC.B $16                                                            ;90D58E;
    STA.W $0D0C                                                          ;90D590;
    LDA.W $0CFA                                                          ;90D593;
    CLC                                                                  ;90D596;
    ADC.W #$0800                                                         ;90D597;
    STA.W $0CFA                                                          ;90D59A;
    JSL.L UpdateGrappleBeamStartPositionDuringGrappleFire                ;90D59D;
    RTS                                                                  ;90D5A1;
endif ; !FEATURE_KEEP_UNREFERENCED


CrystalFlash:
    PHP                                                                  ;90D5A2;
    REP #$30                                                             ;90D5A3;
    LDA.W $0998                                                          ;90D5A5;
    CMP.W #$0028                                                         ;90D5A8;
    BPL .skipInputCheck                                                  ;90D5AB;
    LDA.W #$0430                                                         ;90D5AD;
    ORA.W $09B2                                                          ;90D5B0;
    STA.B $12                                                            ;90D5B3;
    LDA.B $8B                                                            ;90D5B5;
    CMP.B $12                                                            ;90D5B7;
    BNE .returnCarrySet                                                  ;90D5B9;

.skipInputCheck:
    LDA.W $0B2E                                                          ;90D5BB;
    BNE .returnCarrySet                                                  ;90D5BE;
    LDA.W $0B2C                                                          ;90D5C0;
    BNE .returnCarrySet                                                  ;90D5C3;
    LDA.W $09C2                                                          ;90D5C5;
    CMP.W #$0033                                                         ;90D5C8;
    BPL .returnCarrySet                                                  ;90D5CB;
    LDA.W $09D6                                                          ;90D5CD;
    BNE .returnCarrySet                                                  ;90D5D0;
    LDA.W $09C6                                                          ;90D5D2;
    CMP.W #$000A                                                         ;90D5D5;
    BMI .returnCarrySet                                                  ;90D5D8;
    LDA.W $09CA                                                          ;90D5DA;
    CMP.W #$000A                                                         ;90D5DD;
    BMI .returnCarrySet                                                  ;90D5E0;
    LDA.W $09CE                                                          ;90D5E2;
    CMP.W #$000A                                                         ;90D5E5;
    BPL .activate                                                        ;90D5E8;

.returnCarrySet:
    PLP                                                                  ;90D5EA;
    SEC                                                                  ;90D5EB;
    RTL                                                                  ;90D5EC;


.activate:
    LDA.W $0A1E                                                          ;90D5ED;
    AND.W #$00FF                                                         ;90D5F0;
    CMP.W #$0004                                                         ;90D5F3;
    BEQ .facingLeft                                                      ;90D5F6;
    LDA.W #$00D3                                                         ;90D5F8;
    BRA .storePose                                                       ;90D5FB;


.facingLeft:
    LDA.W #$00D4                                                         ;90D5FD;

.storePose:
    STA.W $0A1C                                                          ;90D600;
    JSL.L InitializeSamusPose_1                                          ;90D603;
    JSL.L Set_Samus_AnimationFrame_if_PoseChanged                        ;90D607;
    LDA.W $0A1F                                                          ;90D60B;
    AND.W #$00FF                                                         ;90D60E;
    CMP.W #$001B                                                         ;90D611;
    BNE .returnCarrySet                                                  ;90D614;
    LDA.W $0A20                                                          ;90D616;
    STA.W $0A24                                                          ;90D619;
    LDA.W $0A22                                                          ;90D61C;
    STA.W $0A26                                                          ;90D61F;
    LDA.W $0A1C                                                          ;90D622;
    STA.W $0A20                                                          ;90D625;
    LDA.W $0A1E                                                          ;90D628;
    STA.W $0A22                                                          ;90D62B;
    LDA.W #SamusMovementHandler_CrystalFlash_RaiseSamus_GenerateBubble   ;90D62E;
    STA.W $0A58                                                          ;90D631;
    LDA.W $0A60                                                          ;90D634;
    CMP.W #SamusPoseInputHandler_Demo                                    ;90D637;
    BEQ .skipInputHandler                                                ;90D63A;
    LDA.W #RTS_90E90E                                                    ;90D63C;
    STA.W $0A60                                                          ;90D63F;

.skipInputHandler:
    LDA.W #$0009                                                         ;90D642;
    STA.W $0AA2                                                          ;90D645;
    STZ.W $0DEA                                                          ;90D648;
    LDA.W #$000A                                                         ;90D64B;
    STA.W $0DEC                                                          ;90D64E;
    STZ.W $0DEE                                                          ;90D651;
    STZ.W $0DF0                                                          ;90D654;
    STZ.W $0DF2                                                          ;90D657;
    LDA.W #$0007                                                         ;90D65A;
    STA.W $0ACC                                                          ;90D65D;
    STZ.W $0ACE                                                          ;90D660;
    LDA.W #$0001                                                         ;90D663;
    STA.W $0A68                                                          ;90D666;
    STA.W $0DF2                                                          ;90D669;
    STZ.W $18A8                                                          ;90D66C;
    STZ.W $18AA                                                          ;90D66F;
    STZ.W $0A52                                                          ;90D672;
    PLP                                                                  ;90D675;
    CLC                                                                  ;90D676;
    RTL                                                                  ;90D677;


SamusMovementHandler_CrystalFlash_RaiseSamus_GenerateBubble:
    LDA.W $0AFA                                                          ;90D678;
    DEC A                                                                ;90D67B;
    DEC A                                                                ;90D67C;
    STA.W $0AFA                                                          ;90D67D;
    LDA.W $0AA2                                                          ;90D680;
    DEC A                                                                ;90D683;
    STA.W $0AA2                                                          ;90D684;
    BPL .return                                                          ;90D687;
    LDA.W #$0003                                                         ;90D689;
    STA.W $0A94                                                          ;90D68C;
    LDA.W #$0006                                                         ;90D68F;
    STA.W $0A96                                                          ;90D692;
    LDA.W $0AFA                                                          ;90D695;
    STA.W $0DF0                                                          ;90D698;
    LDA.W #SamusMovementHandler_CrystalFlash_DecrementAmmo               ;90D69B;
    STA.W $0A58                                                          ;90D69E;
    STZ.W $18A8                                                          ;90D6A1;
    STZ.W $18AA                                                          ;90D6A4;
    LDA.W #$0001                                                         ;90D6A7;
    JSL.L QueueSound_Lib3_Max15                                          ;90D6AA;
    STZ.W $0CEE                                                          ;90D6AE;
    LDA.W $0AF6                                                          ;90D6B1;
    STA.W $0CE2                                                          ;90D6B4;
    LDA.W $0AFA                                                          ;90D6B7;
    STA.W $0CE4                                                          ;90D6BA;
    PHX                                                                  ;90D6BD;
    PHY                                                                  ;90D6BE;
    PHP                                                                  ;90D6BF;
    PHB                                                                  ;90D6C0;
    JSL.L Enable_HDMAObjects                                             ;90D6C1;
    JSL.L Spawn_CrystalFlash_HDMAObjects                                 ;90D6C5;
    PLB                                                                  ;90D6C9;
    PLP                                                                  ;90D6CA;
    PLY                                                                  ;90D6CB;
    PLX                                                                  ;90D6CC;

.return:
    RTS                                                                  ;90D6CD;


SamusMovementHandler_CrystalFlash_DecrementAmmo:
    LDA.W $0DEA                                                          ;90D6CE;
    ASL A                                                                ;90D6D1;
    TAX                                                                  ;90D6D2;
    JSR.W (.pointers,X)                                                  ;90D6D3;
    STZ.W $18A8                                                          ;90D6D6;
    STZ.W $18AA                                                          ;90D6D9;
    RTS                                                                  ;90D6DC;


.pointers:
    dw CrystalFlash_DecrementMissiles                                    ;90D6DD;
    dw CrystalFlash_DecrementSuperMissiles                               ;90D6DF;
    dw CrystalFlash_DecrementPowerBombs                                  ;90D6E1;

CrystalFlash_DecrementMissiles:
    LDA.W $05B6                                                          ;90D6E3;
    BIT.W #$0007                                                         ;90D6E6;
    BNE .return                                                          ;90D6E9;
    DEC.W $09C6                                                          ;90D6EB;
    LDA.W #$0032                                                         ;90D6EE;
    JSL.L Restore_A_Energy_ToSamus                                       ;90D6F1;
    DEC.W $0DEC                                                          ;90D6F5;
    BEQ .timerExpired                                                    ;90D6F8;
    BPL .return                                                          ;90D6FA;

.timerExpired:
    LDA.W #$000A                                                         ;90D6FC;
    STA.W $0DEC                                                          ;90D6FF;
    INC.W $0DEA                                                          ;90D702;

.return:
    RTS                                                                  ;90D705;


CrystalFlash_DecrementSuperMissiles:
    LDA.W $05B6                                                          ;90D706;
    BIT.W #$0007                                                         ;90D709;
    BNE .return                                                          ;90D70C;
    DEC.W $09CA                                                          ;90D70E;
    LDA.W #$0032                                                         ;90D711;
    JSL.L Restore_A_Energy_ToSamus                                       ;90D714;
    DEC.W $0DEC                                                          ;90D718;
    BEQ .timerExpired                                                    ;90D71B;
    BPL .return                                                          ;90D71D;

.timerExpired:
    LDA.W #$000A                                                         ;90D71F;
    STA.W $0DEC                                                          ;90D722;
    INC.W $0DEA                                                          ;90D725;

.return:
    RTS                                                                  ;90D728;


CrystalFlash_DecrementPowerBombs:
    LDA.W $05B6                                                          ;90D729;
    BIT.W #$0007                                                         ;90D72C;
    BNE .return                                                          ;90D72F;
    DEC.W $09CE                                                          ;90D731;
    LDA.W #$0032                                                         ;90D734;
    JSL.L Restore_A_Energy_ToSamus                                       ;90D737;
    DEC.W $0DEC                                                          ;90D73B;
    BEQ .timerExpired                                                    ;90D73E;
    BPL .return                                                          ;90D740;

.timerExpired:
    LDA.W #SamusMovementHandler_CrystalFlash_Finish                      ;90D742;
    STA.W $0A58                                                          ;90D745;
    LDA.W #SamusDrawingHandler_Default                                   ;90D748;
    STA.W $0A5C                                                          ;90D74B;
    LDA.W #$0003                                                         ;90D74E;
    STA.W $0A94                                                          ;90D751;
    LDA.W #$000C                                                         ;90D754;
    STA.W $0A96                                                          ;90D757;

.return:
    RTS                                                                  ;90D75A;


SamusMovementHandler_CrystalFlash_Finish:
    LDA.W $0AFA                                                          ;90D75B;
    CMP.W $0DF0                                                          ;90D75E;
    BEQ +                                                                ;90D761;
    INC A                                                                ;90D763;
    STA.W $0AFA                                                          ;90D764;

  + LDA.W $0A1F                                                          ;90D767;
    AND.W #$00FF                                                         ;90D76A;
    BNE .return                                                          ;90D76D;
    STZ.W $0CEE                                                          ;90D76F;
    LDA.W #$FFFF                                                         ;90D772;
    STA.W $0A68                                                          ;90D775;
    LDA.W #SamusMovementHandler_Normal                                   ;90D778;
    STA.W $0A58                                                          ;90D77B;
    LDA.W $0A60                                                          ;90D77E;
    CMP.W #SamusPoseInputHandler_Demo                                    ;90D781;
    BEQ .return                                                          ;90D784;
    LDA.W #SamusPoseInputHandler_Normal                                  ;90D786;
    STA.W $0A60                                                          ;90D789;
    STZ.W $18A8                                                          ;90D78C;
    STZ.W $18AA                                                          ;90D78F;

.return:
    RTS                                                                  ;90D792;


ProjectilePreInstruction_PlasmaSBA:
    LDA.W $0C04,X                                                        ;90D793;
    AND.W #$00F0                                                         ;90D796;
    BEQ .notDeleted                                                      ;90D799;
    JSL.L Clear_Projectile                                               ;90D79B;
    RTS                                                                  ;90D79F;


.notDeleted:
    LDA.W #$0002                                                         ;90D7A0;
    STA.W $0CCC                                                          ;90D7A3;
    STZ.W $0CD0                                                          ;90D7A6;
    LDA.W $0C7C,X                                                        ;90D7A9;
    TAY                                                                  ;90D7AC;
    LDA.W $0BDC,X                                                        ;90D7AD;
    JSR.W Math_90CC39                                                    ;90D7B0;
    LDA.W $0AF6                                                          ;90D7B3;
    CLC                                                                  ;90D7B6;
    ADC.B $14                                                            ;90D7B7;
    STA.W $0B64,X                                                        ;90D7B9;
    LDA.W $0AFA                                                          ;90D7BC;
    CLC                                                                  ;90D7BF;
    ADC.B $16                                                            ;90D7C0;
    STA.W $0B78,X                                                        ;90D7C2;
    LDA.W $0C7C,X                                                        ;90D7C5;
    CLC                                                                  ;90D7C8;
    ADC.W $0B60                                                          ;90D7C9;
    AND.W #$00FF                                                         ;90D7CC;
    STA.W $0C7C,X                                                        ;90D7CF;
    TXY                                                                  ;90D7D2;
    LDA.W $0BF0,X                                                        ;90D7D3;
    ASL A                                                                ;90D7D6;
    TAX                                                                  ;90D7D7;
    JMP.W (.pointers,X)                                                  ;90D7D8;


.pointers:
    dw PlasmaSBA_Phase0_Expanding                                        ;90D7DB;
    dw PlasmaSBA_Phase1_Contracting                                      ;90D7DD;
    dw PlasmaSBA_Phase2_Dispersing                                       ;90D7DF;

PlasmaSBA_Phase0_Expanding:
    LDA.W $0BDC,Y                                                        ;90D7E1;
    CLC                                                                  ;90D7E4;
    ADC.W #$0004                                                         ;90D7E5;
    AND.W #$00FF                                                         ;90D7E8;
    STA.W $0BDC,Y                                                        ;90D7EB;
    CMP.W #$00C0                                                         ;90D7EE;
    BMI .return                                                          ;90D7F1;
    LDA.W #$0001                                                         ;90D7F3;
    STA.W $0BF0,Y                                                        ;90D7F6;

.return:
    RTS                                                                  ;90D7F9;


PlasmaSBA_Phase1_Contracting:
    LDA.W $0BDC,Y                                                        ;90D7FA;
    SEC                                                                  ;90D7FD;
    SBC.W #$0004                                                         ;90D7FE;
    AND.W #$00FF                                                         ;90D801;
    STA.W $0BDC,Y                                                        ;90D804;
    CMP.W #$002D                                                         ;90D807;
    BPL .return                                                          ;90D80A;
    LDA.W #$0002                                                         ;90D80C;
    STA.W $0BF0,Y                                                        ;90D80F;

.return:
    RTS                                                                  ;90D812;


PlasmaSBA_Phase2_Dispersing:
    LDA.W $0B64,Y                                                        ;90D813;
    SEC                                                                  ;90D816;
    SBC.W $0911                                                          ;90D817;
    CMP.W #$FFE0                                                         ;90D81A;
    BMI .clear                                                           ;90D81D;
    CMP.W #$0120                                                         ;90D81F;
    BPL .clear                                                           ;90D822;
    LDA.W $0B78,Y                                                        ;90D824;
    SEC                                                                  ;90D827;
    SBC.W $0915                                                          ;90D828;
    CMP.W #$0010                                                         ;90D82B;
    BMI .clear                                                           ;90D82E;
    CMP.W #$0100                                                         ;90D830;
    BPL .clear                                                           ;90D833;
    LDA.W $0BDC,Y                                                        ;90D835;
    CLC                                                                  ;90D838;
    ADC.W #$0004                                                         ;90D839;
    AND.W #$00FF                                                         ;90D83C;
    STA.W $0BDC,Y                                                        ;90D83F;
    RTS                                                                  ;90D842;


.clear:
    TYX                                                                  ;90D843;
    JSL.L Clear_Projectile                                               ;90D844;
    RTS                                                                  ;90D848;


BombSpread:
    LDA.W $0C72                                                          ;90D849;
    CMP.W #ProjectilePreInstruction_BombSpread                           ;90D84C;
    BNE .notYetBombSpread                                                ;90D84F;
    CLC                                                                  ;90D851;
    RTS                                                                  ;90D852;


.notYetBombSpread:
    LDX.W #$000A                                                         ;90D853;

.loop:
    LDA.W #$8500                                                         ;90D856;
    STA.W $0C18,X                                                        ;90D859;
    STZ.W $0C04,X                                                        ;90D85C;
    LDA.W #ProjectilePreInstruction_BombSpread                           ;90D85F;
    STA.W $0C68,X                                                        ;90D862;
    JSL.L InitializeBomb                                                 ;90D865;
    LDA.W $0AF6                                                          ;90D869;
    STA.W $0B64,X                                                        ;90D86C;
    STZ.W $0B8C,X                                                        ;90D86F;
    LDA.W $0AFA                                                          ;90D872;
    STA.W $0B78,X                                                        ;90D875;
    STZ.W $0BA0,X                                                        ;90D878;
    TXA                                                                  ;90D87B;
    SEC                                                                  ;90D87C;
    SBC.W #$000A                                                         ;90D87D;
    TAY                                                                  ;90D880;
    LDA.W BombSpreadData_XVelocities,Y                                   ;90D881;
    STA.W $0BDC,X                                                        ;90D884;
    LDA.W BombSpreadData_YSubSpeeds,Y                                    ;90D887;
    STA.W $0C90,X                                                        ;90D88A;
    LDA.W $0CD4                                                          ;90D88D;
    ASL A                                                                ;90D890;
    ASL A                                                                ;90D891;
    XBA                                                                  ;90D892;
    AND.W #$0003                                                         ;90D893;
    CLC                                                                  ;90D896;
    ADC.W BombSpreadData_YSpeeds,Y                                       ;90D897;
    EOR.W #$FFFF                                                         ;90D89A;
    INC A                                                                ;90D89D;
    STA.W $0BF0,X                                                        ;90D89E;
    STA.W $0CA4,X                                                        ;90D8A1;
    LDA.W BombSpreadData_timers,Y                                        ;90D8A4;
    STA.W $0C7C,X                                                        ;90D8A7;
    INX                                                                  ;90D8AA;
    INX                                                                  ;90D8AB;
    CPX.W #$0014                                                         ;90D8AC;
    BMI .loop                                                            ;90D8AF;
    LDA.W #$0005                                                         ;90D8B1;
    STA.W $0CD2                                                          ;90D8B4;
    LDA.W $0C22                                                          ;90D8B7;
    XBA                                                                  ;90D8BA;
    AND.W #$000F                                                         ;90D8BB;
    TAY                                                                  ;90D8BE;
    LDA.W ProjectileCooldowns_NonBeamProjectiles,Y                       ;90D8BF;
    AND.W #$00FF                                                         ;90D8C2;
    STA.W $0CCC                                                          ;90D8C5;
    STZ.W $0CD4                                                          ;90D8C8;
    STZ.W $0CD0                                                          ;90D8CB;
    RTS                                                                  ;90D8CE;


BombSpreadData:
  .timers:
    db $78,$00,$6E,$00,$64,$00,$6E,$00,$78,$00                           ;90D8CF;
  .XVelocities:
; Unit 1/100h px/frame. MSb = direction, set = left, clear = right
    db $00,$81,$80,$80,$00,$00,$80,$00,$00,$01                           ;90D8D9;
  .YSpeeds:
    db $00,$00,$01,$00,$02,$00,$01,$00,$00,$00                           ;90D8E3;
  .YSubSpeeds:
    db $00,$00,$00,$00,$00,$80,$00,$00,$00,$00                           ;90D8ED;

ProjectilePreInstruction_BombSpread:
    LDA.W $0C04,X                                                        ;90D8F7;
    AND.W #$00F0                                                         ;90D8FA;
    BEQ .notDeleted                                                      ;90D8FD;
    JSL.L Clear_Projectile                                               ;90D8FF;
    RTS                                                                  ;90D903;


.notDeleted:
    JSR.W HandleBomb                                                     ;90D904;
    LDA.W $0C7C,X                                                        ;90D907;
    BNE .timerNotExpired                                                 ;90D90A;
    JMP.W .movementDone                                                  ;90D90C;


.timerNotExpired:
    LDA.W $0C90,X                                                        ;90D90F;
    CLC                                                                  ;90D912;
    ADC.W $0B32                                                          ;90D913;
    STA.W $0C90,X                                                        ;90D916;
    LDA.W $0BF0,X                                                        ;90D919;
    ADC.W $0B34                                                          ;90D91C;
    STA.W $0BF0,X                                                        ;90D91F;
    LDA.W $0BA0,X                                                        ;90D922;
    CLC                                                                  ;90D925;
    ADC.W $0C90,X                                                        ;90D926;
    STA.W $0BA0,X                                                        ;90D929;
    LDA.W $0B78,X                                                        ;90D92C;
    ADC.W $0BF0,X                                                        ;90D92F;
    STA.W $0B78,X                                                        ;90D932;
    JSL.L BombSpreadBlockCollisionDetection                              ;90D935;
    BCC .falling                                                         ;90D939;
    LDX.W $0DDE                                                          ;90D93B;
    TXA                                                                  ;90D93E;
    SEC                                                                  ;90D93F;
    SBC.W #$000A                                                         ;90D940;
    TAY                                                                  ;90D943;
    LDA.W $0BA0,X                                                        ;90D944;
    SEC                                                                  ;90D947;
    SBC.W $0C90,X                                                        ;90D948;
    STA.W $0BA0,X                                                        ;90D94B;
    LDA.W $0B78,X                                                        ;90D94E;
    SBC.W $0BF0,X                                                        ;90D951;
    STA.W $0B78,X                                                        ;90D954;
    LDA.W $0BF0,X                                                        ;90D957;
    BMI .negativeYVelocity                                               ;90D95A;
    LDA.W BombSpreadData_YSubSpeeds,Y                                    ;90D95C;
    STA.W $0C90,X                                                        ;90D95F;
    LDA.W $0CA4,X                                                        ;90D962;
    STA.W $0BF0,X                                                        ;90D965;
    JMP.W .return                                                        ;90D968;


.negativeYVelocity:
    STZ.W $0BF0,X                                                        ;90D96B;
    STZ.W $0BC8,X                                                        ;90D96E;
    JMP.W .return                                                        ;90D971;


.falling:
    LDX.W $0DDE                                                          ;90D974;
    LDA.W $0BDC,X                                                        ;90D977;
    XBA                                                                  ;90D97A;
    PHA                                                                  ;90D97B;
    AND.W #$FF00                                                         ;90D97C;
    STA.B $14                                                            ;90D97F;
    PLA                                                                  ;90D981;
    AND.W #$00FF                                                         ;90D982;
    STA.B $12                                                            ;90D985;
    BIT.W #$0080                                                         ;90D987;
    BEQ .right                                                           ;90D98A;
    AND.W #$FF7F                                                         ;90D98C;
    STA.B $12                                                            ;90D98F;
    BRA .left                                                            ;90D991;


.right:
    LDA.W $0B8C,X                                                        ;90D993;
    CLC                                                                  ;90D996;
    ADC.B $14                                                            ;90D997;
    STA.W $0B8C,X                                                        ;90D999;
    LDA.W $0B64,X                                                        ;90D99C;
    ADC.B $12                                                            ;90D99F;
    STA.W $0B64,X                                                        ;90D9A1;
    BRA .movementDone                                                    ;90D9A4;


.left:
    LDA.W $0B8C,X                                                        ;90D9A6;
    SEC                                                                  ;90D9A9;
    SBC.B $14                                                            ;90D9AA;
    STA.W $0B8C,X                                                        ;90D9AC;
    LDA.W $0B64,X                                                        ;90D9AF;
    SBC.B $12                                                            ;90D9B2;
    STA.W $0B64,X                                                        ;90D9B4;

.movementDone:
    JSL.L BombSpreadBlockCollisionDetection                              ;90D9B7;
    BCC .return                                                          ;90D9BB;
    LDX.W $0DDE                                                          ;90D9BD;
    LDA.W $0BDC,X                                                        ;90D9C0;
    PHA                                                                  ;90D9C3;
    XBA                                                                  ;90D9C4;
    PHA                                                                  ;90D9C5;
    AND.W #$FF00                                                         ;90D9C6;
    STA.B $14                                                            ;90D9C9;
    PLA                                                                  ;90D9CB;
    AND.W #$007F                                                         ;90D9CC;
    STA.B $12                                                            ;90D9CF;
    PLA                                                                  ;90D9D1;
    BIT.W #$8000                                                         ;90D9D2;
    BEQ .bounceLeft                                                      ;90D9D5;
    AND.W #$7FFF                                                         ;90D9D7;
    STA.W $0BDC,X                                                        ;90D9DA;
    LDA.W $0B8C,X                                                        ;90D9DD;
    CLC                                                                  ;90D9E0;
    ADC.B $14                                                            ;90D9E1;
    STA.W $0B8C,X                                                        ;90D9E3;
    LDA.W $0B64,X                                                        ;90D9E6;
    ADC.B $12                                                            ;90D9E9;
    STA.W $0B64,X                                                        ;90D9EB;
    BRA .return                                                          ;90D9EE;


.bounceLeft:
    ORA.W #$8000                                                         ;90D9F0;
    STA.W $0BDC,X                                                        ;90D9F3;
    LDA.W $0B8C,X                                                        ;90D9F6;
    SEC                                                                  ;90D9F9;
    SBC.B $14                                                            ;90D9FA;
    STA.W $0B8C,X                                                        ;90D9FC;
    LDA.W $0B64,X                                                        ;90D9FF;
    SBC.B $12                                                            ;90DA02;
    STA.W $0B64,X                                                        ;90DA04;

.return:
    RTS                                                                  ;90DA07;


ProjectilePreInstruction_WaveSBA:
    LDA.W $0C04,X                                                        ;90DA08;
    BIT.W #$00F0                                                         ;90DA0B;
    BNE .deleted                                                         ;90DA0E;
    DEC.W $0BF0,X                                                        ;90DA10;
    BEQ .deleted                                                         ;90DA13;
    BPL .alive                                                           ;90DA15;

.deleted:
    LDA.W #$0029                                                         ;90DA17;
    JSL.L QueueSound_Lib1_Max6                                           ;90DA1A;
    JSL.L Clear_Projectile                                               ;90DA1E;
    RTS                                                                  ;90DA22;


.alive:
    LDA.W $0BDC,X                                                        ;90DA23;
    STA.B $22                                                            ;90DA26;
    LDA.W $0C7C,X                                                        ;90DA28;
    STA.B $24                                                            ;90DA2B;
    DEC.W $0C90,X                                                        ;90DA2D;
    BNE .checkCrossingRightToLeft                                        ;90DA30;
    LDA.W #$0004                                                         ;90DA32;
    STA.W $0C90,X                                                        ;90DA35;
    JSL.L Spawn_ProjectileTrail                                          ;90DA38;
    LDX.W $0DDE                                                          ;90DA3C;

.checkCrossingRightToLeft:
    LDA.W $0AF6                                                          ;90DA3F;
    CMP.W $0B64,X                                                        ;90DA42;
    BMI .checkCrossingLeftToRight                                        ;90DA45;
    LDA.W $0BDC,X                                                        ;90DA47;
    CMP.W #$0800                                                         ;90DA4A;
    BPL +                                                                ;90DA4D;
    CLC                                                                  ;90DA4F;
    ADC.W #$0040                                                         ;90DA50;
    STA.W $0BDC,X                                                        ;90DA53;
    BRA +                                                                ;90DA56;


.checkCrossingLeftToRight:
    LDA.W $0BDC,X                                                        ;90DA58;
    CMP.W #$F801                                                         ;90DA5B;
    BMI +                                                                ;90DA5E;
    SEC                                                                  ;90DA60;
    SBC.W #$0040                                                         ;90DA61;
    STA.W $0BDC,X                                                        ;90DA64;

  + LDA.W $0BDC,X                                                        ;90DA67;
    XBA                                                                  ;90DA6A;
    PHA                                                                  ;90DA6B;
    AND.W #$FF00                                                         ;90DA6C;
    STA.B $14                                                            ;90DA6F;
    PLA                                                                  ;90DA71;
    AND.W #$00FF                                                         ;90DA72;
    BIT.W #$0080                                                         ;90DA75;
    BEQ +                                                                ;90DA78;
    ORA.W #$FF00                                                         ;90DA7A;

  + STA.B $12                                                            ;90DA7D;
    LDA.W $0B8C,X                                                        ;90DA7F;
    CLC                                                                  ;90DA82;
    ADC.B $14                                                            ;90DA83;
    STA.W $0B8C,X                                                        ;90DA85;
    LDA.W $0B64,X                                                        ;90DA88;
    ADC.B $12                                                            ;90DA8B;
    STA.W $0B64,X                                                        ;90DA8D;
    LDA.W $0AFA                                                          ;90DA90;
    CMP.W $0B78,X                                                        ;90DA93;
    BMI .checkYVelocity                                                  ;90DA96;
    LDA.W $0C7C,X                                                        ;90DA98;
    CMP.W #$0800                                                         ;90DA9B;
    BPL .notMaxYVelocity                                                 ;90DA9E;
    CLC                                                                  ;90DAA0;
    ADC.W #$0040                                                         ;90DAA1;
    STA.W $0C7C,X                                                        ;90DAA4;
    BRA .notMaxYVelocity                                                 ;90DAA7;


.checkYVelocity:
    LDA.W $0C7C,X                                                        ;90DAA9;
    CMP.W #$F801                                                         ;90DAAC;
    BMI .notMaxYVelocity                                                 ;90DAAF;
    SEC                                                                  ;90DAB1;
    SBC.W #$0040                                                         ;90DAB2;
    STA.W $0C7C,X                                                        ;90DAB5;

.notMaxYVelocity:
    LDA.W $0C7C,X                                                        ;90DAB8;
    XBA                                                                  ;90DABB;
    PHA                                                                  ;90DABC;
    AND.W #$FF00                                                         ;90DABD;
    STA.B $14                                                            ;90DAC0;
    PLA                                                                  ;90DAC2;
    AND.W #$00FF                                                         ;90DAC3;
    BIT.W #$0080                                                         ;90DAC6;
    BEQ +                                                                ;90DAC9;
    ORA.W #$FF00                                                         ;90DACB;

  + STA.B $12                                                            ;90DACE;
    LDA.W $0BA0,X                                                        ;90DAD0;
    CLC                                                                  ;90DAD3;
    ADC.B $14                                                            ;90DAD4;
    STA.W $0BA0,X                                                        ;90DAD6;
    LDA.W $0B78,X                                                        ;90DAD9;
    ADC.B $12                                                            ;90DADC;
    STA.W $0B78,X                                                        ;90DADE;
    CPX.W #$0006                                                         ;90DAE1;
    BNE .return                                                          ;90DAE4;
    LDA.W $0BDC,X                                                        ;90DAE6;
    BMI .negativeXVelocity                                               ;90DAE9;
    LDA.B $22                                                            ;90DAEB;
    BPL .return                                                          ;90DAED;
    BRA .playSFX                                                         ;90DAEF;


.negativeXVelocity:
    LDA.B $22                                                            ;90DAF1;
    BMI .return                                                          ;90DAF3;

.playSFX:
    LDA.W #$0028                                                         ;90DAF5;
    JSL.L QueueSound_Lib1_Max6                                           ;90DAF8;

.return:
    LDA.W #$0002                                                         ;90DAFC;
    STA.W $0CCC                                                          ;90DAFF;
    STZ.W $0CD0                                                          ;90DB02;
    RTS                                                                  ;90DB05;


ProjectilePreInstruction_SpazerSBA:
    LDA.W $0C04,X                                                        ;90DB06;
    AND.W #$00F0                                                         ;90DB09;
    BEQ .notDeleted                                                      ;90DB0C;
    JSR.W (.clearing,X)                                                  ;90DB0E;
    RTS                                                                  ;90DB11;


.notDeleted:
    DEC.W $0C90,X                                                        ;90DB12;
    BNE .timerNotExpired                                                 ;90DB15;
    LDA.W #$0004                                                         ;90DB17;
    STA.W $0C90,X                                                        ;90DB1A;
    JSL.L Spawn_ProjectileTrail                                          ;90DB1D;
    LDX.W $0DDE                                                          ;90DB21;

.timerNotExpired:
    LDA.W $0C7C,X                                                        ;90DB24;
    TAY                                                                  ;90DB27;
    LDA.W $0BDC,X                                                        ;90DB28;
    JSR.W Math_90CC39                                                    ;90DB2B;
    LDA.W $0AF6                                                          ;90DB2E;
    CLC                                                                  ;90DB31;
    ADC.B $14                                                            ;90DB32;
    STA.W $0B64,X                                                        ;90DB34;
    TXY                                                                  ;90DB37;
    LDA.W $0CA4,X                                                        ;90DB38;
    TAX                                                                  ;90DB3B;
    JSR.W (.phases,X)                                                    ;90DB3C;
    LDA.W #$0002                                                         ;90DB3F;
    STA.W $0CCC                                                          ;90DB42;
    STZ.W $0CD0                                                          ;90DB45;
    RTS                                                                  ;90DB48;


.phases:
    dw SpazerSBA_Phase0_Circling                                         ;90DB49;
    dw SpazerSBA_Phase2_FlyingUpTowardsPoint                             ;90DB4B;
    dw SpazerSBA_Phase4_FlyingUpAwayFromPoint                            ;90DB4D;

.clearing:
; Projectile clearing subroutines
    dw ClearSpazerSBAPair_0                                              ;90DB4F;
    dw ClearSpazerSBAPair_2                                              ;90DB51;
    dw ClearSpazerSBAPair_4                                              ;90DB53;
    dw ClearSpazerSBAPair_6                                              ;90DB55;

ClearSpazerSBAPair_0:
    JSL.L Clear_Projectile                                               ;90DB57;
    LDX.W #$0004                                                         ;90DB5B;
    JSL.L Clear_Projectile                                               ;90DB5E;
    LDX.W #$0000                                                         ;90DB62;
    RTS                                                                  ;90DB65;


ClearSpazerSBAPair_2:
    JSL.L Clear_Projectile                                               ;90DB66;
    LDX.W #$0006                                                         ;90DB6A;
    JSL.L Clear_Projectile                                               ;90DB6D;
    LDX.W #$0002                                                         ;90DB71;
    RTS                                                                  ;90DB74;


ClearSpazerSBAPair_4:
    JSL.L Clear_Projectile                                               ;90DB75;
    LDX.W #$0000                                                         ;90DB79;
    JSL.L Clear_Projectile                                               ;90DB7C;
    LDX.W #$0004                                                         ;90DB80;
    RTS                                                                  ;90DB83;


ClearSpazerSBAPair_6:
    JSL.L Clear_Projectile                                               ;90DB84;
    LDX.W #$0002                                                         ;90DB88;
    JSL.L Clear_Projectile                                               ;90DB8B;
    LDX.W #$0006                                                         ;90DB8F;
    RTS                                                                  ;90DB92;


SpazerSBA_Phase0_Circling:
    LDA.W $0AFA                                                          ;90DB93;
    CLC                                                                  ;90DB96;
    ADC.B $16                                                            ;90DB97;
    STA.W $0B78,Y                                                        ;90DB99;
    LDA.W $0C7C,Y                                                        ;90DB9C;
    CLC                                                                  ;90DB9F;
    ADC.W $0BF0,Y                                                        ;90DBA0;
    AND.W #$00FF                                                         ;90DBA3;
    STA.W $0C7C,Y                                                        ;90DBA6;
    CMP.W #$0080                                                         ;90DBA9;
    BNE .return                                                          ;90DBAC;
    LDA.W #$00A0                                                         ;90DBAE;
    STA.W $0BDC,Y                                                        ;90DBB1;
    LDA.W .angleDeltas,Y                                                 ;90DBB4;
    STA.W $0BF0,Y                                                        ;90DBB7;
    LDA.W #$0000                                                         ;90DBBA;
    STA.W $0C04,Y                                                        ;90DBBD;
    LDA.W #$0002                                                         ;90DBC0;
    STA.W $0CA4,Y                                                        ;90DBC3;

.return:
    RTS                                                                  ;90DBC6;


.angleDeltas:
    dw $0002,$FFFE,$0002,$FFFE                                           ;90DBC7;

SpazerSBA_Phase2_FlyingUpTowardsPoint:
    LDA.W $0AFA                                                          ;90DBCF;
    SEC                                                                  ;90DBD2;
    SBC.W #$0072                                                         ;90DBD3;
    CLC                                                                  ;90DBD6;
    ADC.B $16                                                            ;90DBD7;
    STA.W $0B78,Y                                                        ;90DBD9;
    SEC                                                                  ;90DBDC;
    SBC.W $0915                                                          ;90DBDD;
    CMP.W #$0010                                                         ;90DBE0;
    BPL +                                                                ;90DBE3;
    JSR.W FireEndOfSpazerSBA                                             ;90DBE5;
    RTS                                                                  ;90DBE8;


  + LDA.W $0C7C,Y                                                        ;90DBE9;
    CLC                                                                  ;90DBEC;
    ADC.W $0BF0,Y                                                        ;90DBED;
    AND.W #$00FF                                                         ;90DBF0;
    STA.W $0C7C,Y                                                        ;90DBF3;
    LDA.W $0BDC,Y                                                        ;90DBF6;
    SEC                                                                  ;90DBF9;
    SBC.W #$0005                                                         ;90DBFA;
    STA.W $0BDC,Y                                                        ;90DBFD;
    BNE .return                                                          ;90DC00;
    LDA.W .angleDeltas,Y                                                 ;90DC02;
    STA.W $0BF0,Y                                                        ;90DC05;
    LDA.W $0C7C,Y                                                        ;90DC08;
    CLC                                                                  ;90DC0B;
    ADC.W #$0080                                                         ;90DC0C;
    AND.W #$00FF                                                         ;90DC0F;
    STA.W $0C7C,Y                                                        ;90DC12;
    LDA.W #$0004                                                         ;90DC15;
    STA.W $0CA4,Y                                                        ;90DC18;
    CPY.W #$0000                                                         ;90DC1B;
    BNE .return                                                          ;90DC1E;
    LDA.W #$0026                                                         ;90DC20;
    JSL.L QueueSound_Lib1_Max6                                           ;90DC23;

.return:
    RTS                                                                  ;90DC27;


.angleDeltas:
    dw $FFFE,$0002,$FFFE,$0002                                           ;90DC28;

SpazerSBA_Phase4_FlyingUpAwayFromPoint:
    LDA.W $0AFA                                                          ;90DC30;
    SEC                                                                  ;90DC33;
    SBC.W #$0072                                                         ;90DC34;
    CLC                                                                  ;90DC37;
    ADC.B $16                                                            ;90DC38;
    STA.W $0B78,Y                                                        ;90DC3A;
    SEC                                                                  ;90DC3D;
    SBC.W $0915                                                          ;90DC3E;
    CMP.W #$0010                                                         ;90DC41;
    BPL .onScreen                                                        ;90DC44;

.fireSBAEnd:
    JSR.W FireEndOfSpazerSBA                                             ;90DC46;
    RTS                                                                  ;90DC49;


.onScreen:
    LDA.W $0C7C,Y                                                        ;90DC4A;
    CLC                                                                  ;90DC4D;
    ADC.W $0BF0,Y                                                        ;90DC4E;
    AND.W #$00FF                                                         ;90DC51;
    STA.W $0C7C,Y                                                        ;90DC54;
    LDA.W $0BDC,Y                                                        ;90DC57;
    CLC                                                                  ;90DC5A;
    ADC.W #$0005                                                         ;90DC5B;
    STA.W $0BDC,Y                                                        ;90DC5E;
    CMP.W #$0060                                                         ;90DC61;
    BPL .fireSBAEnd                                                      ;90DC64;
    RTS                                                                  ;90DC66;


FireEndOfSpazerSBA:
    LDA.W $0B64,Y                                                        ;90DC67;
    CLC                                                                  ;90DC6A;
    ADC.W .data,Y                                                        ;90DC6B;
    STA.W $0B64,Y                                                        ;90DC6E;
    LDA.W #$0005                                                         ;90DC71;
    STA.W $0C04,Y                                                        ;90DC74;
    LDA.W #$0004                                                         ;90DC77;
    STA.W $0C90,Y                                                        ;90DC7A;
    LDA.W #ProjectilePreInstruction_EndOfSpazerSBA                       ;90DC7D;
    STA.W $0C68,Y                                                        ;90DC80;
    CPY.W #$0004                                                         ;90DC83;
    BPL .return                                                          ;90DC86;
    LDA.W #$8024                                                         ;90DC88;
    STA.W $0C18,Y                                                        ;90DC8B;
    TYX                                                                  ;90DC8E;
    JSL.L Initialize_ShinesparkEcho_or_SpazerSBATrailProjectile          ;90DC8F;

.return:
    RTS                                                                  ;90DC93;


.data:
    dw $0010,$0010,$FFF0,$FFF0                                           ;90DC94;

ProjectilePreInstruction_EndOfSpazerSBA:
    LDA.W $0C04,X                                                        ;90DC9C;
    AND.W #$00F0                                                         ;90DC9F;
    BEQ .notDeleted                                                      ;90DCA2;
    JSL.L Clear_Projectile                                               ;90DCA4;
    RTS                                                                  ;90DCA8;


.notDeleted:
    DEC.W $0C90,X                                                        ;90DCA9;
    BNE .timerNotExpired                                                 ;90DCAC;
    LDA.W #$0004                                                         ;90DCAE;
    STA.W $0C90,X                                                        ;90DCB1;
    JSL.L Spawn_ProjectileTrail                                          ;90DCB4;
    LDX.W $0DDE                                                          ;90DCB8;

.timerNotExpired:
    LDA.W $0B78,X                                                        ;90DCBB;
    CLC                                                                  ;90DCBE;
    ADC.W #$0008                                                         ;90DCBF;
    STA.W $0B78,X                                                        ;90DCC2;
    SEC                                                                  ;90DCC5;
    SBC.W $0915                                                          ;90DCC6;
    CMP.W #$00F8                                                         ;90DCC9;
    BMI +                                                                ;90DCCC;
    JSL.L Clear_Projectile                                               ;90DCCE;
    RTS                                                                  ;90DCD2;


  + LDA.W #$0002                                                         ;90DCD3;
    STA.W $0CCC                                                          ;90DCD6;
    STZ.W $0CD0                                                          ;90DCD9;
    RTS                                                                  ;90DCDC;


HandleHUDSpecificBehaviorAndProjectiles:
    PHP                                                                  ;90DCDD;
    REP #$30                                                             ;90DCDE;
    LDA.W $0A1C                                                          ;90DCE0;
    BEQ .facingForward                                                   ;90DCE3;
    CMP.W #$009B                                                         ;90DCE5;
    BEQ .facingForward                                                   ;90DCE8;
    JSR.W Handle_Samus_Cooldown                                          ;90DCEA;
    JSR.W HandleSwitchingHUDSelection                                    ;90DCED;
    LDA.W $0A1F                                                          ;90DCF0;
    AND.W #$00FF                                                         ;90DCF3;
    ASL A                                                                ;90DCF6;
    TAX                                                                  ;90DCF7;
    JSR.W (.pointers,X)                                                  ;90DCF8;
    LDA.W $0A78                                                          ;90DCFB;
    BNE .return                                                          ;90DCFE;

.facingForward:
    JSR.W Handle_Projectiles                                             ;90DD00;

.return:
    PLP                                                                  ;90DD03;
    RTS                                                                  ;90DD04;


.pointers:
    dw HUDSelectionHandler_Standard                                      ;90DD05; 0: Standing
    dw HUDSelectionHandler_Standard                                      ;90DD07; 1: Running
    dw HUDSelectionHandler_Standard                                      ;90DD09; 2: Normal jumping
    dw HUDSelectionHandler_SpinWallJump_Knockback_Shinespark_CF_etc      ;90DD0B; 3: Spin jumping
    dw HUDSelectionHandler_MorphBall                                     ;90DD0D; 4: Morph ball - on ground
    dw HUDSelectionHandler_Standard                                      ;90DD0F; 5: Crouching
    dw HUDSelectionHandler_Standard                                      ;90DD11; 6: Falling
    dw HUDSelectionHandler_MorphBall                                     ;90DD13; 7: Unused. Glitchy morph ball / spin jump
    dw HUDSelectionHandler_MorphBall                                     ;90DD15; 8: Morph ball - falling
    dw HUDSelectionHandler_MorphBall                                     ;90DD17; 9: Unused
    dw HUDSelectionHandler_SpinWallJump_Knockback_Shinespark_CF_etc      ;90DD19; Ah: Knockback / crystal flash ending
    dw HUDSelectionHandler_Grappling                                     ;90DD1B; Bh: Unused
    dw HUDSelectionHandler_Grappling                                     ;90DD1D; Ch: Unused
    dw HUDSelectionHandler_SpinWallJump_Knockback_Shinespark_CF_etc      ;90DD1F; Dh: Unused
    dw HUDSelectionHandler_TurningAround                                 ;90DD21; Eh: Turning around - on ground
    dw HUDSelectionHandler_TransitionPoses                               ;90DD23; Fh: Crouching/standing/morphing/unmorphing transition
    dw HUDSelectionHandler_Standard                                      ;90DD25; 10h: Moonwalking
    dw HUDSelectionHandler_MorphBall                                     ;90DD27; 11h: Spring ball - on ground
    dw HUDSelectionHandler_MorphBall                                     ;90DD29; 12h: Spring ball - in air
    dw HUDSelectionHandler_MorphBall                                     ;90DD2B; 13h: Spring ball - falling
    dw HUDSelectionHandler_SpinWallJump_Knockback_Shinespark_CF_etc      ;90DD2D; 14h: Wall jumping
    dw HUDSelectionHandler_Standard                                      ;90DD2F; 15h: Ran into a wall
    dw HUDSelectionHandler_Grappling                                     ;90DD31; 16h: Grappling
    dw HUDSelectionHandler_TurningAround                                 ;90DD33; 17h: Turning around - jumping
    dw HUDSelectionHandler_TurningAround                                 ;90DD35; 18h: Turning around - falling
    dw HUDSelectionHandler_SpinWallJump_Knockback_Shinespark_CF_etc      ;90DD37; 19h: Damage boost
    dw HUDSelectionHandler_GrabbedByDraygon                              ;90DD39; 1Ah: Grabbed by Draygon
    dw HUDSelectionHandler_SpinWallJump_Knockback_Shinespark_CF_etc      ;90DD3B; 1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

HUDSelectionHandler_Standard:
    PHP                                                                  ;90DD3D;
    REP #$30                                                             ;90DD3E;
    LDA.W $0D32                                                          ;90DD40;
    CMP.W #GrappleBeamFunction_Inactive                                  ;90DD43;
    BEQ .notFiringGrapple                                                ;90DD46;
    LDX.W #$0008                                                         ;90DD48;
    BRA .execute                                                         ;90DD4B;


.notFiringGrapple:
    LDA.W $0A78                                                          ;90DD4D;
    BEQ .Xray                                                            ;90DD50;
    LDX.W #$000A                                                         ;90DD52;
    BRA .execute                                                         ;90DD55;


.Xray:
    LDA.W $09D2                                                          ;90DD57;
    ASL A                                                                ;90DD5A;
    TAX                                                                  ;90DD5B;

.execute:
    JSR.W (.pointers,X)                                                  ;90DD5C;
    PLP                                                                  ;90DD5F;
    RTS                                                                  ;90DD60;


.pointers:
    dw HUDSelectionHandler_Nothing_PowerBombs                            ;90DD61; Nothing
    dw HUDSelectionHandler_Missiles_SuperMissiles                        ;90DD63; Missiles
    dw HUDSelectionHandler_Missiles_SuperMissiles                        ;90DD65; Super missiles
    dw HUDSelectionHandler_Nothing_PowerBombs                            ;90DD67; Power bombs
    dw HUDSelectionHandler_Grappling                                     ;90DD69; Grapple
    dw HUDSelectionHandler_Xray                                          ;90DD6B; X-ray
    dw HUDSelectionHandler_TurningAround                                 ;90DD6D; HUD selection handler for turning, looks like a mistake, would cause stack overflow if Samus shoots in the air, can't be indexed anyway

HUDSelectionHandler_Grappling:
    JSL.L GrappleBeamHandler                                             ;90DD6F;
    RTS                                                                  ;90DD73;


HUDSelectionHandler_TurningAround:
    LDA.W $0B5E                                                          ;90DD74;
    BEQ .notShooting                                                     ;90DD77;
    JSR.W HUDSelectionHandler_Standard                                   ;90DD79;
    RTS                                                                  ;90DD7C;


.notShooting:
    LDA.W $0D32                                                          ;90DD7D;
    CMP.W #GrappleBeamFunction_Inactive                                  ;90DD80;
    BEQ .return                                                          ;90DD83;
    LDA.W #GrappleBeamFunction_HitNothing_Cancel                         ;90DD85;
    STA.W $0D32                                                          ;90DD88;

.return:
    RTS                                                                  ;90DD8B;


HUDSelectionHandler_TransitionPoses:
    LDA.W $0A1C                                                          ;90DD8C;
    CMP.W #$00F1                                                         ;90DD8F;
    BPL .standard                                                        ;90DD92;
    CMP.W #$00DB                                                         ;90DD94;
    BPL .return                                                          ;90DD97;
    SEC                                                                  ;90DD99;
    SBC.W #$0035                                                         ;90DD9A;
    TAX                                                                  ;90DD9D;
    LDA.W .flags,X                                                       ;90DD9E;
    AND.W #$00FF                                                         ;90DDA1;
    BNE HUDSelectionHandler_SpinWallJump_Knockback_Shinespark_CF_etc     ;90DDA4;

.standard:
    JSR.W HUDSelectionHandler_Standard                                   ;90DDA6;

.return:
    RTS                                                                  ;90DDA9;


.flags:                                                                  ;90DDAA;
    db $00 ; Facing right - crouching transition
    db $00 ; Facing left  - crouching transition
    db $01 ; Facing right - morphing transition
    db $01 ; Facing left  - morphing transition
    db $01 ; Unused
    db $01 ; Unused
    db $00 ; Facing right - standing transition
    db $00 ; Facing left  - standing transition
    db $01 ; Facing right - unmorphing transition
    db $01 ; Facing left  - unmorphing transition
    db $01 ; Unused
    db $01 ; Unused

HUDSelectionHandler_SpinWallJump_Knockback_Shinespark_CF_etc:
    LDA.W $0D32                                                          ;90DDB6;
    CMP.W #GrappleBeamFunction_Inactive                                  ;90DDB9;
    BEQ .return                                                          ;90DDBC;
    LDA.W #GrappleBeamFunction_HitNothing_Cancel                         ;90DDBE;
    STA.W $0D32                                                          ;90DDC1;
    JSR.W HUDSelectionHandler_Standard                                   ;90DDC4;

.return:
    RTS                                                                  ;90DDC7;


HUDSelectionHandler_Xray:
    LDA.B $8B                                                            ;90DDC8;
    BIT.W $09B6                                                          ;90DDCA;
    BNE .Xray                                                            ;90DDCD;
    JSR.W HUDSelectionHandler_Nothing_PowerBombs                         ;90DDCF;
    RTS                                                                  ;90DDD2;


.Xray:
    JSL.L XrayHandler                                                    ;90DDD3;
    RTS                                                                  ;90DDD7;


HUDSelectionHandler_GrabbedByDraygon:
    LDA.W $0A1C                                                          ;90DDD8;
    CMP.W #$00DF                                                         ;90DDDB;
    BEQ .morphBall                                                       ;90DDDE;
    JSR.W HUDSelectionHandler_Standard                                   ;90DDE0;
    BRA .return                                                          ;90DDE3;


.morphBall:
    JSR.W HUDSelectionHandler_MorphBall                                  ;90DDE5;

.return:
    RTS                                                                  ;90DDE8;


SamusIsHit_Interruption:
    PHP                                                                  ;90DDE9;
    REP #$30                                                             ;90DDEA;
    LDA.W $18AA                                                          ;90DDEC;
    BEQ .knockbackTimerZero                                              ;90DDEF;
    LDA.W $0DE0                                                          ;90DDF1;
    CMP.W #$0007                                                         ;90DDF4;
    BMI .notInvincible                                                   ;90DDF7;
    STZ.W $18A8                                                          ;90DDF9;
    STZ.W $18AA                                                          ;90DDFC;
    BRA .returnUpper                                                     ;90DDFF;


.notInvincible:
    LDA.W $0A78                                                          ;90DE01;
    BNE .returnUpper                                                     ;90DE04;
    LDA.W $0A52                                                          ;90DE06;
    BNE .returnUpper                                                     ;90DE09;
    LDA.W $0A1F                                                          ;90DE0B;
    AND.W #$00FF                                                         ;90DE0E;
    ASL A                                                                ;90DE11;
    TAX                                                                  ;90DE12;
    JSR.W (.pointers,X)                                                  ;90DE13;
    BCC .returnUpper                                                     ;90DE16;
    LDA.W #$0001                                                         ;90DE18;
    STA.W $0A30                                                          ;90DE1B;

.returnUpper:
    PLP                                                                  ;90DE1E;
    RTS                                                                  ;90DE1F;


.knockbackTimerZero:
    LDA.W $0A52                                                          ;90DE20;
    BEQ .noKnockback                                                     ;90DE23;
    LDA.W $0A1F                                                          ;90DE25;
    AND.W #$00FF                                                         ;90DE28;
    CMP.W #$000A                                                         ;90DE2B;
    BEQ .knockbackMovement                                               ;90DE2E;
    LDA.W $0A32                                                          ;90DE30;
    CMP.W #$0003                                                         ;90DE33;
    BNE .superSpecialProspectivePose                                     ;90DE36;
    LDA.W #$0008                                                         ;90DE38;
    STA.W $0A32                                                          ;90DE3B;
    PLP                                                                  ;90DE3E;
    RTS                                                                  ;90DE3F;


.superSpecialProspectivePose:
    LDA.W $0A1C                                                          ;90DE40;
    STA.W $0A2C                                                          ;90DE43;
    BRA .knockbackFinished                                               ;90DE46;


.knockbackMovement:
    LDA.W $0CD0                                                          ;90DE48;
    CMP.W #$0010                                                         ;90DE4B;
    BMI .lessThan10                                                      ;90DE4E;
    LDA.W #$0041                                                         ;90DE50;
    JSL.L QueueSound_Lib1_Max6                                           ;90DE53;

.lessThan10:
    LDA.W $0A1E                                                          ;90DE57;
    AND.W #$00FF                                                         ;90DE5A;
    CMP.W #$0004                                                         ;90DE5D;
    BEQ .facingLeft                                                      ;90DE60;
    LDA.W #$0029                                                         ;90DE62;
    STA.W $0A2C                                                          ;90DE65;
    BRA .knockbackFinished                                               ;90DE68;


.facingLeft:
    LDA.W #$002A                                                         ;90DE6A;
    STA.W $0A2C                                                          ;90DE6D;

.knockbackFinished:
    LDA.W #$0001                                                         ;90DE70;
    STA.W $0A32                                                          ;90DE73;
    PLP                                                                  ;90DE76;
    RTS                                                                  ;90DE77;


.noKnockback:
    LDA.W $0A56                                                          ;90DE78;
    BEQ .returnLower                                                     ;90DE7B;
    JSR.W SerupBombJump                                                  ;90DE7D;

.returnLower:
    PLP                                                                  ;90DE80;
    RTS                                                                  ;90DE81;


.pointers:
    dw KnockbackTransition_Normal                                        ;90DE82; 0: Standing
    dw KnockbackTransition_Normal                                        ;90DE84; 1: Running
    dw KnockbackTransition_Normal                                        ;90DE86; 2: Normal jumping
    dw KnockbackTransition_Normal                                        ;90DE88; 3: Spin jumping
    dw KnockbackTransition_Morphed                                       ;90DE8A; 4: Morph ball - on ground
    dw KnockbackTransition_Normal                                        ;90DE8C; 5: Crouching
    dw KnockbackTransition_Normal_Falling                                ;90DE8E; 6: Falling
    dw UNUSED_KnockbackTransition_Movement7_90DF1D                       ;90DE90; 7: Unused
    dw KnockbackTransition_Morphed                                       ;90DE92; 8: Morph ball - falling
    dw KnockbackTransition_Morphed                                       ;90DE94; 9: Unused
    dw KnockbackTransition_Ignore                                        ;90DE96; Ah: Knockback / crystal flash ending
    dw KnockbackTransition_Ignore_ClearDirection                         ;90DE98; Bh: Unused
    dw KnockbackTransition_Ignore_ClearDirection                         ;90DE9A; Ch: Unused
    dw KnockbackTransition_Normal                                        ;90DE9C; Dh: Unused
    dw KnockbackTransition_Ignore_ClearDirection                         ;90DE9E; Eh: Turning around - on ground
    dw KnockbackTransition_Ignore_ClearDirection                         ;90DEA0; Fh: Crouching/standing/morphing/unmorphing transition
    dw KnockbackTransition_Normal                                        ;90DEA2; 10h: Moonwalking
    dw KnockbackTransition_Morphed                                       ;90DEA4; 11h: Spring ball - on ground
    dw KnockbackTransition_Morphed                                       ;90DEA6; 12h: Spring ball - in air
    dw KnockbackTransition_Morphed                                       ;90DEA8; 13h: Spring ball - falling
    dw KnockbackTransition_Normal                                        ;90DEAA; 14h: Wall jumping
    dw KnockbackTransition_Normal                                        ;90DEAC; 15h: Ran into a wall
    dw KnockbackTransition_Ignore                                        ;90DEAE; 16h: Grappling
    dw KnockbackTransition_Ignore_ClearDirection                         ;90DEB0; 17h: Turning around - jumping
    dw KnockbackTransition_Ignore_ClearDirection                         ;90DEB2; 18h: Turning around - falling
    dw KnockbackTransition_Ignore_ClearDirection                         ;90DEB4; 19h: Damage boost
    dw KnockbackTransition_Ignore_ClearDirection                         ;90DEB6; 1Ah: Grabbed by Draygon
    dw KnockbackTransition_SetSamusDrainedHurtAnimation_OrIgnore         ;90DEB8; 1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

KnockbackTransition_SetSamusDrainedHurtAnimation_OrIgnore:
    LDA.W $0A1C                                                          ;90DEBA;
    CMP.W #$00E8                                                         ;90DEBD;
    BEQ .drainedCrouchingFalling                                         ;90DEC0;
    CMP.W #$00E9                                                         ;90DEC2;
    BEQ .drainedCrouchingFalling                                         ;90DEC5;
    BRA .return                                                          ;90DEC7;


.drainedCrouchingFalling:
    LDA.W #$0011                                                         ;90DEC9;
    STA.W $0A94                                                          ;90DECC;
    LDA.W #$001A                                                         ;90DECF;
    STA.W $0A96                                                          ;90DED2;

.return:
    STZ.W $0A30                                                          ;90DED5;
    STZ.W $0A52                                                          ;90DED8;
    CLC                                                                  ;90DEDB;
    RTS                                                                  ;90DEDC;


KnockbackTransition_Ignore:
    STZ.W $0A30                                                          ;90DEDD;
    CLC                                                                  ;90DEE0;
    RTS                                                                  ;90DEE1;


KnockbackTransition_Ignore_ClearDirection:
    STZ.W $0A30                                                          ;90DEE2;
    STZ.W $0A52                                                          ;90DEE5;
    CLC                                                                  ;90DEE8;
    RTS                                                                  ;90DEE9;


KnockbackTransition_Normal_Falling:
    LDA.W $0A5A                                                          ;90DEEA;
    CMP.W #UNUSED_SamusTimerHackHandler_SpecialFalling_90E41B            ;90DEED;
    BNE KnockbackTransition_Normal                                       ;90DEF0;
    STZ.W $0A30                                                          ;90DEF2;
    STZ.W $0A52                                                          ;90DEF5;
    CLC                                                                  ;90DEF8;
    RTS                                                                  ;90DEF9;


KnockbackTransition_Normal:
    LDA.W $0A1E                                                          ;90DEFA;
    AND.W #$00FF                                                         ;90DEFD;
    CMP.W #$0004                                                         ;90DF00;
    BEQ .facingLeft                                                      ;90DF03;
    LDA.W #$0053                                                         ;90DF05;
    STA.W $0A2A                                                          ;90DF08;
    BRA .return                                                          ;90DF0B;


.facingLeft:
    LDA.W #$0054                                                         ;90DF0D;
    STA.W $0A2A                                                          ;90DF10;

.return:
    SEC                                                                  ;90DF13;
    RTS                                                                  ;90DF14;


KnockbackTransition_Morphed:
    LDA.W $0A1C                                                          ;90DF15;
    STA.W $0A2A                                                          ;90DF18;
    SEC                                                                  ;90DF1B;
    RTS                                                                  ;90DF1C;


UNUSED_KnockbackTransition_Movement7_90DF1D:
    LDA.W $0A1E                                                          ;90DF1D;
    AND.W #$00FF                                                         ;90DF20;
    CMP.W #$0004                                                         ;90DF23;
    BEQ .facingLeft                                                      ;90DF26;
    LDA.W #$0033                                                         ;90DF28;
    STA.W $0A2A                                                          ;90DF2B;
    BRA .return                                                          ;90DF2E;


.facingLeft:
    LDA.W #$0034                                                         ;90DF30;
    STA.W $0A2A                                                          ;90DF33;

.return:
    SEC                                                                  ;90DF36;
    RTS                                                                  ;90DF37;


SamusMovementHandler_Knockback:
    LDA.W $0A52                                                          ;90DF38;
    ASL A                                                                ;90DF3B;
    TAX                                                                  ;90DF3C;
    JSR.W (.pointers,X)                                                  ;90DF3D;
    STZ.W $0DC6                                                          ;90DF40;
    RTS                                                                  ;90DF43;


.pointers:
    dw ZeroIndex_Crash                                                   ;90DF44; 0: Crashes
    dw KnockbackMoement_Up                                               ;90DF46; 1: Up left
    dw KnockbackMoement_Up                                               ;90DF48; 2: Up right
    dw UNUSED_KnockbackMoement_StraightUp_90DF5D                         ;90DF4A; 3: Straight up (unused)
    dw KnockbackMoement_Down                                             ;90DF4C; 4: Down left
    dw KnockbackMoement_Down                                             ;90DF4E; 5: Down right

ZeroIndex_Crash:
    BRA ZeroIndex_Crash                                                  ;90DF50;

    RTS                                                                  ;90DF52; >.<


KnockbackMoement_Up:
    JSR.W MoveSamus_Horizontally_KnockbackBombJump                       ;90DF53;
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;90DF56;
    JSR.W HandleKnockbackVerticalCollision                               ;90DF59;
    RTS                                                                  ;90DF5C;


UNUSED_KnockbackMoement_StraightUp_90DF5D:
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;90DF5D;
    JSR.W HandleKnockbackVerticalCollision                               ;90DF60;
    RTS                                                                  ;90DF63;


KnockbackMoement_Down:
    JSR.W MoveSamus_Horizontally_KnockbackBombJump                       ;90DF64;
    JSR.W Samus_Y_Movement_NoSpeedCalculations                           ;90DF67;
    JSR.W HandleKnockbackVerticalCollision                               ;90DF6A;
    RTS                                                                  ;90DF6D;


HandleKnockbackVerticalCollision:
    LDA.W $0DD0                                                          ;90DF6E;
    BEQ .return                                                          ;90DF71;
    STZ.W $0B4A                                                          ;90DF73;
    STZ.W $0DCE                                                          ;90DF76;
    STZ.W $0B22                                                          ;90DF79;
    STZ.W $0B1A                                                          ;90DF7C;
    STZ.W $0B2A                                                          ;90DF7F;
    STZ.W $0B2C                                                          ;90DF82;
    STZ.W $0B2E                                                          ;90DF85;
    STZ.W $0B36                                                          ;90DF88;
    STZ.W $0B38                                                          ;90DF8B;
    STZ.W $0B46                                                          ;90DF8E;
    STZ.W $0B48                                                          ;90DF91;
    JSL.L AlignSamusBottomPositionWithPreviousPose                       ;90DF94;

.return:
    RTS                                                                  ;90DF98;


SerupBombJump:
    LDA.W $0A56                                                          ;90DF99;
    BIT.W #$FF00                                                         ;90DF9C;
    BNE .return                                                          ;90DF9F;
    LDA.W $0A1F                                                          ;90DFA1;
    AND.W #$00FF                                                         ;90DFA4;
    ASL A                                                                ;90DFA7;
    TAX                                                                  ;90DFA8;
    JSR.W (.pointers,X)                                                  ;90DFA9;
    BCC .return                                                          ;90DFAC;
    LDA.W #$0003                                                         ;90DFAE;
    STA.W $0A30                                                          ;90DFB1;

.return:
    RTS                                                                  ;90DFB4;


.pointers:
    dw SetupBombJump_Standing_Crouching                                  ;90DFB5; 0: Standing
    dw SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple      ;90DFB7; 1: Running
    dw SetupBombJump_Jumping_Turning_DamageBoost_TransitionPoses         ;90DFB9; 2: Normal jumping
    dw SetupBombJump_Jumping_Turning_DamageBoost_TransitionPoses         ;90DFBB; 3: Spin jumping
    dw SetupBombJump_Morphed_Knockback_CrystalFlashEnding                ;90DFBD; 4: Morph ball - on ground
    dw SetupBombJump_Standing_Crouching                                  ;90DFBF; 5: Crouching
    dw SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple      ;90DFC1; 6: Falling
    dw SetupBombJump_Morphed_Knockback_CrystalFlashEnding                ;90DFC3; 7: Unused
    dw SetupBombJump_Morphed_Knockback_CrystalFlashEnding                ;90DFC5; 8: Morph ball - falling
    dw SetupBombJump_Morphed_Knockback_CrystalFlashEnding                ;90DFC7; 9: Unused
    dw SetupBombJump_Morphed_Knockback_CrystalFlashEnding                ;90DFC9; Ah: Knockback / crystal flash ending
    dw SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple      ;90DFCB; Bh: Unused
    dw SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple      ;90DFCD; Ch: Unused
    dw SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple      ;90DFCF; Dh: Unused
    dw SetupBombJump_Jumping_Turning_DamageBoost_TransitionPoses         ;90DFD1; Eh: Turning around - on ground
    dw SetupBombJump_Jumping_Turning_DamageBoost_TransitionPoses         ;90DFD3; Fh: Crouching/standing/morphing/unmorphing transition
    dw SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple      ;90DFD5; 10h: Moonwalking
    dw SetupBombJump_Morphed_Knockback_CrystalFlashEnding                ;90DFD7; 11h: Spring ball - on ground
    dw SetupBombJump_Morphed_Knockback_CrystalFlashEnding                ;90DFD9; 12h: Spring ball - in air
    dw SetupBombJump_Morphed_Knockback_CrystalFlashEnding                ;90DFDB; 13h: Spring ball - falling
    dw SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple      ;90DFDD; 14h: Wall jumping
    dw SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple      ;90DFDF; 15h: Ran into a wall
    dw SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple      ;90DFE1; 16h: Grappling
    dw SetupBombJump_Jumping_Turning_DamageBoost_TransitionPoses         ;90DFE3; 17h: Turning around - jumping
    dw SetupBombJump_Jumping_Turning_DamageBoost_TransitionPoses         ;90DFE5; 18h: Turning around - falling
    dw SetupBombJump_Jumping_Turning_DamageBoost_TransitionPoses         ;90DFE7; 19h: Damage boost
    dw SetupBombJump_DraygonGrab_Shinespark_CF_Drained_DamagedMB         ;90DFE9; 1Ah: Grabbed by Draygon
    dw SetupBombJump_DraygonGrab_Shinespark_CF_Drained_DamagedMB         ;90DFEB; 1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

SetupBombJump_Standing_Crouching:
    LDA.W $0A78                                                          ;90DFED;
    BEQ SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple     ;90DFF0;
    STZ.W $0A56                                                          ;90DFF2;
    CLC                                                                  ;90DFF5;
    RTS                                                                  ;90DFF6;


SetupBombJump_Run_Fall_Moonwalk_WallJump_RanIntoWall_Grapple:
    LDA.W $0A1E                                                          ;90DFF7;
    AND.W #$00FF                                                         ;90DFFA;
    CMP.W #$0004                                                         ;90DFFD;
    BEQ .facingLeft                                                      ;90E000;
    LDA.W #$0051                                                         ;90E002;
    STA.W $0A2A                                                          ;90E005;
    BRA .returnCarrySet                                                  ;90E008;


.facingLeft:
    LDA.W #$0052                                                         ;90E00A;
    STA.W $0A2A                                                          ;90E00D;

.returnCarrySet:
    SEC                                                                  ;90E010;
    RTS                                                                  ;90E011;


SetupBombJump_Morphed_Knockback_CrystalFlashEnding:
    LDA.W $0A1C                                                          ;90E012;
    STA.W $0A2A                                                          ;90E015;
    SEC                                                                  ;90E018;
    RTS                                                                  ;90E019;


SetupBombJump_Jumping_Turning_DamageBoost_TransitionPoses:
    LDA.W #SamusPoseInputHandler_Normal                                  ;90E01A;
    STA.W $0A60                                                          ;90E01D; fallthrough to SetupBombJump_DraygonGrab_Shinespark_CF_Drained_DamagedMB

SetupBombJump_DraygonGrab_Shinespark_CF_Drained_DamagedMB:
    STZ.W $0A56                                                          ;90E020;
    CLC                                                                  ;90E023;
    RTS                                                                  ;90E024;


SamusMovementHandler_BombJump_Start:
    JSR.W Make_Samus_BombJump                                            ;90E025;
    LDA.W #SamusMovementHandler_BombJump_Main                            ;90E028;
    STA.W $0A58                                                          ;90E02B;
    STZ.W $0DC6                                                          ;90E02E;
    RTS                                                                  ;90E031;


SamusMovementHandler_BombJump_Main:
    LDA.W $0A56                                                          ;90E032;
    BNE .directionAssigned                                               ;90E035;
    JSR.W EndBombJump                                                    ;90E037;
    RTS                                                                  ;90E03A;


.directionAssigned:
    AND.W #$00FF                                                         ;90E03B;
    ASL A                                                                ;90E03E;
    TAX                                                                  ;90E03F;
    JSR.W (.pointers,X)                                                  ;90E040;
    RTS                                                                  ;90E043;


.pointers:
    dw ZeroIndex_Crash                                                   ;90E044; 0: Crashes
    dw SamusMovementHandler_BombJump_Main_Horizontal                     ;90E046; 1: Left
    dw SamusMovementHandler_BombJump_Main_Straight                       ;90E048; 2: Straight
    dw SamusMovementHandler_BombJump_Main_Horizontal                     ;90E04A; 3: Right

SamusMovementHandler_BombJump_Main_Horizontal:
    JSR.W MoveSamus_Horizontally_KnockbackBombJump                       ;90E04C;
    JSR.W Handle_EndOfBombJump                                           ;90E04F;
    LDA.W $0B36                                                          ;90E052;
    CMP.W #$0002                                                         ;90E055;
    BEQ .end                                                             ;90E058;
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;90E05A;
    LDA.W $0DD0                                                          ;90E05D;
    BEQ .return                                                          ;90E060;

.end:
    JSR.W EndBombJump                                                    ;90E062;

.return:
    RTS                                                                  ;90E065;


SamusMovementHandler_BombJump_Main_Straight:
    JSR.W Handle_EndOfBombJump                                           ;90E066;
    LDA.W $0B36                                                          ;90E069;
    CMP.W #$0002                                                         ;90E06C;
    BEQ .end                                                             ;90E06F;
    JSR.W Samus_Y_Movement_WithSpeedCalculations                         ;90E071;
    LDA.W $0DD0                                                          ;90E074;
    BEQ .return                                                          ;90E077;

.end:
    JSR.W EndBombJump                                                    ;90E079;

.return:
    RTS                                                                  ;90E07C;


EndBombJump:
    LDA.W #SamusMovementHandler_Normal                                   ;90E07D;
    STA.W $0A58                                                          ;90E080;
    LDA.W $0A60                                                          ;90E083;
    CMP.W #SamusPoseInputHandler_Demo                                    ;90E086;
    BEQ .notDemo                                                         ;90E089;
    LDA.W #SamusPoseInputHandler_Normal                                  ;90E08B;
    STA.W $0A60                                                          ;90E08E;

.notDemo:
    STZ.W $0A56                                                          ;90E091;
    RTS                                                                  ;90E094;


DraygonEscapeButtonCounterTarget:
    dw $003C                                                             ;90E095;

SamusTimerHackHandler:
    JMP.W ($0A5A)                                                        ;90E097;


RTS_90E09A:
    RTS                                                                  ;90E09A;


SamusTimerHackHandler_HandleLettingSamusUpFromBeingDrained:
    LDA.W $0A1C                                                          ;90E09B;
    CMP.W #$00E9                                                         ;90E09E;
    BNE .return                                                          ;90E0A1;
    LDA.W $0A96                                                          ;90E0A3;
    CMP.W #$0008                                                         ;90E0A6;
    BMI .return                                                          ;90E0A9;
    LDA.B $8F                                                            ;90E0AB;
    BIT.W #$0800                                                         ;90E0AD;
    BEQ .return                                                          ;90E0B0;
    LDA.W #$0001                                                         ;90E0B2;
    STA.W $0A94                                                          ;90E0B5;
    LDA.W #$000D                                                         ;90E0B8;
    STA.W $0A96                                                          ;90E0BB;
    LDA.W #RTS_90E90E                                                    ;90E0BE;
    STA.W $0A5A                                                          ;90E0C1;

.return:
    RTS                                                                  ;90E0C4;


SamusTimerHackHandler_LetSamusFailToStandUpFromBeingDrained:
    LDA.W $0A96                                                          ;90E0C5;
    CMP.W #$0008                                                         ;90E0C8;
    BMI .return                                                          ;90E0CB;
    CMP.W #$000C                                                         ;90E0CD;
    BPL .return                                                          ;90E0D0;
    LDA.B $8F                                                            ;90E0D2;
    BIT.W #$0800                                                         ;90E0D4;
    BEQ .return                                                          ;90E0D7;
    LDA.W #$0001                                                         ;90E0D9;
    STA.W $0A94                                                          ;90E0DC;
    LDA.W #$0012                                                         ;90E0DF;
    STA.W $0A96                                                          ;90E0E2;

.return:
    RTS                                                                  ;90E0E5;


SamusTimerHackHandler_HandleTimer:
    JSL.L ProcessTimer                                                   ;90E0E6;
    BCC .timerNotExpired                                                 ;90E0EA;
    LDA.W #$0023                                                         ;90E0EC;
    STA.W $0998                                                          ;90E0EF;
    LDX.W #$01FE                                                         ;90E0F2;
    LDA.W #$7FFF                                                         ;90E0F5;

.loop:
    STA.L $7EC200,X                                                      ;90E0F8;
    DEX                                                                  ;90E0FC;
    DEX                                                                  ;90E0FD;
    BPL .loop                                                            ;90E0FE;
    LDA.W #SamusTimerHackHandler_DrawTimer                               ;90E100;
    STA.W $0A5A                                                          ;90E103;
    JSL.L Disable_PaletteFXObjects                                       ;90E106;

.timerNotExpired:
    LDA.W $0943                                                          ;90E10A;
    BEQ .return                                                          ;90E10D;
    JSL.L DrawTimer                                                      ;90E10F;

.return:
    RTS                                                                  ;90E113;


SamusTimerHackHandler_DrawTimer:
    JSL.L DrawTimer                                                      ;90E114;
    RTS                                                                  ;90E118;


SetSamusToBePushedOutOfCeresRidleysWay:
    PHP                                                                  ;90E119;
    PHB                                                                  ;90E11A;
    PHK                                                                  ;90E11B;
    PLB                                                                  ;90E11C;
    REP #$30                                                             ;90E11D;
    LDA.W #RTS_90E90E                                                    ;90E11F;
    STA.W $0A58                                                          ;90E122;
    LDA.W #SamusTimerHackHandler_PushSamusOutOfCeresRidleysWay           ;90E125;
    STA.W $0A5A                                                          ;90E128;
    PLB                                                                  ;90E12B;
    PLP                                                                  ;90E12C;
    RTL                                                                  ;90E12D;


SamusTimerHackHandler_PushSamusOutOfCeresRidleysWay:
    LDA.W $0A1E                                                          ;90E12E;
    AND.W #$00FF                                                         ;90E131;
    CMP.W #$0004                                                         ;90E134;
    BEQ .facingLeft                                                      ;90E137;
    LDA.W #$0053                                                         ;90E139;
    STA.W $0A1C                                                          ;90E13C;
    BRA +                                                                ;90E13F;


.facingLeft:
    LDA.W #$0054                                                         ;90E141;
    STA.W $0A1C                                                          ;90E144;

  + JSL.L InitializeSamusPose_1                                          ;90E147;
    JSL.L Set_Samus_AnimationFrame_if_PoseChanged                        ;90E14B;
    LDA.W $0A20                                                          ;90E14F;
    STA.W $0A24                                                          ;90E152;
    LDA.W $0A22                                                          ;90E155;
    STA.W $0A26                                                          ;90E158;
    LDA.W $0A1C                                                          ;90E15B;
    STA.W $0A20                                                          ;90E15E;
    LDA.W $0A1E                                                          ;90E161;
    STA.W $0A22                                                          ;90E164;
    LDA.W #$0015                                                         ;90E167;
    SEC                                                                  ;90E16A;
    SBC.W $0B00                                                          ;90E16B;
    STA.B $12                                                            ;90E16E;
    LDA.W $0AFA                                                          ;90E170;
    SEC                                                                  ;90E173;
    SBC.B $12                                                            ;90E174;
    STA.W $0AFA                                                          ;90E176;
    LDA.W $0AF6                                                          ;90E179;
    SEC                                                                  ;90E17C;
    SBC.W $0911                                                          ;90E17D;
    CMP.W #$0080                                                         ;90E180;
    BMI .pushLeft                                                        ;90E183;
    LDA.W #$0002                                                         ;90E185;
    STA.W $0A62                                                          ;90E188;
    BRA +                                                                ;90E18B;


.pushLeft:
    LDA.W #$0001                                                         ;90E18D;
    STA.W $0A62                                                          ;90E190;

  + LDA.W #$0005                                                         ;90E193;
    STA.W $0B2E                                                          ;90E196;
    STZ.W $0B2C                                                          ;90E199;
    STZ.W $0A56                                                          ;90E19C;
    LDA.W #SamusTimerHackHandler_PushingSmausOutOfCeresRidleysWay        ;90E19F;
    STA.W $0A5A                                                          ;90E1A2;
    LDA.W #$FFFF                                                         ;90E1A5;
    STA.W $0A28                                                          ;90E1A8;
    STA.W $0A2A                                                          ;90E1AB;
    STA.W $0A2C                                                          ;90E1AE;
    STZ.W $0A2E                                                          ;90E1B1;
    STZ.W $0A30                                                          ;90E1B4;
    STZ.W $0A32                                                          ;90E1B7;
    JSL.L ProcessTimer                                                   ;90E1BA;
    LDA.W $0943                                                          ;90E1BE;
    BEQ .return                                                          ;90E1C1;
    JSL.L DrawTimer                                                      ;90E1C3;

.return:
    RTS                                                                  ;90E1C7;


SamusTimerHackHandler_PushingSmausOutOfCeresRidleysWay:
    LDA.W $0A28                                                          ;90E1C8;
    CMP.W #$004F                                                         ;90E1CB;
    BEQ .damageBoost                                                     ;90E1CE;
    CMP.W #$0050                                                         ;90E1D0;
    BNE .notDamageBoost                                                  ;90E1D3;

.damageBoost:
    LDA.W #$FFFF                                                         ;90E1D5;
    STA.W $0A28                                                          ;90E1D8;
    STZ.W $0A2E                                                          ;90E1DB;

.notDamageBoost:
    LDA.W $0A62                                                          ;90E1DE;
    ASL A                                                                ;90E1E1;
    TAX                                                                  ;90E1E2;
    JSR.W (.pointers,X)                                                  ;90E1E3;
    STZ.W $0DC6                                                          ;90E1E6;
    JSL.L ProcessTimer                                                   ;90E1E9;
    LDA.W $0943                                                          ;90E1ED;
    BEQ .return                                                          ;90E1F0;
    JSL.L DrawTimer                                                      ;90E1F2;

.return:
    RTS                                                                  ;90E1F6;


.pointers:
    dw $0000                                                             ;90E1F7;
    dw PushingSamusOutOfCeresRidleysWay_Leftwards                        ;90E1F9;
    dw PushingSamusOutOfCeresRidleysWay_Rightwards                       ;90E1FB;

PushingSamusOutOfCeresRidleysWay_Leftwards:
    JSR.W MoveSamus_Horizontally_PushedByCeresRidley                     ;90E1FD;
    LDA.W $0DD0                                                          ;90E200;
    BEQ .vertical                                                        ;90E203;
    LDA.W #SamusMovementHandler_Normal                                   ;90E205;
    STA.W $0A58                                                          ;90E208;
    LDA.W #SamusTimerHackHandler_HandleTimer                             ;90E20B;
    STA.W $0A5A                                                          ;90E20E;
    STZ.W $0A62                                                          ;90E211;
    JSR.W HandleKnockbackVerticalCollision                               ;90E214;
    RTS                                                                  ;90E217;


.vertical:
    JSR.W MoveSamus_Vertically_PushedByCeresRidley                       ;90E218;
    RTS                                                                  ;90E21B;


PushingSamusOutOfCeresRidleysWay_Rightwards:
    JSR.W MoveSamus_Horizontally_PushedByCeresRidley                     ;90E21C;
    LDA.W $0DD0                                                          ;90E21F;
    BEQ .vertical                                                        ;90E222;
    LDA.W #SamusMovementHandler_Normal                                   ;90E224;
    STA.W $0A58                                                          ;90E227;
    LDA.W #SamusTimerHackHandler_HandleTimer                             ;90E22A;
    STA.W $0A5A                                                          ;90E22D;
    STZ.W $0A62                                                          ;90E230;
    JSR.W HandleKnockbackVerticalCollision                               ;90E233;
    RTS                                                                  ;90E236;


.vertical:
    JSR.W MoveSamus_Vertically_PushedByCeresRidley                       ;90E237;
    RTS                                                                  ;90E23A;


SetSamusIntoTheGrabbedByDraygonPose:
    PHP                                                                  ;90E23B;
    PHB                                                                  ;90E23C;
    PHK                                                                  ;90E23D;
    PLB                                                                  ;90E23E;
    REP #$30                                                             ;90E23F;
    BIT.W #$0001                                                         ;90E241;
    BEQ .facingLeft                                                      ;90E244;
    LDA.W #$00EC                                                         ;90E246;
    STA.W $0A1C                                                          ;90E249;
    BRA .merge                                                           ;90E24C;


.facingLeft:
    LDA.W #$00BA                                                         ;90E24E;
    STA.W $0A1C                                                          ;90E251;

.merge:
    JSL.L InitializeSamusPose_1                                          ;90E254;
    JSL.L Set_Samus_AnimationFrame_if_PoseChanged                        ;90E258;
    LDA.W #SamusTimerHackHandler_GrabbedByDraygon                        ;90E25C;
    STA.W $0A5A                                                          ;90E25F;
    LDA.W #RTS_90E90E                                                    ;90E262;
    STA.W $0A58                                                          ;90E265;
    STZ.W $0DEC                                                          ;90E268;
    STZ.W $0DEE                                                          ;90E26B;
    STZ.W $0DF0                                                          ;90E26E;
    LDA.W $0A20                                                          ;90E271;
    STA.W $0A24                                                          ;90E274;
    LDA.W $0A22                                                          ;90E277;
    STA.W $0A26                                                          ;90E27A;
    LDA.W $0A1C                                                          ;90E27D;
    STA.W $0A20                                                          ;90E280;
    LDA.W $0A1E                                                          ;90E283;
    STA.W $0A22                                                          ;90E286;
    LDA.W #$FFFF                                                         ;90E289;
    STA.W $0A28                                                          ;90E28C;
    STA.W $0A2A                                                          ;90E28F;
    STA.W $0A2C                                                          ;90E292;
    STZ.W $0A2E                                                          ;90E295;
    STZ.W $0A30                                                          ;90E298;
    STZ.W $0A32                                                          ;90E29B;
    PLB                                                                  ;90E29E;
    PLP                                                                  ;90E29F;
    RTL                                                                  ;90E2A0;


SamusTimerHackHandler_GrabbedByDraygon:
    LDA.W $0D32                                                          ;90E2A1;
    CMP.W #GrappleBeamFunction_Connected_LockedInPlace                   ;90E2A4;
    BNE .escape                                                          ;90E2A7;
    LDA.W #$FFFF                                                         ;90E2A9;
    STA.W $0A28                                                          ;90E2AC;
    STZ.W $0A2E                                                          ;90E2AF;
    BRA .escape                                                          ;90E2B2;


.return:
    RTS                                                                  ;90E2B4;


.escape:
    LDA.B $8F                                                            ;90E2B5;
    AND.W #$0F00                                                         ;90E2B7;
    BEQ .return                                                          ;90E2BA;
    CMP.W $0DEE                                                          ;90E2BC;
    BEQ .return                                                          ;90E2BF;
    STA.W $0DEE                                                          ;90E2C1;
    LDA.W $0DEC                                                          ;90E2C4;
    INC A                                                                ;90E2C7;
    STA.W $0DEC                                                          ;90E2C8;
    CMP.W DraygonEscapeButtonCounterTarget                               ;90E2CB;
    BMI .return                                                          ;90E2CE;
    JSR.W ReleaseSamusFromDraygon                                        ;90E2D0;
    RTS                                                                  ;90E2D3;


ReleaseSamusFromDraygon_external:
    PHP                                                                  ;90E2D4;
    PHB                                                                  ;90E2D5;
    PHK                                                                  ;90E2D6;
    PLB                                                                  ;90E2D7;
    JSR.W ReleaseSamusFromDraygon                                        ;90E2D8;
    PLB                                                                  ;90E2DB;
    PLP                                                                  ;90E2DC;
    RTL                                                                  ;90E2DD;


ReleaseSamusFromDraygon:
    LDA.W $0A1E                                                          ;90E2DE;
    AND.W #$00FF                                                         ;90E2E1;
    CMP.W #$0004                                                         ;90E2E4;
    BEQ .facingLeft                                                      ;90E2E7;
    LDA.W #$0001                                                         ;90E2E9;
    STA.W $0A1C                                                          ;90E2EC;
    BRA Merge                                                            ;90E2EF;


.facingLeft:
    LDA.W #$0002                                                         ;90E2F1;
    STA.W $0A1C                                                          ;90E2F4;

Merge:
    JSL.L InitializeSamusPose_1                                          ;90E2F7;
    JSL.L Set_Samus_AnimationFrame_if_PoseChanged                        ;90E2FB;
    LDA.W #SamusMovementHandler_Normal                                   ;90E2FF;
    STA.W $0A58                                                          ;90E302;
    LDA.W #RTS_90E90E                                                    ;90E305;
    STA.W $0A5A                                                          ;90E308;
    LDA.W $0A20                                                          ;90E30B;
    STA.W $0A24                                                          ;90E30E;
    LDA.W $0A22                                                          ;90E311;
    STA.W $0A26                                                          ;90E314;
    LDA.W $0A1C                                                          ;90E317;
    STA.W $0A20                                                          ;90E31A;
    LDA.W $0A1E                                                          ;90E31D;
    STA.W $0A22                                                          ;90E320;
    STZ.W $0B46                                                          ;90E323;
    STZ.W $0B48                                                          ;90E326;
    LDA.W #$FFFF                                                         ;90E329;
    STA.W $0A28                                                          ;90E32C;
    STA.W $0A2A                                                          ;90E32F;
    STA.W $0A2C                                                          ;90E332;
    STZ.W $0A2E                                                          ;90E335;
    STZ.W $0A30                                                          ;90E338;
    STZ.W $0A32                                                          ;90E33B;
    STZ.W $0B2E                                                          ;90E33E;
    STZ.W $0B2C                                                          ;90E341;
    STZ.W $0B36                                                          ;90E344;
    STZ.W $0B20                                                          ;90E347;
    STZ.W $0B4A                                                          ;90E34A;
    LDA.W $0A64                                                          ;90E34D;
    AND.W #$FFFD                                                         ;90E350;
    ORA.W #$0002                                                         ;90E353;
    STA.W $0A64                                                          ;90E356;
    RTS                                                                  ;90E359;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_90E35A:
    PHP                                                                  ;90E35A;
    PHB                                                                  ;90E35B;
    PHK                                                                  ;90E35C;
    PLB                                                                  ;90E35D;
    REP #$30                                                             ;90E35E;
    LDA.W #$00C5                                                         ;90E360;
    STA.W $0A2A                                                          ;90E363;
    STZ.W $0A30                                                          ;90E366;
    LDA.W #RTS_90E90E                                                    ;90E369;
    STA.W $0A58                                                          ;90E36C;
    LDA.W #RTS_90E37E                                                    ;90E36F;
    STA.W $0A5A                                                          ;90E372;
    LDA.W #RTS_90EBF2                                                    ;90E375;
    STA.W $0A5C                                                          ;90E378;
    PLB                                                                  ;90E37B;
    PLP                                                                  ;90E37C;
    RTL                                                                  ;90E37D;


RTS_90E37E:
    RTS                                                                  ;90E37E;


UNUSED_PushMorphBallSamusOutOfCeresRidleysWay_90E37F:
    PHP                                                                  ;90E37F;
    PHB                                                                  ;90E380;
    PHK                                                                  ;90E381;
    PLB                                                                  ;90E382;
    REP #$30                                                             ;90E383;
    LDA.W #$0003                                                         ;90E385;
    STA.W $0B2E                                                          ;90E388;
    STZ.W $0B2C                                                          ;90E38B;
    LDA.W #$0001                                                         ;90E38E;
    STA.W $0A62                                                          ;90E391;
    LDA.W #UNUSED_SamusTimerHackHandler_PushMorphBallCeresRidley_90E3A3  ;90E394;
    STA.W $0A5A                                                          ;90E397;
    LDA.W #SamusDrawingHandler_Default                                   ;90E39A;
    STA.W $0A5C                                                          ;90E39D;
    PLB                                                                  ;90E3A0;
    PLP                                                                  ;90E3A1;
    RTL                                                                  ;90E3A2;


UNUSED_SamusTimerHackHandler_PushMorphBallCeresRidley_90E3A3:
    JSR.W MoveSamus_Horizontally_PushedByCeresRidley                     ;90E3A3;
    LDA.W $0DD0                                                          ;90E3A6;
    BNE .disable                                                         ;90E3A9;
    JSR.W MoveSamus_Vertically_PushedByCeresRidley                       ;90E3AB;
    LDA.W $0DD0                                                          ;90E3AE;
    BEQ .return                                                          ;90E3B1;

.disable:
    LDA.W #SamusMovementHandler_Normal                                   ;90E3B3;
    STA.W $0A58                                                          ;90E3B6;
    LDA.W #RTS_90E90E                                                    ;90E3B9;
    STA.W $0A5A                                                          ;90E3BC;
    STZ.W $0A62                                                          ;90E3BF;
    JSR.W HandleKnockbackVerticalCollision                               ;90E3C2;
    LDA.W #$0041                                                         ;90E3C5;
    STA.W $0A2A                                                          ;90E3C8;
    STZ.W $0A30                                                          ;90E3CB;

.return:
    RTS                                                                  ;90E3CE;


UNUSED_SetSamusSpecialFalling_90E3CF:
    PHP                                                                  ;90E3CF;
    PHB                                                                  ;90E3D0;
    PHK                                                                  ;90E3D1;
    PLB                                                                  ;90E3D2;
    REP #$30                                                             ;90E3D3;
    LDA.W $0A1E                                                          ;90E3D5;
    AND.W #$00FF                                                         ;90E3D8;
    CMP.W #$0004                                                         ;90E3DB;
    BEQ .facingLeft                                                      ;90E3DE;
    LDA.W #$0029                                                         ;90E3E0;
    STA.W $0A2A                                                          ;90E3E3;
    BRA +                                                                ;90E3E6;


.facingLeft:
    LDA.W #$002A                                                         ;90E3E8;
    STA.W $0A2A                                                          ;90E3EB;

  + STZ.W $0A30                                                          ;90E3EE;
    LDA.W #RTS_90E90E                                                    ;90E3F1;
    STA.W $0A58                                                          ;90E3F4;
    LDA.W #UNUSED_SamusTimerHackHandler_SpecialFalling_90E41B            ;90E3F7;
    STA.W $0A5A                                                          ;90E3FA;
    PLB                                                                  ;90E3FD;
    PLP                                                                  ;90E3FE;
    RTL                                                                  ;90E3FF;


UNUSED_ClearSamusSpecialFalling_90E400:
    PHP                                                                  ;90E400;
    PHB                                                                  ;90E401;
    PHK                                                                  ;90E402;
    PLB                                                                  ;90E403;
    REP #$30                                                             ;90E404;
    STZ.W $0B2C                                                          ;90E406;
    STZ.W $0B2E                                                          ;90E409;
    LDA.W #SamusMovementHandler_Normal                                   ;90E40C;
    STA.W $0A58                                                          ;90E40F;
    LDA.W #RTS_90E90E                                                    ;90E412;
    STA.W $0A5A                                                          ;90E415;
    PLB                                                                  ;90E418;
    PLP                                                                  ;90E419;
    RTL                                                                  ;90E41A;
endif ; !FEATURE_KEEP_UNREFERENCED


UNUSED_SamusTimerHackHandler_SpecialFalling_90E41B:
; Looks like a cut-down version of $A58D (Samus movement - falling)
; In particular, this version doesn't do any horizontal movement
; Perhaps it was used for the Maridia elevatube at one point
    LDA.W $0B2E                                                          ;90E41B;
    CMP.W #$0005                                                         ;90E41E;
    BPL .GreaterThan4                                                    ;90E421;
    LDA.W $0B2C                                                          ;90E423;
    CLC                                                                  ;90E426;
    ADC.W $0B32                                                          ;90E427;
    STA.W $0B2C                                                          ;90E42A;
    LDA.W $0B2E                                                          ;90E42D;
    ADC.W $0B34                                                          ;90E430;
    STA.W $0B2E                                                          ;90E433;

.GreaterThan4:
    LDA.W $0A1C                                                          ;90E436;
    CMP.W #$0029                                                         ;90E439;
    BEQ .checkPose                                                       ;90E43C;
    CMP.W #$002A                                                         ;90E43E;
    BEQ .checkPose                                                       ;90E441;
    CMP.W #$0067                                                         ;90E443;
    BEQ .checkPose                                                       ;90E446;
    CMP.W #$0068                                                         ;90E448;
    BEQ .checkPose                                                       ;90E44B;
    BRA .return                                                          ;90E44D;


.checkPose:
    LDA.W $0B2E                                                          ;90E44F;
    CMP.W #$0005                                                         ;90E452;
    BMI .return                                                          ;90E455;
    LDA.W #$0010                                                         ;90E457;
    STA.W $0A94                                                          ;90E45A;
    LDA.W #$0004                                                         ;90E45D;
    STA.W $0A96                                                          ;90E460;

.return:
    RTS                                                                  ;90E463;


CalculateSamusXDisplacement_ForMovingLeft:
    PHP                                                                  ;90E464;
    REP #$30                                                             ;90E465;
    JSR.W CalculateSamusXSpeed                                           ;90E467;
    STZ.W $0B02                                                          ;90E46A;
    LDA.B $12                                                            ;90E46D;
    EOR.W #$FFFF                                                         ;90E46F;
    STA.B $12                                                            ;90E472;
    LDA.B $14                                                            ;90E474;
    EOR.W #$FFFF                                                         ;90E476;
    INC A                                                                ;90E479;
    STA.B $14                                                            ;90E47A;
    BNE +                                                                ;90E47C;
    INC.B $12                                                            ;90E47E;

  + LDA.W $0B56                                                          ;90E480;
    CLC                                                                  ;90E483;
    ADC.B $14                                                            ;90E484;
    STA.B $14                                                            ;90E486;
    LDA.W $0B58                                                          ;90E488;
    ADC.B $12                                                            ;90E48B;
    STA.B $12                                                            ;90E48D;
    BMI .clamp                                                           ;90E48F;
    CMP.W #$0010                                                         ;90E491;
    BPL .maxClamp                                                        ;90E494;
    PLP                                                                  ;90E496;
    RTS                                                                  ;90E497;


.maxClamp:
    LDA.W #$000F                                                         ;90E498;
    STA.B $12                                                            ;90E49B;
    PLP                                                                  ;90E49D;
    RTS                                                                  ;90E49E;


.clamp:
    CMP.W #$FFF1                                                         ;90E49F;
    BMI .minClamp                                                        ;90E4A2;
    PLP                                                                  ;90E4A4;
    RTS                                                                  ;90E4A5;


.minClamp:
    LDA.W #$FFF1                                                         ;90E4A6;
    STA.B $12                                                            ;90E4A9;
    PLP                                                                  ;90E4AB;
    RTS                                                                  ;90E4AC;


CalculateSamusXDisplacement_ForMovingRight:
    PHP                                                                  ;90E4AD;
    REP #$30                                                             ;90E4AE;
    JSR.W CalculateSamusXSpeed                                           ;90E4B0;
    LDA.W #$0001                                                         ;90E4B3;
    STA.W $0B02                                                          ;90E4B6;
    LDA.W $0B56                                                          ;90E4B9;
    CLC                                                                  ;90E4BC;
    ADC.B $14                                                            ;90E4BD;
    STA.B $14                                                            ;90E4BF;
    LDA.W $0B58                                                          ;90E4C1;
    ADC.B $12                                                            ;90E4C4;
    STA.B $12                                                            ;90E4C6;
    BMI .clamp                                                           ;90E4C8;
    CMP.W #$0010                                                         ;90E4CA;
    BPL .maxClamp                                                        ;90E4CD;
    PLP                                                                  ;90E4CF;
    RTS                                                                  ;90E4D0;


.maxClamp:
    LDA.W #$000F                                                         ;90E4D1;
    STA.B $12                                                            ;90E4D4;
    PLP                                                                  ;90E4D6;
    RTS                                                                  ;90E4D7;


.clamp:
    CMP.W #$FFF1                                                         ;90E4D8;
    BMI .minClamp                                                        ;90E4DB;
    PLP                                                                  ;90E4DD;
    RTS                                                                  ;90E4DE;


.minClamp:
    LDA.W #$FFF1                                                         ;90E4DF;
    STA.B $12                                                            ;90E4E2;
    PLP                                                                  ;90E4E4;
    RTS                                                                  ;90E4E5;


CalculateSamusXSpeed:
    LDA.W $0A66                                                          ;90E4E6;
    CMP.W #$0005                                                         ;90E4E9;
    BMI +                                                                ;90E4EC;
    LDA.W #$0004                                                         ;90E4EE;

  + ASL A                                                                ;90E4F1;
    TAX                                                                  ;90E4F2;
    JMP.W (.pointers,X)                                                  ;90E4F3;


.pointers:
    dw CalculateSamusXSpeed_Divisor0                                     ;90E4F6;
    dw CalculateSamusXSpeed_Divisor1                                     ;90E4F8;
    dw CalculateSamusXSpeed_Divisor2                                     ;90E4FA;
    dw CalculateSamusXSpeed_Divisor3                                     ;90E4FC;
    dw CalculateSamusXSpeed_Divisor4                                     ;90E4FE;

CalculateSamusXSpeed_Divisor0:
    LDA.B $14                                                            ;90E500;
    CLC                                                                  ;90E502;
    ADC.W $0B44                                                          ;90E503;
    STA.B $14                                                            ;90E506;
    STA.W $0DBE                                                          ;90E508;
    LDA.B $12                                                            ;90E50B;
    ADC.W $0B42                                                          ;90E50D;
    STA.B $12                                                            ;90E510;
    STA.W $0DBC                                                          ;90E512;
    RTS                                                                  ;90E515;


CalculateSamusXSpeed_Divisor1:
    LDA.B $14                                                            ;90E516;
    CLC                                                                  ;90E518;
    ADC.W $0B44                                                          ;90E519;
    STA.B $14                                                            ;90E51C;
    LDA.B $12                                                            ;90E51E;
    ADC.W $0B42                                                          ;90E520;
    XBA                                                                  ;90E523;
    LSR A                                                                ;90E524;
    XBA                                                                  ;90E525;
    PHA                                                                  ;90E526;
    AND.W #$00FF                                                         ;90E527;
    STA.B $12                                                            ;90E52A;
    STA.W $0DBC                                                          ;90E52C;
    PLA                                                                  ;90E52F;
    AND.W #$FF00                                                         ;90E530;
    STA.B $16                                                            ;90E533;
    LDA.B $14                                                            ;90E535;
    LSR A                                                                ;90E537;
    CLC                                                                  ;90E538;
    ADC.B $16                                                            ;90E539;
    STA.B $14                                                            ;90E53B;
    STA.W $0DBE                                                          ;90E53D;
    RTS                                                                  ;90E540;


CalculateSamusXSpeed_Divisor2:
    LDA.B $14                                                            ;90E541;
    CLC                                                                  ;90E543;
    ADC.W $0B44                                                          ;90E544;
    STA.B $14                                                            ;90E547;
    LDA.B $12                                                            ;90E549;
    ADC.W $0B42                                                          ;90E54B;
    XBA                                                                  ;90E54E;
    LSR A                                                                ;90E54F;
    LSR A                                                                ;90E550;
    XBA                                                                  ;90E551;
    PHA                                                                  ;90E552;
    AND.W #$00FF                                                         ;90E553;
    STA.B $12                                                            ;90E556;
    STA.W $0DBC                                                          ;90E558;
    PLA                                                                  ;90E55B;
    AND.W #$FF00                                                         ;90E55C;
    STA.B $16                                                            ;90E55F;
    LDA.B $14                                                            ;90E561;
    LSR A                                                                ;90E563;
    LSR A                                                                ;90E564;
    CLC                                                                  ;90E565;
    ADC.B $16                                                            ;90E566;
    STA.B $14                                                            ;90E568;
    STA.W $0DBE                                                          ;90E56A;
    RTS                                                                  ;90E56D;


CalculateSamusXSpeed_Divisor3:
    LDA.B $14                                                            ;90E56E;
    CLC                                                                  ;90E570;
    ADC.W $0B44                                                          ;90E571;
    STA.B $14                                                            ;90E574;
    LDA.B $12                                                            ;90E576;
    ADC.W $0B42                                                          ;90E578;
    XBA                                                                  ;90E57B;
    LSR A                                                                ;90E57C;
    LSR A                                                                ;90E57D;
    LSR A                                                                ;90E57E;
    XBA                                                                  ;90E57F;
    PHA                                                                  ;90E580;
    AND.W #$00FF                                                         ;90E581;
    STA.B $12                                                            ;90E584;
    STA.W $0DBC                                                          ;90E586;
    PLA                                                                  ;90E589;
    AND.W #$FF00                                                         ;90E58A;
    STA.B $16                                                            ;90E58D;
    LDA.B $14                                                            ;90E58F;
    LSR A                                                                ;90E591;
    LSR A                                                                ;90E592;
    LSR A                                                                ;90E593;
    CLC                                                                  ;90E594;
    ADC.B $16                                                            ;90E595;
    STA.B $14                                                            ;90E597;
    STA.W $0DBE                                                          ;90E599;
    RTS                                                                  ;90E59C;


CalculateSamusXSpeed_Divisor4:
    LDA.B $14                                                            ;90E59D;
    CLC                                                                  ;90E59F;
    ADC.W $0B44                                                          ;90E5A0;
    STA.B $14                                                            ;90E5A3;
    LDA.B $12                                                            ;90E5A5;
    ADC.W $0B42                                                          ;90E5A7;
    XBA                                                                  ;90E5AA;
    LSR A                                                                ;90E5AB;
    LSR A                                                                ;90E5AC;
    LSR A                                                                ;90E5AD;
    LSR A                                                                ;90E5AE;
    XBA                                                                  ;90E5AF;
    PHA                                                                  ;90E5B0;
    AND.W #$00FF                                                         ;90E5B1;
    STA.B $12                                                            ;90E5B4;
    STA.W $0DBC                                                          ;90E5B6;
    PLA                                                                  ;90E5B9;
    AND.W #$FF00                                                         ;90E5BA;
    STA.B $16                                                            ;90E5BD;
    LDA.B $14                                                            ;90E5BF;
    LSR A                                                                ;90E5C1;
    LSR A                                                                ;90E5C2;
    LSR A                                                                ;90E5C3;
    LSR A                                                                ;90E5C4;
    CLC                                                                  ;90E5C5;
    ADC.B $16                                                            ;90E5C6;
    STA.B $14                                                            ;90E5C8;
    STA.W $0DBE                                                          ;90E5CA;
    RTS                                                                  ;90E5CD;


Kill_SamusXSpeed_IfCollisionDetected:
    PHP                                                                  ;90E5CE;
    REP #$30                                                             ;90E5CF;
    LDA.W $0DD0                                                          ;90E5D1;
    BEQ .noCollision                                                     ;90E5D4;
    LDA.W $0B02                                                          ;90E5D6;
    BEQ .left                                                            ;90E5D9;
    LDA.W #$0008                                                         ;90E5DB;
    STA.W $0DCE                                                          ;90E5DE;
    BRA .killSpeed                                                       ;90E5E1;


.left:
    LDA.W #$0004                                                         ;90E5E3;
    STA.W $0DCE                                                          ;90E5E6;

.killSpeed:
    JSL.L Cancel_SpeedBoosting                                           ;90E5E9;
    STZ.W $0B42                                                          ;90E5ED;
    STZ.W $0B44                                                          ;90E5F0;
    STZ.W $0B46                                                          ;90E5F3;
    STZ.W $0B48                                                          ;90E5F6;
    STZ.W $0B4A                                                          ;90E5F9;
    BRA .return                                                          ;90E5FC;


.noCollision:
    STZ.W $0DC6                                                          ;90E5FE;
    STZ.W $0DCE                                                          ;90E601;

.return:
    PLP                                                                  ;90E604;
    RTS                                                                  ;90E605;


SetSamusSolidVerticalCollisionResult_UpwardsMovement:
    PHP                                                                  ;90E606;
    REP #$30                                                             ;90E607;
    LDA.W $0DD0                                                          ;90E609;
    BEQ .noChange                                                        ;90E60C;
    LDA.W #$0004                                                         ;90E60E;
    STA.W $0DC6                                                          ;90E611;
    BRA .return                                                          ;90E614;


.noChange:
    STZ.W $0DC6                                                          ;90E616;

.return:
    PLP                                                                  ;90E619;
    RTS                                                                  ;90E61A;


SetSamusSolidVerticalCollisionResult_DownwardsMovement:
    PHP                                                                  ;90E61B;
    REP #$30                                                             ;90E61C;
    LDA.W $0DD0                                                          ;90E61E;
    BEQ .noCollision                                                     ;90E621;
    LDA.W #$0001                                                         ;90E623;
    STA.W $0DC6                                                          ;90E626;
    SEP #$30                                                             ;90E629;
    LDA.W $0A1F                                                          ;90E62B;
    TAX                                                                  ;90E62E;
    LDA.W .data1,X                                                       ;90E62F;
    STA.W $0DC7                                                          ;90E632;
    REP #$30                                                             ;90E635;
    BRA .return                                                          ;90E637;


.noCollision:
    LDA.W $0DC6                                                          ;90E639;
    AND.W #$00FF                                                         ;90E63C;
    CMP.W #$0005                                                         ;90E63F;
    BEQ .return                                                          ;90E642;
    LDA.W #$0002                                                         ;90E644;
    STA.W $0DC6                                                          ;90E647;
    SEP #$30                                                             ;90E64A;
    LDA.W $0A1F                                                          ;90E64C;
    TAX                                                                  ;90E64F;
    LDA.W .data0,X                                                       ;90E650;
    STA.W $0DC7                                                          ;90E653;
    REP #$30                                                             ;90E656;

.return:
    PLP                                                                  ;90E658;
    RTS                                                                  ;90E659;


.data0:                                                                  ;90E65A;
    db $00 ; 0: Standing
    db $00 ; 1: Running
    db $04 ; 2: Normal jumping
    db $04 ; 3: Spin jumping
    db $01 ; 4: Morph ball - on ground
    db $00 ; 5: Crouching
    db $04 ; 6: Falling
    db $02 ; 7: Unused
    db $04 ; 8: Morph ball - falling
    db $04 ; 9: Unused
    db $00 ; Ah: Knockback
    db $00 ; Bh: Unused
    db $00 ; Ch: Unused
    db $00 ; Dh: Unused
    db $04 ; Eh: Turning around - on ground
    db $04 ; Fh: Crouching/standing/morphing/unmorphing transition
    db $00 ; 10h: Moonwalking
    db $03 ; 11h: Spring ball - on ground
    db $04 ; 12h: Spring ball - in air
    db $04 ; 13h: Spring ball - falling
    db $04 ; 14h: Wall jumping
    db $00 ; 15h: Ran into a wall
    db $04 ; 16h: Grappling
    db $04 ; 17h: Turning around - jumping
    db $04 ; 18h: Turning around - falling
    db $04 ; 19h: Damage boost
    db $04 ; 1Ah: Grabbed by Draygon
    db $04 ; 1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

.data1:                                                                  ;90E676;
    db $04 ; 0: Standing
    db $04 ; 1: Running
    db $00 ; 2: Normal jumping
    db $00 ; 3: Spin jumping
    db $04 ; 4: Morph ball - on ground
    db $04 ; 5: Crouching
    db $00 ; 6: Falling
    db $04 ; 7: Unused
    db $01 ; 8: Morph ball - falling
    db $02 ; 9: Unused
    db $00 ; Ah: Knockback
    db $04 ; Bh: Unused
    db $04 ; Ch: Unused
    db $00 ; Dh: Unused
    db $04 ; Eh: Turning around - on ground
    db $04 ; Fh: Crouching/standing/morphing/unmorphing transition
    db $04 ; 10h: Moonwalking
    db $04 ; 11h: Spring ball - on ground
    db $03 ; 12h: Spring ball - in air
    db $03 ; 13h: Spring ball - falling
    db $00 ; 14h: Wall jumping
    db $04 ; 15h: Ran into a wall
    db $04 ; 16h: Grappling
    db $04 ; 17h: Turning around - jumping
    db $04 ; 18h: Turning around - falling
    db $00 ; 19h: Damage boost
    db $04 ; 1Ah: Grabbed by Draygon
    db $04 ; 1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

SamusCurrentStateHandler:
    JMP.W ($0A42)                                                        ;90E692;


SamusCurrentStateHandler_Normal:
    PHP                                                                  ;90E695;
    PHB                                                                  ;90E696;
    PHK                                                                  ;90E697;
    PLB                                                                  ;90E698;
    REP #$30                                                             ;90E699;
    LDA.W #$FFFF                                                         ;90E69B;
    STA.W $0A28                                                          ;90E69E;
    STA.W $0A2A                                                          ;90E6A1;
    STA.W $0A2C                                                          ;90E6A4;
    STZ.W $0A2E                                                          ;90E6A7;
    STZ.W $0A30                                                          ;90E6AA;
    STZ.W $0A32                                                          ;90E6AD;
    JSR.W SetSamusRadius                                                 ;90E6B0;
    JSR.W SamusPoseInputHandler                                          ;90E6B3;
    JSR.W Determine_SamusSuitPalette_Index                               ;90E6B6;
    JSR.W Determine_Samus_YAcceleration                                  ;90E6B9;
    JSL.L SamusBlockInsideHandling                                       ;90E6BC;
    JSR.W HandleHUDSpecificBehaviorAndProjectiles                        ;90E6C0;
    JSR.W ResetMovementAndPoseChangeVariables                            ;90E6C3;
    PLB                                                                  ;90E6C6;
    PLP                                                                  ;90E6C7;
    RTL                                                                  ;90E6C8;


SamusCurrentStateHandler_Demo:
    PHP                                                                  ;90E6C9;
    PHB                                                                  ;90E6CA;
    PHK                                                                  ;90E6CB;
    PLB                                                                  ;90E6CC;
    REP #$30                                                             ;90E6CD;
    LDA.W #$FFFF                                                         ;90E6CF;
    STA.W $0A28                                                          ;90E6D2;
    STA.W $0A2A                                                          ;90E6D5;
    STA.W $0A2C                                                          ;90E6D8;
    STZ.W $0A2E                                                          ;90E6DB;
    STZ.W $0A30                                                          ;90E6DE;
    STZ.W $0A32                                                          ;90E6E1;
    LDA.B $8B                                                            ;90E6E4;
    STA.W $0A14                                                          ;90E6E6;
    LDA.B $8F                                                            ;90E6E9;
    STA.W $0A16                                                          ;90E6EB;
    LDA.W $0DFE                                                          ;90E6EE;
    STA.W $0A90                                                          ;90E6F1;
    LDA.W $0E00                                                          ;90E6F4;
    STA.W $0A92                                                          ;90E6F7;
    JSR.W SetSamusRadius                                                 ;90E6FA;
    JSR.W Determine_SamusSuitPalette_Index                               ;90E6FD;
    JSR.W SamusPoseInputHandler                                          ;90E700;
    JSR.W Determine_Samus_YAcceleration                                  ;90E703;
    JSL.L SamusBlockInsideHandling                                       ;90E706;
    JSR.W HandleHUDSpecificBehaviorAndProjectiles                        ;90E70A;
    JSR.W ResetMovementAndPoseChangeVariables                            ;90E70D;
    PLB                                                                  ;90E710;
    PLP                                                                  ;90E711;
    RTL                                                                  ;90E712;


SamusCurrentStateHandler_SamusIsLocked:
    PHP                                                                  ;90E713;
    PHB                                                                  ;90E714;
    PHK                                                                  ;90E715;
    PLB                                                                  ;90E716;
    REP #$30                                                             ;90E717;
    JSR.W Handle_Projectiles                                             ;90E719;
    JSR.W ResetMovementAndPoseChangeVariables                            ;90E71C;
    PLB                                                                  ;90E71F;
    PLP                                                                  ;90E720;
    RTL                                                                  ;90E721;


SamusNewStateHandler:
    JMP.W ($0A44)                                                        ;90E722;


SamusNewStateHandler_Normal:
    PHP                                                                  ;90E725;
    PHB                                                                  ;90E726;
    PHK                                                                  ;90E727;
    PLB                                                                  ;90E728;
    REP #$30                                                             ;90E729;
    JSR.W DebugCommandHandler                                            ;90E72B;
    STZ.W $0A6E                                                          ;90E72E;
    JSR.W Execute_SamusMovementHandler                                   ;90E731;
    JSL.L Update_Minimap                                                 ;90E734;
    JSR.W SamusTimerHackHandler                                          ;90E738;
    JSR.W AnimateSamus                                                   ;90E73B;
    JSR.W SamusIsHit_Interruption                                        ;90E73E;
    JSL.L SetProspectiveSamusPoseAccordingToSolidVerticalCollision_PSP   ;90E741;
    JSL.L UpdateSamusPose                                                ;90E745;
    JSL.L HandleSamusPalette                                             ;90E749;
    JSR.W HandlePeriodicDamageToSamus                                    ;90E74D;
    JSR.W PauseCheck                                                     ;90E750;
    JSR.W LowEnergyCheck                                                 ;90E753;

    LDA.W $09E6                                                          ;90E759; Demo recorder. Remove the three instructions above and set DebugConst_DemoRecorder at $808002 to enable
    BNE +                                                                ;90E75C;
    LDA.W $0A78                                                          ;90E75E;
    BNE +                                                                ;90E761;
    JSR.W DemoRecorder_MoveSamusWithControlPad                           ;90E763;

  + LDA.L DebugConst_DemoRecorder                                        ;90E766;
    BEQ .debugMode                                                       ;90E76A;
    JSL.L RecordDemoInputFrame                                           ;90E76C;
    JSL.L Pause_Terminate_Reset_DemoRecorder                             ;90E770;

.debugMode:
    JSL.L Debug_HandleSelectL_B                                          ;90E774;
    BIT.W $05CF                                                          ;90E778;
    BPL .togglePlacementMode                                             ;90E77B;
    JSR.W DemoRecorder_DisplaySamusPositionAsAmmoIfMorphed               ;90E77D;

.togglePlacementMode:
    JSR.W HandleSamusPlacementModeToggles                                ;90E780;
    PLB                                                                  ;90E783;
    PLP                                                                  ;90E784;
    RTL                                                                  ;90E785;


HandleSamusPlacementModeToggles:
    PHP                                                                  ;90E786;
    REP #$30                                                             ;90E787;
    LDA.B $91                                                            ;90E789;
    BIT.W #$8000                                                         ;90E78B;
    BEQ .pressedB                                                        ;90E78E;
    LDA.W $09E6                                                          ;90E790;
    BEQ .enabled                                                         ;90E793;
    LDA.W #RTS_90E90E                                                    ;90E795;
    STA.W $0A5C                                                          ;90E798;
    STZ.W $09E6                                                          ;90E79B;
    BRA .return                                                          ;90E79E;


.enabled:
    LDA.W #$0001                                                         ;90E7A0;
    STA.W $09E6                                                          ;90E7A3;
    LDA.W #SamusDrawingHandler_Default                                   ;90E7A6;
    STA.W $0A5C                                                          ;90E7A9;
    BRA .return                                                          ;90E7AC;


.pressedB:
    LDA.W $09E6                                                          ;90E7AE;
    BNE .return                                                          ;90E7B1;
    LDA.B $91                                                            ;90E7B3;
    BIT.W #$0080                                                         ;90E7B5;
    BEQ .return                                                          ;90E7B8;
    JSL.L Disable_Enemy_Projectiles                                      ;90E7BA;
    LDA.W #$0001                                                         ;90E7BE;
    STA.W $0A78                                                          ;90E7C1;
    LDA.W #RTL_90E8CD                                                    ;90E7C4;
    STA.W $0A42                                                          ;90E7C7;
    LDA.W #SamusNewStateHandler_Debug                                    ;90E7CA;
    STA.W $0A44                                                          ;90E7CD;

.return:
    PLP                                                                  ;90E7D0;
    RTS                                                                  ;90E7D1;


SamusNewStateHandler_Debug:
    PHP                                                                  ;90E7D2;
    PHB                                                                  ;90E7D3;
    PHK                                                                  ;90E7D4;
    PLB                                                                  ;90E7D5;
    REP #$30                                                             ;90E7D6;
    LDA.B $91                                                            ;90E7D8;
    BIT.W #$0080                                                         ;90E7DA;
    BEQ .return                                                          ;90E7DD;
    LDA.W #SamusCurrentStateHandler_Normal                               ;90E7DF;
    STA.W $0A42                                                          ;90E7E2;
    LDA.W #SamusNewStateHandler_Normal                                   ;90E7E5;
    STA.W $0A44                                                          ;90E7E8;
    JSL.L Enable_Enemy_Projectiles                                       ;90E7EB;
    STZ.W $0A78                                                          ;90E7EF;

.return:
    PLB                                                                  ;90E7F2;
    PLP                                                                  ;90E7F3;
    RTL                                                                  ;90E7F4;


SamusNewStateHandler_TitleDemo:
    PHP                                                                  ;90E7F5;
    PHB                                                                  ;90E7F6;
    PHK                                                                  ;90E7F7;
    PLB                                                                  ;90E7F8;
    REP #$30                                                             ;90E7F9;
    STZ.W $0A6E                                                          ;90E7FB;
    JSR.W Execute_SamusMovementHandler                                   ;90E7FE;
    JSL.L Update_Minimap                                                 ;90E801;
    JSR.W AnimateSamus                                                   ;90E805;
    JSR.W SamusIsHit_Interruption                                        ;90E808;
    JSL.L SetProspectiveSamusPoseAccordingToSolidVerticalCollision_PSP   ;90E80B;
    JSL.L UpdateSamusPose                                                ;90E80F;
    JSL.L HandleSamusPalette                                             ;90E813;
    JSR.W DebugCommandHandler                                            ;90E817;
    LDA.W $0A14                                                          ;90E81A;
    STA.B $8B                                                            ;90E81D;
    LDA.W $0A16                                                          ;90E81F;
    STA.B $8F                                                            ;90E822;
    LDA.W $0A90                                                          ;90E824;
    STA.W $0DFE                                                          ;90E827;
    LDA.W $0A92                                                          ;90E82A;
    STA.W $0E00                                                          ;90E82D;
    PLB                                                                  ;90E830;
    PLP                                                                  ;90E831;
    RTL                                                                  ;90E832;


SamusNewStateHandler_IntroDemo:
    PHP                                                                  ;90E833;
    PHB                                                                  ;90E834;
    PHK                                                                  ;90E835;
    PLB                                                                  ;90E836;
    REP #$30                                                             ;90E837;
    STZ.W $0A6E                                                          ;90E839;
    JSR.W Execute_SamusMovementHandler                                   ;90E83C;
    JSR.W AnimateSamus                                                   ;90E83F;
    JSR.W SamusIsHit_Interruption                                        ;90E842;
    JSL.L SetProspectiveSamusPoseAccordingToSolidVerticalCollision_PSP   ;90E845;
    JSL.L UpdateSamusPose                                                ;90E849;
    JSL.L HandleSamusPalette                                             ;90E84D;
    LDA.W $0A14                                                          ;90E851;
    STA.B $8B                                                            ;90E854;
    LDA.W $0A16                                                          ;90E856;
    STA.B $8F                                                            ;90E859;
    LDA.W $0A90                                                          ;90E85B;
    STA.W $0DFE                                                          ;90E85E;
    LDA.W $0A92                                                          ;90E861;
    STA.W $0E00                                                          ;90E864;
    PLB                                                                  ;90E867;
    PLP                                                                  ;90E868;
    RTL                                                                  ;90E869;


SamusNewStateHandler_SamusAppearance:
    PHP                                                                  ;90E86A;
    PHB                                                                  ;90E86B;
    PHK                                                                  ;90E86C;
    PLB                                                                  ;90E86D;
    REP #$30                                                             ;90E86E;
    JSR.W SetSamusRadius                                                 ;90E870;
    JSL.L Update_Minimap                                                 ;90E873;
    JSR.W AnimateSamus                                                   ;90E877;
    STZ.W $0E18                                                          ;90E87A;
    LDA.W $0AFA                                                          ;90E87D;
    STA.W $0B14                                                          ;90E880;
    JSL.L PlaySamusFanfare                                               ;90E883;
    BCC .return                                                          ;90E887;
    LDA.W $0DE0                                                          ;90E889;
    CMP.W #$0007                                                         ;90E88C;
    BMI .disableInvincibility                                            ;90E88F;
    LDA.B $8D                                                            ;90E891;
    BIT.W #$8000                                                         ;90E893;
    BNE .keepInvincibility                                               ;90E896;

.disableInvincibility:
    STZ.W $0DE0                                                          ;90E898;

.keepInvincibility:
    LDA.W #SamusCurrentStateHandler_Normal                               ;90E89B;
    STA.W $0A42                                                          ;90E89E;
    LDA.W #SamusNewStateHandler_Normal                                   ;90E8A1;
    STA.W $0A44                                                          ;90E8A4;

.return:
    PLB                                                                  ;90E8A7;
    PLP                                                                  ;90E8A8;
    RTL                                                                  ;90E8A9;


SamusNewStateHandler_Ceres:
    PHP                                                                  ;90E8AA;
    PHB                                                                  ;90E8AB;
    PHK                                                                  ;90E8AC;
    PLB                                                                  ;90E8AD;
    REP #$30                                                             ;90E8AE;
    JSL.L SamusNewStateHandler_Normal                                    ;90E8B0;
    LDA.W $0A5A                                                          ;90E8B4;
    CMP.W #SamusTimerHackHandler_DrawTimer                               ;90E8B7;
    BNE .return                                                          ;90E8BA;
    LDA.W $0998                                                          ;90E8BC;
    CMP.W #$0023                                                         ;90E8BF;
    BEQ .return                                                          ;90E8C2;
    LDA.W #$0023                                                         ;90E8C4;
    STA.W $0998                                                          ;90E8C7;

.return:
    PLB                                                                  ;90E8CA;
    PLP                                                                  ;90E8CB;
    RTL                                                                  ;90E8CC;


RTL_90E8CD:
    PHP                                                                  ;90E8CD;
    PHB                                                                  ;90E8CE;
    PHK                                                                  ;90E8CF;
    PLB                                                                  ;90E8D0;
    REP #$30                                                             ;90E8D1;
    PLB                                                                  ;90E8D3;
    PLP                                                                  ;90E8D4;
    RTL                                                                  ;90E8D5;


RTL_90E8D6:
    JMP.W RTL_90E8CD                                                     ;90E8D6;


RTL_90E8D9:
    JMP.W RTL_90E8CD                                                     ;90E8D9;


SamusNewStateHandler_SamusIsLocked:
    PHP                                                                  ;90E8DC;
    PHB                                                                  ;90E8DD;
    PHK                                                                  ;90E8DE;
    PLB                                                                  ;90E8DF;
    REP #$30                                                             ;90E8E0;
    STZ.W $0A6E                                                          ;90E8E2;
    JSL.L Update_Minimap                                                 ;90E8E5;
    PLB                                                                  ;90E8E9;
    PLP                                                                  ;90E8EA;
    RTL                                                                  ;90E8EB;


SamusNewStateHandler_RidingElevator:
    PHP                                                                  ;90E8EC;
    PHB                                                                  ;90E8ED;
    PHK                                                                  ;90E8EE;
    PLB                                                                  ;90E8EF;
    REP #$30                                                             ;90E8F0;
    STZ.W $0A6E                                                          ;90E8F2;
    JSR.W Execute_SamusMovementHandler                                   ;90E8F5;
    JSL.L Update_Minimap                                                 ;90E8F8;
    JSR.W AnimateSamus                                                   ;90E8FC;
    PLB                                                                  ;90E8FF;
    PLP                                                                  ;90E900;
    RTL                                                                  ;90E901;


SamusNewStateHandler_EnteringExitingGunship:
    PHP                                                                  ;90E902;
    PHB                                                                  ;90E903;
    PHK                                                                  ;90E904;
    PLB                                                                  ;90E905;
    REP #$30                                                             ;90E906;
    JSR.W LowEnergyCheck                                                 ;90E908;
    PLB                                                                  ;90E90B;
    PLP                                                                  ;90E90C;
    RTL                                                                  ;90E90D;


RTS_90E90E:
    RTS                                                                  ;90E90E;


SamusPoseInputHandler:
    JMP.W ($0A60)                                                        ;90E90F;


RTS_90E912:
    RTS                                                                  ;90E912;


SamusPoseInputHandler_Normal:
    JSL.L NormalSamusPoseInputHandler                                    ;90E913;
    RTS                                                                  ;90E917;


SamusPoseInputHandler_Xray:
    JSL.L XraySamusPoseInputHandler                                      ;90E918;
    RTS                                                                  ;90E91C;


SamusPoseInputHandler_Demo:
    JSL.L DemoInputObjectHandler                                         ;90E91D;
    JSL.L NormalSamusPoseInputHandler                                    ;90E921;
    RTS                                                                  ;90E925;


SamusPoseInputHandler_AutoJumpHack:
    LDA.B $8F                                                            ;90E926;
    PHA                                                                  ;90E928;
    LDA.W $0AF4                                                          ;90E929;
    BEQ .not1Through9                                                    ;90E92C;
    CMP.W #$0009                                                         ;90E92E;
    BPL .not1Through9                                                    ;90E931;
    LDA.B $8F                                                            ;90E933;
    ORA.W $09B4                                                          ;90E935;
    STA.B $8F                                                            ;90E938;
    STZ.W $0AF4                                                          ;90E93A;

.not1Through9:
    JSL.L NormalSamusPoseInputHandler                                    ;90E93D;
    PLA                                                                  ;90E941;
    STA.B $8F                                                            ;90E942;
    LDA.W #SamusPoseInputHandler_Normal                                  ;90E944;
    STA.W $0A60                                                          ;90E947;
    RTS                                                                  ;90E94A;


Execute_SamusMovementHandler:
    JMP.W ($0A58)                                                        ;90E94B;


RTS_90E94E:
    RTS                                                                  ;90E94E;


SamusMovementHandler_Xray:
    LDA.W $0A1F                                                          ;90E94F;
    AND.W #$00FF                                                         ;90E952;
    CMP.W #$000E                                                         ;90E955;
    BNE .turning                                                         ;90E958;
    RTS                                                                  ;90E95A;


.turning:
    LDA.W #$000F                                                         ;90E95B;
    STA.W $0A94                                                          ;90E95E;
    LDA.W $0A1E                                                          ;90E961;
    AND.W #$00FF                                                         ;90E964;
    CMP.W #$0004                                                         ;90E967;
    BEQ .facingLeft                                                      ;90E96A;
    LDA.W $0A82                                                          ;90E96C;
    CMP.W #$0019                                                         ;90E96F;
    BPL +                                                                ;90E972;
    LDA.W #$0000                                                         ;90E974;
    BRA .storeAnimFrame                                                  ;90E977;


  + CMP.W #$0032                                                         ;90E979;
    BPL +                                                                ;90E97C;
    LDA.W #$0001                                                         ;90E97E;
    BRA .storeAnimFrame                                                  ;90E981;


  + CMP.W #$004B                                                         ;90E983;
    BPL +                                                                ;90E986;
    LDA.W #$0002                                                         ;90E988;
    BRA .storeAnimFrame                                                  ;90E98B;


  + CMP.W #$0064                                                         ;90E98D;
    BPL +                                                                ;90E990;
    LDA.W #$0003                                                         ;90E992;
    BRA .storeAnimFrame                                                  ;90E995;


  + LDA.W #$0004                                                         ;90E997;
    BRA .storeAnimFrame                                                  ;90E99A;


.facingLeft:
    LDA.W $0A82                                                          ;90E99C;
    CMP.W #$0099                                                         ;90E99F;
    BPL +                                                                ;90E9A2;
    LDA.W #$0004                                                         ;90E9A4;
    BRA .storeAnimFrame                                                  ;90E9A7;


  + CMP.W #$00B2                                                         ;90E9A9;
    BPL +                                                                ;90E9AC;
    LDA.W #$0003                                                         ;90E9AE;
    BRA .storeAnimFrame                                                  ;90E9B1;


  + CMP.W #$00CB                                                         ;90E9B3;
    BPL +                                                                ;90E9B6;
    LDA.W #$0002                                                         ;90E9B8;
    BRA .storeAnimFrame                                                  ;90E9BB;


  + CMP.W #$00E4                                                         ;90E9BD;
    BPL .lookingUp                                                       ;90E9C0;
    LDA.W #$0001                                                         ;90E9C2;
    BRA .storeAnimFrame                                                  ;90E9C5;


.lookingUp:
    LDA.W #$0000                                                         ;90E9C7;

.storeAnimFrame:
    STA.W $0A96                                                          ;90E9CA;
    RTS                                                                  ;90E9CD;


HandlePeriodicDamageToSamus:
    PHP                                                                  ;90E9CE;
    REP #$30                                                             ;90E9CF;
    LDA.W $0A78                                                          ;90E9D1;
    BEQ .timeIsNotFrozen                                                 ;90E9D4;
    JMP.W .timeIsFrozen                                                  ;90E9D6;


.timeIsNotFrozen:
    LDA.W $09A2                                                          ;90E9D9;
    BIT.W #$0020                                                         ;90E9DC;
    BNE .gravitySuit                                                     ;90E9DF;
    BIT.W #$0001                                                         ;90E9E1;
    BEQ .crashIfNegative                                                 ;90E9E4;
    LDA.W $0A4F                                                          ;90E9E6;
    LSR A                                                                ;90E9E9;
    PHA                                                                  ;90E9EA;
    XBA                                                                  ;90E9EB;
    AND.W #$FF00                                                         ;90E9EC;
    STA.W $0A4E                                                          ;90E9EF;
    PLA                                                                  ;90E9F2;
    XBA                                                                  ;90E9F3;
    AND.W #$00FF                                                         ;90E9F4;
    STA.W $0A50                                                          ;90E9F7;
    BRA .crashIfNegative                                                 ;90E9FA;


.gravitySuit:
    LDA.W $0A4F                                                          ;90E9FC;
    LSR A                                                                ;90E9FF;
    LSR A                                                                ;90EA00;
    PHA                                                                  ;90EA01;
    XBA                                                                  ;90EA02;
    AND.W #$FF00                                                         ;90EA03;
    STA.W $0A4E                                                          ;90EA06;
    PLA                                                                  ;90EA09;
    XBA                                                                  ;90EA0A;
    AND.W #$00FF                                                         ;90EA0B;
    STA.W $0A50                                                          ;90EA0E;

.crashIfNegative:
    LDA.W $0A50                                                          ;90EA11;
    BPL .dontCrash                                                       ;90EA14;
    JML.L Crash_Handler                                                  ;90EA16;


.dontCrash:
    LDA.W $0A4C                                                          ;90EA1A;
    SEC                                                                  ;90EA1D;
    SBC.W $0A4E                                                          ;90EA1E;
    STA.W $0A4C                                                          ;90EA21;
    LDA.W $09C2                                                          ;90EA24;
    SBC.W $0A50                                                          ;90EA27;
    STA.W $09C2                                                          ;90EA2A;
    BPL .timeIsFrozen                                                    ;90EA2D;
    STZ.W $0A4C                                                          ;90EA2F;
    STZ.W $09C2                                                          ;90EA32;
    STZ.W $0A4E                                                          ;90EA35;
    STZ.W $0A50                                                          ;90EA38;
    PLP                                                                  ;90EA3B;
    RTS                                                                  ;90EA3C;


.timeIsFrozen:
    STZ.W $0A4E                                                          ;90EA3D;
    STZ.W $0A50                                                          ;90EA40;
    PLP                                                                  ;90EA43;
    RTS                                                                  ;90EA44;


PauseCheck:
    PHP                                                                  ;90EA45;
    REP #$30                                                             ;90EA46;
    LDA.W $0CEE                                                          ;90EA48;
    BNE .return                                                          ;90EA4B;
    LDA.W $0A78                                                          ;90EA4D;
    BNE .return                                                          ;90EA50;
    LDA.W $0797                                                          ;90EA52;
    BNE .return                                                          ;90EA55;
    LDA.W $079F                                                          ;90EA57;
    CMP.W #$0006                                                         ;90EA5A;
    BEQ .return                                                          ;90EA5D;
    LDA.W $0998                                                          ;90EA5F;
    CMP.W #$0008                                                         ;90EA62;
    BNE .return                                                          ;90EA65;
    LDA.B $8F                                                            ;90EA67;
    BIT.W #$1000                                                         ;90EA69;
    BEQ .return                                                          ;90EA6C;
    LDA.W #$0001                                                         ;90EA6E;
    STA.W $0723                                                          ;90EA71;
    STA.W $0725                                                          ;90EA74;
    LDA.W #$000C                                                         ;90EA77;
    STA.W $0998                                                          ;90EA7A;

.return:
    PLP                                                                  ;90EA7D;
    RTS                                                                  ;90EA7E;


LowEnergyCheck:
    LDA.W $09C2                                                          ;90EA7F;
    CMP.W #$001F                                                         ;90EA82;
    BMI .lowEnergy                                                       ;90EA85;
    LDA.W $0A6A                                                          ;90EA87;
    BEQ .return                                                          ;90EA8A;
    STZ.W $0A6A                                                          ;90EA8C;
    LDA.W #$0001                                                         ;90EA8F;
    JSL.L QueueSound_Lib3_Max6                                           ;90EA92;
    BRA .return                                                          ;90EA96;


.lowEnergy:
    LDA.W $0A6A                                                          ;90EA98;
    BNE .return                                                          ;90EA9B;
    LDA.W #$0002                                                         ;90EA9D;
    JSL.L QueueSound_Lib3_Max6                                           ;90EAA0;
    LDA.W #$0001                                                         ;90EAA4;
    STA.W $0A6A                                                          ;90EAA7;

.return:
    RTS                                                                  ;90EAAA;


Low_Health_Check_external:
    PHP                                                                  ;90EAAB;
    REP #$30                                                             ;90EAAC;
    JSR.W LowEnergyCheck                                                 ;90EAAE;
    PLP                                                                  ;90EAB1;
    RTL                                                                  ;90EAB2;


HandleSamus_AutoJumpTimer_HurtFlashCounter_PrevInputEnergy:
    PHP                                                                  ;90EAB3;
    REP #$30                                                             ;90EAB4;
    LDA.B $8B                                                            ;90EAB6;
    BIT.W $09B4                                                          ;90EAB8;
    BEQ .noJump                                                          ;90EABB;
    LDA.W $0DFE                                                          ;90EABD;
    BIT.W $09B4                                                          ;90EAC0;
    BEQ .noJump                                                          ;90EAC3;
    INC.W $0AF4                                                          ;90EAC5;
    BRA .previousInput                                                   ;90EAC8;


.noJump:
    STZ.W $0AF4                                                          ;90EACA;

.previousInput:
    LDA.B $8B                                                            ;90EACD;
    STA.W $0DFE                                                          ;90EACF;
    LDA.B $8F                                                            ;90EAD2;
    STA.W $0E00                                                          ;90EAD4;
    LDA.W $09C2                                                          ;90EAD7;
    CMP.W $0A12                                                          ;90EADA;
    BPL .setPreviousEnergy                                               ;90EADD;
    LDA.W $0A48                                                          ;90EADF;
    BNE .debugInvincibility                                              ;90EAE2;
    LDA.W #$0001                                                         ;90EAE4;
    STA.W $0A48                                                          ;90EAE7;

.debugInvincibility:
    LDA.W $0DE0                                                          ;90EAEA;
    CMP.W #$0007                                                         ;90EAED;
    BMI .setPreviousEnergy                                               ;90EAF0;
    LDA.W $0A12                                                          ;90EAF2;
    STA.W $09C2                                                          ;90EAF5;
    BRA .return                                                          ;90EAF8;


.setPreviousEnergy:
    LDA.W $09C2                                                          ;90EAFA;
    STA.W $0A12                                                          ;90EAFD;

.return:
    PLP                                                                  ;90EB00;
    RTS                                                                  ;90EB01;


ResetMovementAndPoseChangeVariables:
    PHP                                                                  ;90EB02;
    REP #$30                                                             ;90EB03;
    STZ.W $0DAA                                                          ;90EB05;
    STZ.W $0DAC                                                          ;90EB08;
    STZ.W $0DAE                                                          ;90EB0B;
    STZ.W $0DB0                                                          ;90EB0E;
    STZ.W $0DB2                                                          ;90EB11;
    STZ.W $0DB4                                                          ;90EB14;
    STZ.W $0DB6                                                          ;90EB17;
    STZ.W $0DB8                                                          ;90EB1A;
    STZ.W $0A9A                                                          ;90EB1D;
    STZ.W $0B5E                                                          ;90EB20;
    LDA.W $0DFA                                                          ;90EB23;
    XBA                                                                  ;90EB26;
    AND.W #$FF00                                                         ;90EB27;
    STA.W $0DFA                                                          ;90EB2A;
    LDA.W $0A1E                                                          ;90EB2D;
    STA.W $0A10                                                          ;90EB30;
    PLP                                                                  ;90EB33;
    RTS                                                                  ;90EB34;


DrawSamusAndProjectiles:
    PHP                                                                  ;90EB35;
    PHB                                                                  ;90EB36;
    PHK                                                                  ;90EB37;
    PLB                                                                  ;90EB38;
    REP #$30                                                             ;90EB39;
    JSR.W DrawSamusSprites                                               ;90EB3B;
    JSL.L DrawProjectiles                                                ;90EB3E;
    JSR.W HandleSamus_AutoJumpTimer_HurtFlashCounter_PrevInputEnergy     ;90EB42;
    JSR.W Handle_UnspinSFX_CancellingEchoSound_SettingTimeUpGameState    ;90EB45;
    PLB                                                                  ;90EB48;
    PLP                                                                  ;90EB49;
    RTL                                                                  ;90EB4A;


DrawSamusSprites:
    JSR.W HandleArmCannonOpenState                                       ;90EB4B;
    JMP.W ($0A5C)                                                        ;90EB4E;


RTS_90EB51:
    RTS                                                                  ;90EB51;


SamusDrawingHandler_Default:
    JSR.W HandleChargingBeamGraphicsAudio                                ;90EB52;

DrawSamus_NoCharge_NoGrapple:
    LDA.W $0AAC                                                          ;90EB55;
    AND.W #$000F                                                         ;90EB58;
    BEQ .noArmCannon                                                     ;90EB5B;
    CMP.W #$0002                                                         ;90EB5D;
    BNE .facingForward                                                   ;90EB60;
    JSR.W Handle_AtmosphericEffects                                      ;90EB62;
    JSR.W Draw_Samus                                                     ;90EB65;
    JSR.W DrawArmCannon                                                  ;90EB68;
    JSR.W DrawSamusEchoes                                                ;90EB6B;
    RTS                                                                  ;90EB6E;


.facingForward:
    JSR.W Handle_AtmosphericEffects                                      ;90EB6F;
    JSR.W DrawArmCannon                                                  ;90EB72;
    JSR.W Draw_Samus                                                     ;90EB75;
    JSR.W DrawSamusEchoes                                                ;90EB78;
    RTS                                                                  ;90EB7B;


.noArmCannon:
    JSR.W Handle_AtmosphericEffects                                      ;90EB7C;
    JSR.W Draw_Samus                                                     ;90EB7F;
    JSR.W DrawSamusEchoes                                                ;90EB82;
    RTS                                                                  ;90EB85;


SamusDrawingHandler_FiringGrappleBeam:
    LDA.W $0D32                                                          ;90EB86;
    CMP.W #GrappleBeamFunction_HitNothing_Cancel                         ;90EB89;
    BPL DrawSamus_NoCharge_NoGrapple                                     ;90EB8C;
    LDA.W $0D32                                                          ;90EB8E;
    CMP.W #GrappleBeamFunction_Firing                                    ;90EB91;
    BEQ .firing                                                          ;90EB94;
    CMP.W #UNUSED_GrappleBeamFunction_Unfiring_9BC759                    ;90EB96;
    BNE .startPositionCalculated                                         ;90EB99;

.firing:
    JSL.L UpdateGrappleBeamStartPositionDuringGrappleFire                ;90EB9B;

.startPositionCalculated:
    JSL.L HandleGrappleBeamFlare                                         ;90EB9F;
    LDA.W $0AAC                                                          ;90EBA3;
    AND.W #$000F                                                         ;90EBA6;
    BEQ .noArmCannon                                                     ;90EBA9;
    CMP.W #$0002                                                         ;90EBAB;
    BNE .notFacingForward                                                ;90EBAE;
    JSR.W Handle_AtmosphericEffects                                      ;90EBB0;
    JSR.W Draw_Samus                                                     ;90EBB3;
    JSR.W DrawArmCannon                                                  ;90EBB6;
    JSL.L UpdateGrappleBeamTiles_IncrementFlareCounter                   ;90EBB9;
    LDA.W $0CFE                                                          ;90EBBD;
    BEQ .return                                                          ;90EBC0;
    JSL.L DrawGrappleBeam                                                ;90EBC2;
    RTS                                                                  ;90EBC6;


.notFacingForward:
    JSR.W Handle_AtmosphericEffects                                      ;90EBC7;
    JSR.W DrawArmCannon                                                  ;90EBCA;
    JSR.W Draw_Samus                                                     ;90EBCD;
    JSL.L UpdateGrappleBeamTiles_IncrementFlareCounter                   ;90EBD0;
    LDA.W $0CFE                                                          ;90EBD4;
    BEQ .return                                                          ;90EBD7;
    JSL.L DrawGrappleBeam                                                ;90EBD9;
    RTS                                                                  ;90EBDD;


.noArmCannon:
    JSR.W Handle_AtmosphericEffects                                      ;90EBDE;
    JSR.W Draw_Samus                                                     ;90EBE1;
    JSL.L UpdateGrappleBeamTiles_IncrementFlareCounter                   ;90EBE4;
    LDA.W $0CFE                                                          ;90EBE8;
    BEQ .return                                                          ;90EBEB;
    JSL.L DrawGrappleBeam                                                ;90EBED;

.return:
    RTS                                                                  ;90EBF1;


RTS_90EBF2:
    RTS                                                                  ;90EBF2;


SamusDisplayHandler_ShinesparkCrashCircle:
    JSR.W Draw_Samus                                                     ;90EBF3;
    LDX.W #$0002                                                         ;90EBF6;

.loop:
    PHX                                                                  ;90EBF9;
    JSR.W DrawShinesparkCrashEchoCircle                                  ;90EBFA;
    PLX                                                                  ;90EBFD;
    DEX                                                                  ;90EBFE;
    DEX                                                                  ;90EBFF;
    BPL .loop                                                            ;90EC00;
    RTS                                                                  ;90EC02;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_SamusDisplayHandler_DrawSamusEchoes_90EC03:
    JSR.W SamusDrawingHandler_Default                                    ;90EC03;
    LDX.W #$0002                                                         ;90EC06;

.loop:
    PHX                                                                  ;90EC09;
    JSR.W DrawSamusEchoes                                                ;90EC0A;
    PLX                                                                  ;90EC0D;
    DEX                                                                  ;90EC0E;
    DEX                                                                  ;90EC0F;
    BPL .loop                                                            ;90EC10;
    RTS                                                                  ;90EC12;


RTS_90EC13:
    RTS                                                                  ;90EC13;
endif ; !FEATURE_KEEP_UNREFERENCED


SamusDisplayHandler_UsingElevator:
    LDA.W $05B6                                                          ;90EC14;
    BIT.W #$0001                                                         ;90EC17;
    BEQ SamusDisplayHandler_InanimateSamus                               ;90EC1A;
    RTS                                                                  ;90EC1C;


SamusDisplayHandler_InanimateSamus:
    JSL.L Draw_Inanimate_Samus                                           ;90EC1D;
    RTS                                                                  ;90EC21;


SetSamusRadius:
    PHP                                                                  ;90EC22;
    REP #$30                                                             ;90EC23;
    LDA.W $0A1C                                                          ;90EC25;
    ASL A                                                                ;90EC28;
    ASL A                                                                ;90EC29;
    ASL A                                                                ;90EC2A;
    TAX                                                                  ;90EC2B;
    LDA.L PoseDefinitions_YRadius,X                                      ;90EC2C;
    AND.W #$00FF                                                         ;90EC30;
    STA.W $0B00                                                          ;90EC33;
    LDA.W #$0005                                                         ;90EC36;
    STA.W $0AFE                                                          ;90EC39;
    PLP                                                                  ;90EC3C;
    RTS                                                                  ;90EC3D;


Get_Samus_Bottom_Boundary:
    PHP                                                                  ;90EC3E;
    REP #$30                                                             ;90EC3F;
    LDA.W $0A1C                                                          ;90EC41;
    ASL A                                                                ;90EC44;
    ASL A                                                                ;90EC45;
    ASL A                                                                ;90EC46;
    TAX                                                                  ;90EC47;
    LDA.L PoseDefinitions_YRadius,X                                      ;90EC48;
    AND.W #$00FF                                                         ;90EC4C;
    CLC                                                                  ;90EC4F;
    ADC.W $0AFA                                                          ;90EC50;
    DEC A                                                                ;90EC53;
    STA.B $12                                                            ;90EC54;
    PLP                                                                  ;90EC56;
    RTL                                                                  ;90EC57;


Get_Samus_BottomTop_Boundary:
    PHP                                                                  ;90EC58;
    REP #$30                                                             ;90EC59;
    LDA.W $0A1C                                                          ;90EC5B;
    ASL A                                                                ;90EC5E;
    ASL A                                                                ;90EC5F;
    ASL A                                                                ;90EC60;
    TAX                                                                  ;90EC61;
    LDA.L PoseDefinitions_YRadius,X                                      ;90EC62;
    AND.W #$00FF                                                         ;90EC66;
    PHA                                                                  ;90EC69;
    CLC                                                                  ;90EC6A;
    ADC.W $0AFA                                                          ;90EC6B;
    DEC A                                                                ;90EC6E;
    STA.B $12                                                            ;90EC6F;
    PLA                                                                  ;90EC71;
    STA.B $14                                                            ;90EC72;
    LDA.W $0AFA                                                          ;90EC74;
    SEC                                                                  ;90EC77;
    SBC.B $14                                                            ;90EC78;
    STA.B $14                                                            ;90EC7A;
    PLP                                                                  ;90EC7C;
    RTL                                                                  ;90EC7D;


AlignSamusBottomPositionWithPreviousPose:
    PHP                                                                  ;90EC7E;
    REP #$30                                                             ;90EC7F;
    LDA.W $0A1C                                                          ;90EC81;
    ASL A                                                                ;90EC84;
    ASL A                                                                ;90EC85;
    ASL A                                                                ;90EC86;
    TAX                                                                  ;90EC87;
    LDA.L PoseDefinitions_YRadius,X                                      ;90EC88;
    AND.W #$00FF                                                         ;90EC8C;
    STA.B $12                                                            ;90EC8F;
    LDA.W $0A20                                                          ;90EC91;
    ASL A                                                                ;90EC94;
    ASL A                                                                ;90EC95;
    ASL A                                                                ;90EC96;
    TAX                                                                  ;90EC97;
    LDA.L PoseDefinitions_YRadius,X                                      ;90EC98;
    AND.W #$00FF                                                         ;90EC9C;
    SEC                                                                  ;90EC9F;
    SBC.B $12                                                            ;90ECA0;
    STA.B $12                                                            ;90ECA2;
    CLC                                                                  ;90ECA4;
    ADC.W $0AFA                                                          ;90ECA5;
    STA.W $0AFA                                                          ;90ECA8;
    LDA.B $12                                                            ;90ECAB;
    CLC                                                                  ;90ECAD;
    ADC.W $0B14                                                          ;90ECAE;
    STA.W $0B14                                                          ;90ECB1;
    PLP                                                                  ;90ECB4;
    RTL                                                                  ;90ECB5;


Determine_SamusSuitPalette_Index:
    LDA.W $09A2                                                          ;90ECB6;
    BIT.W #$0020                                                         ;90ECB9;
    BNE .gravity                                                         ;90ECBC;
    BIT.W #$0001                                                         ;90ECBE;
    BNE .varia                                                           ;90ECC1;
    STZ.W $0A74                                                          ;90ECC3;
    RTS                                                                  ;90ECC6;


.varia:
    LDA.W #$0002                                                         ;90ECC7;
    STA.W $0A74                                                          ;90ECCA;
    RTS                                                                  ;90ECCD;


.gravity:
    LDA.W #$0004                                                         ;90ECCE;
    STA.W $0A74                                                          ;90ECD1;
    RTS                                                                  ;90ECD4;


DemoRecorder_MoveSamusWithControlPad:
    PHP                                                                  ;90ECD5;
    REP #$30                                                             ;90ECD6;
    LDA.B $8B                                                            ;90ECD8;
    BIT.W #$0800                                                         ;90ECDA;
    BEQ .checkDown                                                       ;90ECDD;
    LDA.W #$FFFC                                                         ;90ECDF;
    STA.B $12                                                            ;90ECE2;
    STZ.B $14                                                            ;90ECE4;
    JSR.W MoveSamus_Up                                                   ;90ECE6;

.checkDown:
    LDA.B $8B                                                            ;90ECE9;
    BIT.W #$0400                                                         ;90ECEB;
    BEQ .checkLeft                                                       ;90ECEE;
    LDA.W #$0004                                                         ;90ECF0;
    STA.B $12                                                            ;90ECF3;
    STZ.B $14                                                            ;90ECF5;
    JSR.W MoveSamus_Down                                                 ;90ECF7;

.checkLeft:
    LDA.B $8B                                                            ;90ECFA;
    BIT.W #$0200                                                         ;90ECFC;
    BEQ .checkRight                                                      ;90ECFF;
    LDA.W #$FFFC                                                         ;90ED01;
    STA.B $12                                                            ;90ED04;
    STZ.B $14                                                            ;90ED06;
    JSR.W MoveSamus_Left                                                 ;90ED08;

.checkRight:
    LDA.B $8B                                                            ;90ED0B;
    BIT.W #$0100                                                         ;90ED0D;
    BEQ .return                                                          ;90ED10;
    LDA.W #$0004                                                         ;90ED12;
    STA.B $12                                                            ;90ED15;
    STZ.B $14                                                            ;90ED17;
    JSR.W MoveSamus_Right                                                ;90ED19;

.return:
    PLP                                                                  ;90ED1C;
    RTS                                                                  ;90ED1D;


RTS_90ED1E:
    RTS                                                                  ;90ED1E;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_WasteTime_90ED1F:
    LDX.W #$00C8                                                         ;90ED1F;

.loop:
    DEX                                                                  ;90ED22;
    BPL .loop                                                            ;90ED23;
    RTS                                                                  ;90ED25;
endif ; !FEATURE_KEEP_UNREFERENCED


DemoRecorder_DisplaySamusPositionAsAmmoIfMorphed:
    LDA.W $0A1F                                                          ;90ED26;
    AND.W #$00FF                                                         ;90ED29;
    TAX                                                                  ;90ED2C;
    LDA.W .poses,X                                                       ;90ED2D;
    AND.W #$00FF                                                         ;90ED30;
    BEQ .return                                                          ;90ED33;
    LDA.W $0AF6                                                          ;90ED35;
    LSR A                                                                ;90ED38;
    LSR A                                                                ;90ED39;
    LSR A                                                                ;90ED3A;
    LSR A                                                                ;90ED3B;
    STA.W $09C6                                                          ;90ED3C;
    STA.W $09C8                                                          ;90ED3F;
    LDA.W $0AFA                                                          ;90ED42;
    LSR A                                                                ;90ED45;
    LSR A                                                                ;90ED46;
    LSR A                                                                ;90ED47;
    LSR A                                                                ;90ED48;
    STA.W $09CA                                                          ;90ED49;
    STA.W $09CC                                                          ;90ED4C;

.return:
    RTS                                                                  ;90ED4F;


.poses:                                                                  ;90ED50;
    db $00 ;  0: Standing
    db $00 ;  1: Running
    db $00 ;  2: Normal jumping
    db $00 ;  3: Spin jumping
    db $01 ; *4: Morph ball - on ground
    db $00 ;  5: Crouching
    db $00 ;  6: Falling
    db $01 ; *7: Unused
    db $01 ; *8: Morph ball - falling
    db $01 ; *9: Unused
    db $00 ;  Ah: Knockback / crystal flash ending
    db $00 ;  Bh: Unused
    db $00 ;  Ch: Unused
    db $00 ;  Dh: Unused
    db $00 ;  Eh: Turning around - on ground
    db $00 ;  Fh: Crouching/standing/morphing/unmorphing transition
    db $00 ;  10h: Moonwalking
    db $01 ; *11h: Spring ball - on ground
    db $01 ; *12h: Spring ball - in air
    db $01 ; *13h: Spring ball - falling
    db $00 ;  14h: Wall jumping
    db $00 ;  15h: Ran into a wall
    db $00 ;  16h: Grappling
    db $00 ;  17h: Turning around - jumping
    db $00 ;  18h: Turning around - falling
    db $00 ;  19h: Damage boost
    db $00 ;  1Ah: Grabbed by Draygon
    db $00 ;  1Bh: Shinespark / crystal flash / drained by metroid / damaged by MB's attacks

if !FEATURE_KEEP_UNREFERENCED
UNUSED_DisplayInGameTimeAsAmmo_90ED6C:
    LDA.W $09E0                                                          ;90ED6C;
    STA.W $09C6                                                          ;90ED6F;
    STA.W $09C8                                                          ;90ED72;
    LDA.W $09DE                                                          ;90ED75;
    STA.W $09CA                                                          ;90ED78;
    STA.W $09CC                                                          ;90ED7B;
    LDA.W $09DC                                                          ;90ED7E;
    STA.W $09CE                                                          ;90ED81;
    STA.W $09D0                                                          ;90ED84;
    RTS                                                                  ;90ED87;
endif ; !FEATURE_KEEP_UNREFERENCED


FootstepGraphics:
    LDA.W $079F                                                          ;90ED88;
    ASL A                                                                ;90ED8B;
    TAX                                                                  ;90ED8C;
    JSR.W (.pointers,X)                                                  ;90ED8D;
    RTS                                                                  ;90ED90;


.pointers:
    dw FootstepGraphics_Crateria                                         ;90ED91; Crateria
    dw FootstepGraphics_Common                                           ;90ED93; Brinstar
    dw FootstepGraphics_Common                                           ;90ED95; Norfair
    dw FootstepGraphics_Common                                           ;90ED97; Wrecked Ship
    dw FootstepGraphics_Maridia                                          ;90ED99; Maridia
    dw FootstepGraphics_Common                                           ;90ED9B; Tourian
    dw FootstepGraphics_Common                                           ;90ED9D; Ceres
    dw FootstepGraphics_Common                                           ;90ED9F; Debug

FootstepGraphics_Crateria:
    LDA.W $1F51                                                          ;90EDA1;
    BEQ .notCinematic                                                    ;90EDA4;
    JMP.W FootstepGraphics_Common                                        ;90EDA6;


.notCinematic:
    LDX.W $079D                                                          ;90EDA9;
    CPX.W #$0010                                                         ;90EDAC;
    BPL .gotoCommon                                                      ;90EDAF;
    LDA.W .footstepTypes,X                                               ;90EDB1;
    AND.W #$00FF                                                         ;90EDB4;
    BIT.W #$0001                                                         ;90EDB7;
    BNE .landingSite                                                     ;90EDBA;
    BIT.W #$0002                                                         ;90EDBC;
    BNE .wreckedShipEntrance                                             ;90EDBF;
    BIT.W #$0004                                                         ;90EDC1;
    BNE FootstepGraphics_Maridia                                         ;90EDC4;

.gotoCommon:
    JMP.W FootstepGraphics_Common                                        ;90EDC6;


.footstepTypes:                                                          ;90EDC9;
    db $01 ; 0: Landing site
    db $00
    db $00
    db $00
    db $00
    db $02 ; 5: Wrecked Ship entrance
    db $00
    db $04 ; 7: Pre moat room
    db $00
    db $04 ; 9: Wrecked Ship back door
    db $04 ; Ah: East Crateria kago shaft
    db $04 ; Bh: East Crateria maze
    db $04 ; Ch: Post Crateria maze yellow door
    db $00
    db $04 ; Eh: Moat
    db $00

.wreckedShipEntrance:
    LDA.W $0AFA                                                          ;90EDD9;
    CMP.W #$03B0                                                         ;90EDDC;
    BPL FootstepGraphics_Maridia                                         ;90EDDF;
    JMP.W FootstepGraphics_Common                                        ;90EDE1;


.landingSite:
    LDA.W $196E                                                          ;90EDE4;
    CMP.W #$000A                                                         ;90EDE7;
    BNE FootstepGraphics_Common                                          ;90EDEA; fallthrough to FootstepGraphics_Maridia

FootstepGraphics_Maridia:
    JSL.L Get_Samus_Bottom_Boundary                                      ;90EDEC;
    LDA.W $195E                                                          ;90EDF0;
    BMI .negativeYPosition                                               ;90EDF3;
    CMP.B $12                                                            ;90EDF5;
    BPL .nonLiquidPhysics                                                ;90EDF7;
    LDA.W $197E                                                          ;90EDF9;
    BIT.W #$0004                                                         ;90EDFC;
    BNE .nonLiquidPhysics                                                ;90EDFF;
    BRA .return                                                          ;90EE01;


.negativeYPosition:
    LDA.W $1962                                                          ;90EE03;
    BMI .nonLiquidPhysics                                                ;90EE06;
    CMP.B $12                                                            ;90EE08;
    BMI .return                                                          ;90EE0A;

.nonLiquidPhysics:
    LDA.W $0A1E                                                          ;90EE0C;
    AND.W #$00FF                                                         ;90EE0F;
    CMP.W #$0004                                                         ;90EE12;
    BEQ .facingRight                                                     ;90EE15;
    LDA.W $0AF6                                                          ;90EE17;
    CLC                                                                  ;90EE1A;
    ADC.W #$000C                                                         ;90EE1B;
    STA.W $0ADC                                                          ;90EE1E;
    LDA.W $0AF6                                                          ;90EE21;
    SEC                                                                  ;90EE24;
    SBC.W #$0008                                                         ;90EE25;
    STA.W $0ADE                                                          ;90EE28;
    BRA .merge                                                           ;90EE2B;


.facingRight:
    LDA.W $0AF6                                                          ;90EE2D;
    SEC                                                                  ;90EE30;
    SBC.W #$000C                                                         ;90EE31;
    STA.W $0ADC                                                          ;90EE34;
    LDA.W $0AF6                                                          ;90EE37;
    CLC                                                                  ;90EE3A;
    ADC.W #$0008                                                         ;90EE3B;
    STA.W $0ADE                                                          ;90EE3E;

.merge:
    LDA.W $0AFA                                                          ;90EE41;
    CLC                                                                  ;90EE44;
    ADC.W #$0010                                                         ;90EE45;
    STA.W $0AE4                                                          ;90EE48;
    STA.W $0AE6                                                          ;90EE4B;
    LDA.W #$0100                                                         ;90EE4E;
    STA.W $0AEC                                                          ;90EE51;
    STA.W $0AEE                                                          ;90EE54;
    LDA.W #$8002                                                         ;90EE57;
    STA.W $0AD4                                                          ;90EE5A;
    LDA.W #$0003                                                         ;90EE5D;
    STA.W $0AD6                                                          ;90EE60;

.return:
    RTS                                                                  ;90EE63;


FootstepGraphics_Common:
    LDA.W $0B3E                                                          ;90EE64;
    AND.W #$FF00                                                         ;90EE67;
    CMP.W #$0400                                                         ;90EE6A;
    BNE .return                                                          ;90EE6D;
    JSL.L Get_Samus_Bottom_Boundary                                      ;90EE6F;
    LDA.W $195E                                                          ;90EE73;
    BMI .negativeYPosition                                               ;90EE76;
    CMP.B $12                                                            ;90EE78;
    BPL .nonLiquidPhysics                                                ;90EE7A;
    LDA.W $197E                                                          ;90EE7C;
    BIT.W #$0004                                                         ;90EE7F;
    BNE .nonLiquidPhysics                                                ;90EE82;
    BRA .return                                                          ;90EE84;


.negativeYPosition:
    LDA.W $1962                                                          ;90EE86;
    BMI .nonLiquidPhysics                                                ;90EE89;
    CMP.B $12                                                            ;90EE8B;
    BMI .return                                                          ;90EE8D;

.nonLiquidPhysics:
    LDA.W $0A1E                                                          ;90EE8F;
    AND.W #$00FF                                                         ;90EE92;
    CMP.W #$0004                                                         ;90EE95;
    BEQ .facingLeft                                                      ;90EE98;
    LDA.W $0AF6                                                          ;90EE9A;
    CLC                                                                  ;90EE9D;
    ADC.W #$000C                                                         ;90EE9E;
    STA.W $0ADC                                                          ;90EEA1;
    LDA.W $0AF6                                                          ;90EEA4;
    SEC                                                                  ;90EEA7;
    SBC.W #$0008                                                         ;90EEA8;
    STA.W $0ADE                                                          ;90EEAB;
    BRA .merge                                                           ;90EEAE;


.facingLeft:
    LDA.W $0AF6                                                          ;90EEB0;
    SEC                                                                  ;90EEB3;
    SBC.W #$000C                                                         ;90EEB4;
    STA.W $0ADC                                                          ;90EEB7;
    LDA.W $0AF6                                                          ;90EEBA;
    CLC                                                                  ;90EEBD;
    ADC.W #$0008                                                         ;90EEBE;
    STA.W $0ADE                                                          ;90EEC1;

.merge:
    LDA.W $0AFA                                                          ;90EEC4;
    CLC                                                                  ;90EEC7;
    ADC.W #$0010                                                         ;90EEC8;
    STA.W $0AE4                                                          ;90EECB;
    STA.W $0AE6                                                          ;90EECE;
    LDA.W #$0700                                                         ;90EED1;
    STA.W $0AEC                                                          ;90EED4;
    STA.W $0AEE                                                          ;90EED7;
    LDA.W #$8002                                                         ;90EEDA;
    STA.W $0AD4                                                          ;90EEDD;
    LDA.W #$0003                                                         ;90EEE0;
    STA.W $0AD6                                                          ;90EEE3;

.return:
    RTS                                                                  ;90EEE6;


UpdateSamusEchoPosition:
    LDA.W $0B3E                                                          ;90EEE7;
    AND.W #$FF00                                                         ;90EEEA;
    CMP.W #$0400                                                         ;90EEED;
    BNE .return                                                          ;90EEF0;
    LDA.W $0AAE                                                          ;90EEF2;
    BMI .return                                                          ;90EEF5;
    LDA.W $09DA                                                          ;90EEF7;
    BIT.W #$0003                                                         ;90EEFA;
    BNE .return                                                          ;90EEFD;
    LDX.W $0AAE                                                          ;90EEFF;
    LDA.W $0AF6                                                          ;90EF02;
    STA.W $0AB0,X                                                        ;90EF05;
    LDA.W $0AFA                                                          ;90EF08;
    STA.W $0AB8,X                                                        ;90EF0B;
    INX                                                                  ;90EF0E;
    INX                                                                  ;90EF0F;
    CPX.W #$0004                                                         ;90EF10;
    BMI .storeDistance                                                   ;90EF13;
    LDX.W #$0000                                                         ;90EF15;

.storeDistance:
    STX.W $0AAE                                                          ;90EF18;

.return:
    RTS                                                                  ;90EF1B;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_PossiblyFootStepGraphicOffsets_90EF1C:
; Best guess is footstep graphic offsets from Samus' position
    dw $000C,$0010                                                       ;90EF1C;
endif ; !FEATURE_KEEP_UNREFERENCED

Unknown_ShinesparkMovementHandler_Unused_90EF20:
; Loaded by shinespark Samus movement handlers and then unused >_<;
    dw $0010                                                             ;90EF20;

PostGrappleCollisionDetection:
    PHP                                                                  ;90EF22;
    REP #$30                                                             ;90EF23;
    JSL.L PostGrappleCollisionDetection_Horizontal                       ;90EF25;
    JSL.L PostGrappleCollisionDetection_Vertical                         ;90EF29;
    LDA.W $0E0A                                                          ;90EF2D;
    BEQ .noEject                                                         ;90EF30;
    LDA.W $0E08                                                          ;90EF32;
    BNE .return                                                          ;90EF35;

.noEject:
    LDA.W $0E08                                                          ;90EF37;
    BEQ .return                                                          ;90EF3A;
    LDA.W $0AFA                                                          ;90EF3C;
    SEC                                                                  ;90EF3F;
    SBC.W $0E08                                                          ;90EF40;
    STA.W $0AFA                                                          ;90EF43;
    LDA.W $0B00                                                          ;90EF46;
    CMP.W #$0010                                                         ;90EF49;
    BMI .return                                                          ;90EF4C;
    JSL.L PostGrappleCollisionDetection_Vertical                         ;90EF4E;
    LDA.W $0AFA                                                          ;90EF52;
    SEC                                                                  ;90EF55;
    SBC.W $0E08                                                          ;90EF56;
    STA.W $0AFA                                                          ;90EF59;

.return:
    PLP                                                                  ;90EF5C;
    RTL                                                                  ;90EF5D;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_FireUnknownProjectile27_90EF5E:
    LDA.W #RTS_90E90E                                                    ;90EF5E;
    STA.W $0A58                                                          ;90EF61;
    LDA.W #SamusCurrentStateHandler_SamusIsLocked                        ;90EF64;
    STA.W $0A42                                                          ;90EF67;
    LDA.W #$FFFF                                                         ;90EF6A;
    STA.W $0A28                                                          ;90EF6D;
    STA.W $0A2A                                                          ;90EF70;
    STA.W $0A2C                                                          ;90EF73;
    STZ.W $0A2E                                                          ;90EF76;
    STZ.W $0A30                                                          ;90EF79;
    STZ.W $0A32                                                          ;90EF7C;
    LDX.W #$0006                                                         ;90EF7F;

.loop:
    LDA.W #$8027                                                         ;90EF82;
    STA.W $0C18,X                                                        ;90EF85;
    STZ.W $0C04,X                                                        ;90EF88;
    LDA.W #UNUSED_ProjectilePreInstruction_UnknownProjectile27_90EFD3    ;90EF8B;
    STA.W $0C68,X                                                        ;90EF8E;
    STZ.W $0BF0,X                                                        ;90EF91;
    STZ.W $0BDC,X                                                        ;90EF94;
    STZ.W $0C7C,X                                                        ;90EF97;
    STZ.W $0B8C,X                                                        ;90EF9A;
    STZ.W $0BA0,X                                                        ;90EF9D;
    LDA.W $0AF6                                                          ;90EFA0;
    CLC                                                                  ;90EFA3;
    ADC.W .XOffsets,X                                                    ;90EFA4;
    STA.W $0B64,X                                                        ;90EFA7;
    LDA.W $0AFA                                                          ;90EFAA;
    CLC                                                                  ;90EFAD;
    ADC.W .YOffsets,X                                                    ;90EFAE;
    STA.W $0B78,X                                                        ;90EFB1;
    JSL.L Initialize_ShinesparkEcho_or_SpazerSBATrailProjectile          ;90EFB4;
    DEX                                                                  ;90EFB8;
    DEX                                                                  ;90EFB9;
    BPL .loop                                                            ;90EFBA;
    LDA.W #$0004                                                         ;90EFBC;
    STA.W $0CCE                                                          ;90EFBF;
    RTS                                                                  ;90EFC2;


.XOffsets:
; X offsets from Samus
    dw $0080,$0080,$FF80,$FF80                                           ;90EFC3;

.YOffsets:
; Y offsets from Samus
    dw $FF80,$0080,$0080,$FF80                                           ;90EFCB;

UNUSED_ProjectilePreInstruction_UnknownProjectile27_90EFD3:
    LDA.W $0B64,X                                                        ;90EFD3;
    CLC                                                                  ;90EFD6;
    ADC.W .XVelocities,X                                                 ;90EFD7;
    STA.W $0B64,X                                                        ;90EFDA;
    LDA.W $0B78,X                                                        ;90EFDD;
    CLC                                                                  ;90EFE0;
    ADC.W .YVelocities,X                                                 ;90EFE1;
    STA.W $0B78,X                                                        ;90EFE4;
    CMP.W $0AFA                                                          ;90EFE7;
    BNE .return                                                          ;90EFEA;
    LDA.W $0C7C,X                                                        ;90EFEC;
    CMP.W #$0001                                                         ;90EFEF;
    BNE .not1                                                            ;90EFF2;
    CPX.W #$0006                                                         ;90EFF4;
    BNE .clear                                                           ;90EFF7;
    LDA.W #UNUSED_SamusMovementHandler_90F04B                            ;90EFF9;
    STA.W $0A58                                                          ;90EFFC;

.clear:
    JSL.L Clear_Projectile                                               ;90EFFF;
    RTS                                                                  ;90F003;


.not1:
    INC.W $0C7C,X                                                        ;90F004;
    LDA.W #$00B4                                                         ;90F007;
    STA.W $0A68                                                          ;90F00A;
    LDA.W #$0001                                                         ;90F00D;
    STA.W $0ACC                                                          ;90F010;
    STZ.W $0ACE                                                          ;90F013;
    LDA.W $0AF6                                                          ;90F016;
    CLC                                                                  ;90F019;
    ADC.W .XOffsets,X                                                    ;90F01A;
    STA.W $0B64,X                                                        ;90F01D;
    LDA.W $0AFA                                                          ;90F020;
    CLC                                                                  ;90F023;
    ADC.W .YOffsets,X                                                    ;90F024;
    STA.W $0B78,X                                                        ;90F027;

.return:
    RTS                                                                  ;90F02A;

; Indexed by projectile index
.XVelocities:
    dw $FFFC,$FFFC,$0004,$0004                                           ;90F02B;
.YVelocities:
    dw $0004,$FFFC,$FFFC,$0004                                           ;90F033;
.XOffsets:
    dw $0080,$0080,$FF80,$FF80                                           ;90F03B;
.YOffsets:
    dw $FF80,$0080,$0080,$FF80                                           ;90F043;


UNUSED_SamusMovementHandler_90F04B:
    LDA.W $0A68                                                          ;90F04B;
    BNE .return                                                          ;90F04E;
    LDA.W #$0006                                                         ;90F050;
    STA.W $0ACE                                                          ;90F053;
    LDA.W #$0001                                                         ;90F056;
    STA.W $0AD0                                                          ;90F059;
    STA.W $0A80                                                          ;90F05C;
    LDA.W #$000A                                                         ;90F05F;
    STA.W $0ACC                                                          ;90F062;
    LDA.W #$0078                                                         ;90F065;
    STA.W $0A68                                                          ;90F068;
    LDA.W #UNUSED_SamusMovementHandler_90F072                            ;90F06B;
    STA.W $0A58                                                          ;90F06E;

.return:
    RTS                                                                  ;90F071;


UNUSED_SamusMovementHandler_90F072:
    LDA.W $0A68                                                          ;90F072;
    BNE .return                                                          ;90F075;
    LDA.W #SamusCurrentStateHandler_Normal                               ;90F077;
    STA.W $0A42                                                          ;90F07A;
    LDA.W #SamusMovementHandler_Normal                                   ;90F07D;
    STA.W $0A58                                                          ;90F080;

.return:
    RTS                                                                  ;90F083;
endif ; !FEATURE_KEEP_UNREFERENCED


Run_Samus_Command:
    PHP                                                                  ;90F084;
    PHB                                                                  ;90F085;
    PHK                                                                  ;90F086;
    PLB                                                                  ;90F087;
    REP #$30                                                             ;90F088;
    PHX                                                                  ;90F08A;
    AND.W #$001F                                                         ;90F08B;
    ASL A                                                                ;90F08E;
    TAX                                                                  ;90F08F;
    JSR.W (.pointers,X)                                                  ;90F090;
    BCC .return                                                          ;90F093;
    LDA.W #$FFFF                                                         ;90F095;
    STA.W $0A28                                                          ;90F098;
    STA.W $0A2A                                                          ;90F09B;
    STA.W $0A2C                                                          ;90F09E;
    STZ.W $0A2E                                                          ;90F0A1;
    STZ.W $0A30                                                          ;90F0A4;
    STZ.W $0A32                                                          ;90F0A7;

.return:
    PLX                                                                  ;90F0AA;
    PLB                                                                  ;90F0AB;
    PLP                                                                  ;90F0AC;
    RTL                                                                  ;90F0AD;


.pointers:
    dw SamusCommand_0_LockSamus                                          ;90F0AE;
    dw SamusCommand_1_UnlockSamus                                        ;90F0B0;
    dw SamusCommand_2_SamusReachedCeresElevator                          ;90F0B2;
    dw SamusCommand_3_UnspinSamus                                        ;90F0B4;
    dw SamusCommand_4_EndChargeBeam                                      ;90F0B6;
    dw SamusCommand_5_SetupSamusForBeingDrained_AbleToStand              ;90F0B8;
    dw SamusCommand_6_LockSamusIntoRefillStation                         ;90F0BA;
    dw SamusCommand_7_SetupSamusForElevator                              ;90F0BC;
    dw SamusCommand_8_SetupSamusForCeresStart                            ;90F0BE;
    dw SamusCommand_9_SetupSamusForZebesStart                            ;90F0C0;
    dw SamusCommand_A_StopDrawingSamus                                   ;90F0C2;
    dw SamusCommand_B_UnlockSamusFromFacingForward                       ;90F0C4;
    dw SamusCommand_C_UpdateSamusDueToUnpause                            ;90F0C6;
    dw SamusCommand_D_CheckIfGrappleBeamIsActive                         ;90F0C8;
    dw SamusCommand_E_UnlockSamusFromCeresElevator                       ;90F0CA;
    dw SamusCommand_F_EnableTimerHandling                                ;90F0CC;
    dw SamusCommand_10_UnlockSamusFromReserveTank                        ;90F0CE;
    dw SamusCommand_11_SetupSamusForDeathSequence                        ;90F0D0;
    dw SamusCommand_12_EnableSamusBlueFlashing                           ;90F0D2;
    dw SamusCommand_13_DisableSamusBlueFlashing                          ;90F0D4;
    dw SamusCommand_14_QueueLowEnergyAndGrappleSFX                       ;90F0D6;
    dw SamusCommand_15_LockSamusIntoSuitPickup                           ;90F0D8;
    dw SamusCommand_16_EnableRainbowSamus                                ;90F0DA;
    dw SamusCommand_17_DisableRainbowSamus_StandHerUp                    ;90F0DC;
    dw SamusCommand_18_SetupSamusForBeingDrained_UnableToStand           ;90F0DE;
    dw SamusCommand_19_FreezeDrainedSamusAnimation                       ;90F0E0;
    dw SamusCommand_1A_SamusEntersGunship                                ;90F0E2;
    dw SamusCommand_1B_LockSamusForReserveTank                           ;90F0E4;
    dw SamusCommand_1C_PlaySpinJumpSoundIfSpinJumping                    ;90F0E6;
    dw SamusCommand_1D_ClearSoundsWhenGoingThroughDoor                   ;90F0E8;
    dw SamusCommand_1E_ResumeSoundsAfterPowerBombExplosion               ;90F0EA;
    dw SamusCommand_1F_KillGrappleBeam                                   ;90F0EC;

Update_Samus_PreviousPose:
    LDA.W $0A20                                                          ;90F0EE;
    STA.W $0A24                                                          ;90F0F1;
    LDA.W $0A22                                                          ;90F0F4;
    STA.W $0A26                                                          ;90F0F7;
    LDA.W $0A1C                                                          ;90F0FA;
    STA.W $0A20                                                          ;90F0FD;
    LDA.W $0A1E                                                          ;90F100;
    STA.W $0A22                                                          ;90F103;
    RTS                                                                  ;90F106;


CLCRTS_90F107:
    CLC                                                                  ;90F107;
    RTS                                                                  ;90F108;


SamusCommand_0_LockSamus:
    LDA.W #SamusCurrentStateHandler_SamusIsLocked                        ;90F109;
    STA.W $0A42                                                          ;90F10C;
    LDA.W #SamusNewStateHandler_SamusIsLocked                            ;90F10F;
    STA.W $0A44                                                          ;90F112;
    SEC                                                                  ;90F115;
    RTS                                                                  ;90F116;


SamusCommand_1_UnlockSamus:
    LDA.W #SamusCurrentStateHandler_Normal                               ;90F117;
    STA.W $0A42                                                          ;90F11A;
    LDA.W #SamusNewStateHandler_Normal                                   ;90F11D;
    STA.W $0A44                                                          ;90F120;
    SEC                                                                  ;90F123;
    RTS                                                                  ;90F124;


SamusCommand_2_SamusReachedCeresElevator:
    LDA.W $0A1E                                                          ;90F125;
    AND.W #$00FF                                                         ;90F128;
    CMP.W #$0004                                                         ;90F12B;
    BEQ .facingLeft                                                      ;90F12E;
    LDA.W #$0001                                                         ;90F130;
    STA.W $0A1C                                                          ;90F133;
    BRA +                                                                ;90F136;


.facingLeft:
    LDA.W #$0002                                                         ;90F138;
    STA.W $0A1C                                                          ;90F13B;

  + STZ.W $0A9A                                                          ;90F13E;
    JSL.L InitializeSamusPose_1                                          ;90F141;
    JSL.L Set_Samus_AnimationFrame_if_PoseChanged                        ;90F145;
    LDA.W #$003C                                                         ;90F149;
    STA.W $0AA0                                                          ;90F14C;
    JMP.W SamusCommand_0_LockSamus                                       ;90F14F;


SamusCommand_3_UnspinSamus:
    LDA.W $0D32                                                          ;90F152;
    CMP.W #GrappleBeamFunction_Inactive                                  ;90F155;
    BEQ .grappleInactive                                                 ;90F158;
    LDA.W #GrappleBeamFunction_Dropped                                   ;90F15A;
    STA.W $0D32                                                          ;90F15D;

.returnCarryClear:
    CLC                                                                  ;90F160;
    RTS                                                                  ;90F161;


.grappleInactive:
    LDA.W $0A1F                                                          ;90F162;
    AND.W #$00FF                                                         ;90F165;
    CMP.W #$0003                                                         ;90F168;
    BEQ .checkDirection                                                  ;90F16B;
    CMP.W #$0014                                                         ;90F16D;
    BNE .returnCarryClear                                                ;90F170;

.checkDirection:
    LDA.W $0A1E                                                          ;90F172;
    AND.W #$00FF                                                         ;90F175;
    CMP.W #$0004                                                         ;90F178;
    BEQ .facingLeft                                                      ;90F17B;
    LDA.W #$0001                                                         ;90F17D;
    STA.W $0A1C                                                          ;90F180;
    BRA +                                                                ;90F183;


.facingLeft:
    LDA.W #$0002                                                         ;90F185;
    STA.W $0A1C                                                          ;90F188;

  + STZ.W $0A9A                                                          ;90F18B;
    JSL.L InitializeSamusPose_1                                          ;90F18E;
    JSL.L Set_Samus_AnimationFrame_if_PoseChanged                        ;90F192;
    JSR.W Update_Samus_PreviousPose                                      ;90F196;
    SEC                                                                  ;90F199;
    RTS                                                                  ;90F19A;


SamusCommand_4_EndChargeBeam:
    STZ.W $0B62                                                          ;90F19B; fallthrough to EndChargeBeam

EndChargeBeam:
    STZ.W $0CD0                                                          ;90F19E;
    JSR.W ClearFlareAnimationState                                       ;90F1A1;
    JSL.L LoadSamusSuitPalette                                           ;90F1A4;
    CLC                                                                  ;90F1A8;
    RTS                                                                  ;90F1A9;


SamusCommand_6_LockSamusIntoRefillStation:
    LDA.W #SamusCurrentStateHandler_SamusIsLocked                        ;90F1AA;
    STA.W $0A42                                                          ;90F1AD;
    LDA.W #RTL_90E8D6                                                    ;90F1B0;
    STA.W $0A44                                                          ;90F1B3;
    LDA.W $0CD0                                                          ;90F1B6;
    CMP.W #$000F                                                         ;90F1B9;
    BMI .gotoEndChargeBeam                                               ;90F1BC;
    LDA.W #$0002                                                         ;90F1BE;
    JSL.L QueueSound                                                     ;90F1C1;

.gotoEndChargeBeam:
    JMP.W EndChargeBeam                                                  ;90F1C5;


SamusCommand_7_SetupSamusForElevator:
    JSL.L MakeSamusFaceForward                                           ;90F1C8;
    LDA.W #SamusNewStateHandler_RidingElevator                           ;90F1CC;
    STA.W $0A44                                                          ;90F1CF;
    LDA.W #SamusMovementHandler_Normal                                   ;90F1D2;
    STA.W $0A58                                                          ;90F1D5;
    LDA.W #SamusDisplayHandler_UsingElevator                             ;90F1D8;
    STA.W $0A5C                                                          ;90F1DB;
    LDA.W #SamusPoseInputHandler_Normal                                  ;90F1DE;
    STA.W $0A60                                                          ;90F1E1;
    STZ.W $0A56                                                          ;90F1E4;
    SEC                                                                  ;90F1E7;
    RTS                                                                  ;90F1E8;


SamusCommand_8_SetupSamusForCeresStart:
    LDA.W #RTL_90E8CD                                                    ;90F1E9;
    STA.W $0A42                                                          ;90F1EC;
    LDA.W #SamusNewStateHandler_SamusIsLocked                            ;90F1EF;
    STA.W $0A44                                                          ;90F1F2;
    LDA.W #$0000                                                         ;90F1F5;
    STA.W $0A1C                                                          ;90F1F8;
    STZ.W $0A9A                                                          ;90F1FB;
    JSL.L InitializeSamusPose_1                                          ;90F1FE;
    JSL.L Set_Samus_AnimationFrame_if_PoseChanged                        ;90F202;
    JSL.L LoadSamusSuitPalette                                           ;90F206;
    LDA.W #SamusDrawingHandler_Default                                   ;90F20A;
    STA.W $0A5C                                                          ;90F20D;
    LDA.W $0A1C                                                          ;90F210;
    STA.W $0A20                                                          ;90F213;
    STA.W $0A24                                                          ;90F216;
    LDA.W $0A1E                                                          ;90F219;
    STA.W $0A22                                                          ;90F21C;
    STA.W $0A26                                                          ;90F21F;
    STZ.W $0AFA                                                          ;90F222;
    LDY.W #EnemyProjectile_CeresElevatorPad                              ;90F225;
    JSL.L SpawnEnemyProjectileY_ParameterA_XGraphics                     ;90F228;
    LDY.W #EnemyProjectile_CeresElevatorPadLevelDataConcealer            ;90F22C;
    JSL.L SpawnEnemyProjectileY_ParameterA_XGraphics                     ;90F22F;
    STZ.W $05F7                                                          ;90F233;
    JSL.L Play_Room_Music_Track_After_A_Frames                           ;90F236;
    SEC                                                                  ;90F23A;
    RTS                                                                  ;90F23B;


SamusCommand_9_SetupSamusForZebesStart:
    LDA.W $09A2                                                          ;90F23C;
    BIT.W #$0020                                                         ;90F23F;
    BNE .gravity                                                         ;90F242;
    BIT.W #$0001                                                         ;90F244;
    BNE .varia                                                           ;90F247;
    LDY.W #PaletteFXObjects_SamusLoading_PowerSuit                       ;90F249;
    JSL.L Spawn_PaletteFXObject                                          ;90F24C;
    LDA.W #$0000                                                         ;90F250;
    STA.W $0A1C                                                          ;90F253;
    BRA .merge                                                           ;90F256;


.varia:
    LDY.W #PaletteFXObjects_SamusLoading_VariaSuit                       ;90F258;
    JSL.L Spawn_PaletteFXObject                                          ;90F25B;
    LDA.W #$009B                                                         ;90F25F;
    STA.W $0A1C                                                          ;90F262;
    BRA .merge                                                           ;90F265;


.gravity:
    LDY.W #PaletteFXObjects_SamusLoading_GravitySuit                     ;90F267;
    JSL.L Spawn_PaletteFXObject                                          ;90F26A;
    LDA.W #$009B                                                         ;90F26E;
    STA.W $0A1C                                                          ;90F271;

.merge:
    JSL.L LoadSamusSuitPalette                                           ;90F274;
    JSL.L InitializeSamusPose_1                                          ;90F278;
    LDA.W #$0003                                                         ;90F27C;
    STA.W $0A94                                                          ;90F27F;
    LDA.W #$0002                                                         ;90F282;
    STA.W $0A96                                                          ;90F285;
    STZ.W $0DEC                                                          ;90F288;
    SEC                                                                  ;90F28B;
    RTS                                                                  ;90F28C;


SamusCommand_A_StopDrawingSamus:
    LDA.W #RTS_90E90E                                                    ;90F28D;
    STA.W $0A5C                                                          ;90F290;
    CLC                                                                  ;90F293;
    RTS                                                                  ;90F294;


SamusCommand_B_UnlockSamusFromFacingForward:
    LDA.W #SamusDrawingHandler_Default                                   ;90F295;
    STA.W $0A5C                                                          ;90F298;
    JMP.W SamusCommand_1_UnlockSamus                                     ;90F29B;


SamusCommand_C_UpdateSamusDueToUnpause:
    JSL.L UpdateSamusPoseDueToChangeOfEquipment                          ;90F29E;
    LDA.W $0A44                                                          ;90F2A2;
    CMP.W #RTL_90E8D6                                                    ;90F2A5;
    BNE .return                                                          ;90F2A8;
    LDA.W #SamusCurrentStateHandler_Normal                               ;90F2AA;
    STA.W $0A42                                                          ;90F2AD;
    LDA.W #SamusNewStateHandler_Normal                                   ;90F2B0;
    STA.W $0A44                                                          ;90F2B3;

.return:
    SEC                                                                  ;90F2B6;
    RTS                                                                  ;90F2B7;


SamusCommand_D_CheckIfGrappleBeamIsActive:
    LDA.W $0D32                                                          ;90F2B8;
    CMP.W #GrappleBeamFunction_Inactive                                  ;90F2BB;
    BNE .active                                                          ;90F2BE;
    LDA.W #$0000                                                         ;90F2C0;
    CLC                                                                  ;90F2C3;
    RTS                                                                  ;90F2C4;


.active:
    LDA.W #$0001                                                         ;90F2C5;
    CLC                                                                  ;90F2C8;
    RTS                                                                  ;90F2C9;


SamusCommand_E_UnlockSamusFromCeresElevator:
    LDA.W #SamusCurrentStateHandler_Normal                               ;90F2CA;
    STA.W $0A42                                                          ;90F2CD;
    LDA.W #SamusNewStateHandler_Ceres                                    ;90F2D0;
    STA.W $0A44                                                          ;90F2D3;
    SEC                                                                  ;90F2D6;
    RTS                                                                  ;90F2D7;


SamusCommand_F_EnableTimerHandling:
    LDA.W #SamusTimerHackHandler_HandleTimer                             ;90F2D8;
    STA.W $0A5A                                                          ;90F2DB;
    CLC                                                                  ;90F2DE;
    RTS                                                                  ;90F2DF;


SamusCommand_10_UnlockSamusFromReserveTank:
    LDA.W $0A44                                                          ;90F2E0;
    CMP.W #RTL_90E8D9                                                    ;90F2E3;
    BNE .noRainbowBeam                                                   ;90F2E6;
    SEC                                                                  ;90F2E8;
    RTS                                                                  ;90F2E9;


.noRainbowBeam:
    LDA.W #SamusCurrentStateHandler_Normal                               ;90F2EA;
    STA.W $0A42                                                          ;90F2ED;
    LDA.W #SamusNewStateHandler_Normal                                   ;90F2F0;
    STA.W $0A44                                                          ;90F2F3;
    SEC                                                                  ;90F2F6;
    RTS                                                                  ;90F2F7;


SamusCommand_11_SetupSamusForDeathSequence:
    JSL.L Disable_PaletteFXObjects                                       ;90F2F8; fallthrough to LockSamus_SetInanimateSamusDrawingHandler

LockSamus_SetInanimateSamusDrawingHandler:
    LDA.W #SamusCurrentStateHandler_SamusIsLocked                        ;90F2FC;
    STA.W $0A42                                                          ;90F2FF;
    LDA.W #RTL_90E8CD                                                    ;90F302;
    STA.W $0A44                                                          ;90F305;
    LDA.W #SamusDisplayHandler_InanimateSamus                            ;90F308;
    STA.W $0A5C                                                          ;90F30B;
    SEC                                                                  ;90F30E;
    RTS                                                                  ;90F30F;


SamusCommand_15_LockSamusIntoSuitPickup:
    JSR.W Update_Samus_PreviousPose                                      ;90F310;
    STZ.W $0CD0                                                          ;90F313;
    JSR.W ClearFlareAnimationState                                       ;90F316;
    JSL.L LoadSamusSuitPalette                                           ;90F319;
    JMP.W LockSamus_SetInanimateSamusDrawingHandler                      ;90F31D;


SamusCommand_12_EnableSamusBlueFlashing:
    LDA.W #$0001                                                         ;90F320;
    STA.W $0A4A                                                          ;90F323;
    CLC                                                                  ;90F326;
    RTS                                                                  ;90F327;


SamusCommand_13_DisableSamusBlueFlashing:
    STZ.W $0A4A                                                          ;90F328;
    JSL.L LoadSamusSuitPalette                                           ;90F32B;
    CLC                                                                  ;90F32F;
    RTS                                                                  ;90F330;


SamusCommand_14_QueueLowEnergyAndGrappleSFX:
    LDA.W $09C2                                                          ;90F331;
    CMP.W #$001F                                                         ;90F334;
    BPL .notLowEnergy                                                    ;90F337;
    LDA.W #$0002                                                         ;90F339;
    JSL.L QueueSound_Lib3_Max6                                           ;90F33C;

.notLowEnergy:
    JSR.W SamusCommand_D_CheckIfGrappleBeamIsActive                      ;90F340;
    TAY                                                                  ;90F343;
    BEQ .grappleInactive                                                 ;90F344;
    LDA.W #$0006                                                         ;90F346;
    JSL.L QueueSound_Lib1_Max6                                           ;90F349;
    CLC                                                                  ;90F34D;
    RTS                                                                  ;90F34E;


.grappleInactive:
    LDA.W $0A1E                                                          ;90F34F;
    AND.W #$00FF                                                         ;90F352;
    CMP.W #$0003                                                         ;90F355;
    BEQ +                                                                ;90F358;
    CLC                                                                  ;90F35A;
    RTS                                                                  ;90F35B;


  + LDA.W $0A1C                                                          ;90F35C;
    CMP.W #$0081                                                         ;90F35F;
    BEQ .screwAttack                                                     ;90F362;
    CMP.W #$0082                                                         ;90F364;
    BEQ .screwAttack                                                     ;90F367;
    CMP.W #$001B                                                         ;90F369;
    BEQ .spaceJump                                                       ;90F36C;
    CMP.W #$001C                                                         ;90F36E;
    BEQ .spaceJump                                                       ;90F371;
    LDA.W #$0031                                                         ;90F373;
    JSL.L QueueSound_Lib1_Max6                                           ;90F376;
    CLC                                                                  ;90F37A;
    RTS                                                                  ;90F37B;


.spaceJump:
    LDA.W #$003E                                                         ;90F37C;
    JSL.L QueueSound_Lib1_Max6                                           ;90F37F;
    CLC                                                                  ;90F383;
    RTS                                                                  ;90F384;


.screwAttack:
    LDA.W #$0033                                                         ;90F385;
    JSL.L QueueSound_Lib1_Max6                                           ;90F388;
    CLC                                                                  ;90F38C;
    RTS                                                                  ;90F38D;


SamusCommand_5_SetupSamusForBeingDrained_AbleToStand:
    LDA.W #SamusTimerHackHandler_HandleLettingSamusUpFromBeingDrained    ;90F38E; fallthrough to SetupSamusForBeingDrained
    STA.W $0A5A                                                          ;90F391;

SetupSamusForBeingDrained:
    LDA.W #$0054                                                         ;90F394;
    STA.W $0A1C                                                          ;90F397;
    STZ.W $0A9A                                                          ;90F39A;
    JSL.L InitializeSamusPose_1                                          ;90F39D;
    JSL.L Set_Samus_AnimationFrame_if_PoseChanged                        ;90F3A1;
    JSR.W Update_Samus_PreviousPose                                      ;90F3A5;
    STZ.W $0CD0                                                          ;90F3A8;
    JSR.W ClearFlareAnimationState                                       ;90F3AB;
    JSL.L LoadSamusSuitPalette                                           ;90F3AE;
    LDA.W #SamusCurrentStateHandler_SamusIsLocked                        ;90F3B2;
    STA.W $0A42                                                          ;90F3B5;
    LDA.W #RTL_90E8D9                                                    ;90F3B8;
    STA.W $0A44                                                          ;90F3BB;
    SEC                                                                  ;90F3BE;
    RTS                                                                  ;90F3BF;


SamusCommand_18_SetupSamusForBeingDrained_UnableToStand:
    LDA.W #SamusTimerHackHandler_LetSamusFailToStandUpFromBeingDrained   ;90F3C0;
    STA.W $0A5A                                                          ;90F3C3;
    JMP.W SetupSamusForBeingDrained                                      ;90F3C6;


SamusCommand_16_EnableRainbowSamus:
    LDA.W #$8000                                                         ;90F3C9;
    STA.W $0A4A                                                          ;90F3CC;
    LDA.W #$0001                                                         ;90F3CF;
    STA.W $0ACE                                                          ;90F3D2;
    STA.W $0AD0                                                          ;90F3D5;
    STZ.W $0B62                                                          ;90F3D8;
    CLC                                                                  ;90F3DB;
    RTS                                                                  ;90F3DC;


SamusCommand_17_DisableRainbowSamus_StandHerUp:
    STZ.W $0A4A                                                          ;90F3DD;
    STZ.W $0ACE                                                          ;90F3E0;
    STZ.W $0AD0                                                          ;90F3E3;
    STZ.W $0B62                                                          ;90F3E6;
    JSL.L LoadSamusSuitPalette                                           ;90F3E9;
    LDA.W #$0001                                                         ;90F3ED;
    STA.W $0A94                                                          ;90F3F0;
    LDA.W #$000D                                                         ;90F3F3;
    STA.W $0A96                                                          ;90F3F6;
    CLC                                                                  ;90F3F9;
    RTS                                                                  ;90F3FA;


SamusCommand_19_FreezeDrainedSamusAnimation:
    LDA.W #$0001                                                         ;90F3FB;
    STA.W $0A94                                                          ;90F3FE;
    LDA.W #$001C                                                         ;90F401;
    STA.W $0A96                                                          ;90F404;
    SEC                                                                  ;90F407;
    RTS                                                                  ;90F408;


SamusCommand_1A_SamusEntersGunship:
    LDA.W #SamusNewStateHandler_EnteringExitingGunship                   ;90F409;
    STA.W $0A44                                                          ;90F40C;
    CLC                                                                  ;90F40F;
    RTS                                                                  ;90F410;


SamusCommand_1B_LockSamusForReserveTank:
    LDA.W $0A44                                                          ;90F411;
    CMP.W #RTL_90E8D9                                                    ;90F414;
    BEQ .rainbowBeam                                                     ;90F417;
    JMP.W SamusCommand_0_LockSamus                                       ;90F419;


.rainbowBeam:
    SEC                                                                  ;90F41C;
    RTS                                                                  ;90F41D;


SamusCommand_1C_PlaySpinJumpSoundIfSpinJumping:
    LDA.W $0A1F                                                          ;90F41E;
    AND.W #$00FF                                                         ;90F421;
    CMP.W #$0014                                                         ;90F424;
    BEQ .wallJump                                                        ;90F427;
    CMP.W #$0003                                                         ;90F429;
    BEQ .spinJumping                                                     ;90F42C;
    CLC                                                                  ;90F42E;
    RTS                                                                  ;90F42F;


.spinJumping:
    LDA.W $0A1C                                                          ;90F430;
    CMP.W #$0081                                                         ;90F433;
    BEQ .screwAttack                                                     ;90F436;
    CMP.W #$0082                                                         ;90F438;
    BEQ .screwAttack                                                     ;90F43B;
    CMP.W #$001B                                                         ;90F43D;
    BEQ .spaceJump                                                       ;90F440;
    CMP.W #$001C                                                         ;90F442;
    BEQ .spaceJump                                                       ;90F445;
    BRA .spinJump                                                        ;90F447;


.wallJump:
    LDA.W $0A96                                                          ;90F449;
    CMP.W #$0017                                                         ;90F44C;
    BPL .screwAttack                                                     ;90F44F;
    CMP.W #$000D                                                         ;90F451;
    BPL .spaceJump                                                       ;90F454;

.spinJump:
    LDA.W #$0031                                                         ;90F456;
    JSL.L QueueSound_Lib1_Max9                                           ;90F459;
    CLC                                                                  ;90F45D;
    RTS                                                                  ;90F45E;


.spaceJump:
    LDA.W #$003E                                                         ;90F45F;
    JSL.L QueueSound_Lib1_Max9                                           ;90F462;
    CLC                                                                  ;90F466;
    RTS                                                                  ;90F467;


.screwAttack:
    LDA.W #$0033                                                         ;90F468;
    JSL.L QueueSound_Lib1_Max9                                           ;90F46B;
    CLC                                                                  ;90F46F;
    RTS                                                                  ;90F470;


SamusCommand_1D_ClearSoundsWhenGoingThroughDoor:
    LDA.W $0A1F                                                          ;90F471;
    AND.W #$00FF                                                         ;90F474;
    CMP.W #$0003                                                         ;90F477;
    BEQ .endSpaceJumpSFX                                                 ;90F47A;
    CMP.W #$0014                                                         ;90F47C;
    BNE .notSpinning                                                     ;90F47F;

.endSpaceJumpSFX:
    LDA.W #$0032                                                         ;90F481;
    JSL.L QueueSound                                                     ;90F484;
    CLC                                                                  ;90F488;
    RTS                                                                  ;90F489;


.notSpinning:
    LDA.B $8B                                                            ;90F48A;
    BIT.W $09B2                                                          ;90F48C;
    BNE .returnCarryClear                                                ;90F48F;
    LDA.W $0CD0                                                          ;90F491;
    CMP.W #$0010                                                         ;90F494;
    BPL .returnCarryClear                                                ;90F497;
    LDA.W #$0002                                                         ;90F499;
    JSL.L QueueSound                                                     ;90F49C;

.returnCarryClear:
    CLC                                                                  ;90F4A0;
    RTS                                                                  ;90F4A1;


SamusCommand_1E_ResumeSoundsAfterPowerBombExplosion:
    LDA.W $0998                                                          ;90F4A2;
    CMP.W #$0008                                                         ;90F4A5;
    BNE .returnCarryClear                                                ;90F4A8;
    LDA.W $0A1F                                                          ;90F4AA;
    AND.W #$00FF                                                         ;90F4AD;
    CMP.W #$0003                                                         ;90F4B0;
    BEQ .spinJumpSFX                                                     ;90F4B3;
    CMP.W #$0014                                                         ;90F4B5;
    BNE .notSpinning                                                     ;90F4B8;

.spinJumpSFX:
    JSR.W SamusCommand_1C_PlaySpinJumpSoundIfSpinJumping                 ;90F4BA;
    CLC                                                                  ;90F4BD;
    RTS                                                                  ;90F4BE;


.notSpinning:
    LDA.W $0CD0                                                          ;90F4BF;
    CMP.W #$0010                                                         ;90F4C2;
    BMI .returnCarryClear                                                ;90F4C5;
    LDA.W #$0041                                                         ;90F4C7;
    JSL.L QueueSound_Lib1_Max9                                           ;90F4CA;

.returnCarryClear:
    CLC                                                                  ;90F4CE;
    RTS                                                                  ;90F4CF;


SamusCommand_1F_KillGrappleBeam:
    LDA.W $0D32                                                          ;90F4D0;
    CMP.W #GrappleBeamFunction_Inactive                                  ;90F4D3;
    BNE .grappleActive                                                   ;90F4D6;
    CLC                                                                  ;90F4D8;
    RTS                                                                  ;90F4D9;


.grappleActive:
    STZ.W $0D1E                                                          ;90F4DA;
    STZ.W $0D20                                                          ;90F4DD;
    STZ.W $0D34                                                          ;90F4E0;
    STZ.W $0D36                                                          ;90F4E3;
    STZ.W $0A9E                                                          ;90F4E6;
    STZ.W $0CF8                                                          ;90F4E9;
    STZ.W $0CF6                                                          ;90F4EC;
    STZ.W $0CF4                                                          ;90F4EF;
    LDA.W $09A6                                                          ;90F4F2;
    JSL.L Load_Beam_Palette_External                                     ;90F4F5;
    LDA.W #GrappleBeamFunction_Inactive                                  ;90F4F9;
    STA.W $0D32                                                          ;90F4FC;
    LDA.W #SamusDrawingHandler_Default                                   ;90F4FF;
    STA.W $0A5C                                                          ;90F502;
    CLC                                                                  ;90F505;
    RTS                                                                  ;90F506;


if !FEATURE_KEEP_UNREFERENCED
UNUSED_ResumeSounds_90F507:
    LDA.W $0A1F                                                          ;90F507;
    AND.W #$00FF                                                         ;90F50A;
    CMP.W #$0003                                                         ;90F50D;
    BEQ .return                                                          ;90F510;
    CMP.W #$0014                                                         ;90F512;
    BEQ .return                                                          ;90F515;
    LDA.B $8B                                                            ;90F517;
    BIT.W $09B2                                                          ;90F519;
    BEQ .return                                                          ;90F51C;
    LDA.W $0CD0                                                          ;90F51E;
    CMP.W #$0010                                                         ;90F521;
    BMI .return                                                          ;90F524;
    LDA.W #$0041                                                         ;90F526;
    JSL.L QueueSound_Lib1_Max9                                           ;90F529;

.return:
    CLC                                                                  ;90F52D;
    RTS                                                                  ;90F52E;
endif ; !FEATURE_KEEP_UNREFERENCED


DebugCommandHandler:
    RTS                                                                  ;90F52F;

    JMP.W ($0A5E)                                                        ;90F530;


RTS_90F533:
    RTS                                                                  ;90F533;


RTS_90F534:
    RTS                                                                  ;90F534;


DebugCommandHandler_GiveSamusAShinesparkIfYNewlyPressed:
    LDA.B $8F                                                            ;90F535;
    BIT.W #$4000                                                         ;90F537;
    BEQ .return                                                          ;90F53A;
    LDA.W #$00B4                                                         ;90F53C;
    STA.W $0A68                                                          ;90F53F;
    LDA.W #$0001                                                         ;90F542;
    STA.W $0ACC                                                          ;90F545;
    STZ.W $0ACE                                                          ;90F548;

.return:
    RTS                                                                  ;90F54B;


DebugCommandHandler_DisableRainbowSamus_StandHerUp:
    LDA.B $91                                                            ;90F54C;
    BIT.W #$4000                                                         ;90F54E;
    BEQ .return                                                          ;90F551;
    LDA.W #$0017                                                         ;90F553;
    JSL.L Run_Samus_Command                                              ;90F556;
    LDA.W #RTS_90F534                                                    ;90F55A;
    STA.W $0A5E                                                          ;90F55D;

.return:
    RTS                                                                  ;90F560;


DebugCommandHandler_ReleaseSamusFromDrainedPoseIfYNewlyPress:
    LDA.B $8F                                                            ;90F561;
    BIT.W #$4000                                                         ;90F563;
    BEQ .return                                                          ;90F566;
    LDA.W #RTS_90F534                                                    ;90F568;
    STA.W $0A5E                                                          ;90F56B;
    LDA.W #$0002                                                         ;90F56E;
    JSL.L DrainedSamusController                                         ;90F571;

.return:
    RTS                                                                  ;90F575;


Handle_UnspinSFX_CancellingEchoSound_SettingTimeUpGameState:
    PHP                                                                  ;90F576;
    REP #$30                                                             ;90F577;
    LDA.W $0DC0                                                          ;90F579;
    BMI .negative                                                        ;90F57C;
    BEQ .notSet                                                          ;90F57E;
    LDA.B $8B                                                            ;90F580;
    BIT.W $09B2                                                          ;90F582;
    BEQ .pressingShot                                                    ;90F585;
    LDA.W #$0041                                                         ;90F587;
    JSL.L QueueSound_Lib1_Max9                                           ;90F58A;

.pressingShot:
    STZ.W $0DC0                                                          ;90F58E;

.notSet:
    LDA.W $0B40                                                          ;90F591;
    BEQ .echoes                                                          ;90F594;
    LDA.W $0B3E                                                          ;90F596;
    BIT.W #$0400                                                         ;90F599;
    BNE .echoes                                                          ;90F59C;
    STZ.W $0B40                                                          ;90F59E;
    LDA.W #$0025                                                         ;90F5A1;
    JSL.L QueueSound_Lib3_Max15                                          ;90F5A4;

.echoes:
    LDA.W $0A11                                                          ;90F5A8;
    AND.W #$00FF                                                         ;90F5AB;
    CMP.W #$0003                                                         ;90F5AE;
    BEQ .spinJumping                                                     ;90F5B1;
    CMP.W #$0014                                                         ;90F5B3;
    BNE .checkDebug                                                      ;90F5B6;

.spinJumping:
    LDA.W $0A1F                                                          ;90F5B8;
    AND.W #$00FF                                                         ;90F5BB;
    CMP.W #$0003                                                         ;90F5BE;
    BEQ .checkDebug                                                      ;90F5C1;
    CMP.W #$0014                                                         ;90F5C3;
    BEQ .checkDebug                                                      ;90F5C6;
    LDA.W #$0032                                                         ;90F5C8;
    JSL.L QueueSound                                                     ;90F5CB;
    LDA.W $0CD0                                                          ;90F5CF;
    CMP.W #$0010                                                         ;90F5D2;
    BMI .checkDebug                                                      ;90F5D5;
    LDA.B $8B                                                            ;90F5D7;
    BIT.W $09B2                                                          ;90F5D9;
    BEQ .checkDebug                                                      ;90F5DC;

.negative:
    LDA.W #$0001                                                         ;90F5DE;
    STA.W $0DC0                                                          ;90F5E1;

.checkDebug:
    LDA.W $05D1                                                          ;90F5E4;
    BEQ .debugEnd                                                        ;90F5E7;
    LDA.W $0A1C                                                          ;90F5E9;
    BEQ .checkInputs                                                     ;90F5EC;
    CMP.W #$009B                                                         ;90F5EE;
    BEQ .checkInputs                                                     ;90F5F1;
    LDA.W $0DE0                                                          ;90F5F3;
    CMP.W #$0007                                                         ;90F5F6;
    BMI .resetInvincibility                                              ;90F5F9;
    PLP                                                                  ;90F5FB;
    RTS                                                                  ;90F5FC;


.checkInputs:
    LDA.B $8D                                                            ;90F5FD;
    AND.W #$0030                                                         ;90F5FF;
    CMP.W #$0030                                                         ;90F602;
    BNE .debugEnd                                                        ;90F605;
    LDA.B $91                                                            ;90F607;
    BIT.W #$0080                                                         ;90F609;
    BEQ .debugEnd                                                        ;90F60C;
    LDA.W #$0007                                                         ;90F60E;
    STA.W $0DE0                                                          ;90F611;
    BRA .debugEnd                                                        ;90F614;


.resetInvincibility:
    STZ.W $0DE0                                                          ;90F616;

.debugEnd:
    LDA.W #$000E                                                         ;90F619;
    JSL.L CheckIfEvent_inA_HasHappened                                   ;90F61C;
    BCC .return                                                          ;90F620;
    LDA.W $0A5A                                                          ;90F622;
    CMP.W #SamusTimerHackHandler_DrawTimer                               ;90F625;
    BNE .return                                                          ;90F628;
    LDA.W $0998                                                          ;90F62A;
    CMP.W #$0023                                                         ;90F62D;
    BEQ .return                                                          ;90F630;
    LDA.W #$0023                                                         ;90F632;
    STA.W $0998                                                          ;90F635;

.return:
    PLP                                                                  ;90F638;
    RTS                                                                  ;90F639;


Freespace_Bank90_F637:                                                   ;90F63A;
; $9C9 bytes
